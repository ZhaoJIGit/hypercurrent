(function () {
    var E = typeof self == "object" && self.self === self && self || typeof global == "object" && global.global === global && global || this;
    var T = E._;
    var o = Array.prototype,
        c = Object.prototype;
    var P = typeof Symbol !== "undefined" ? Symbol.prototype : null;
    var k = o.push,
        y = o.slice,
        O = c.toString,
        u = c.hasOwnProperty;
    var M = Array.isArray,
        r = Object.keys,
        x = Object.create;
    var g = function () { };
    var K = function (V) {
        if (V instanceof K) {
            return V
        }
        if (!(this instanceof K)) {
            return new K(V)
        }
        this._wrapped = V
    };
    if (typeof exports != "undefined" && !exports.nodeType) {
        if (typeof module != "undefined" && !module.nodeType && module.exports) {
            exports = module.exports = K
        }
        exports._ = K
    } else {
        E._ = K
    }
    K.VERSION = "1.8.3";
    var h = function (X, V, W) {
        if (V === void 0) {
            return X
        }
        switch (W == null ? 3 : W) {
            case 1:
                return function (Y) {
                    return X.call(V, Y)
                };
            case 3:
                return function (Y, Z, aa) {
                    return X.call(V, Y, Z, aa)
                };
            case 4:
                return function (ab, Y, Z, aa) {
                    return X.call(V, ab, Y, Z, aa)
                }
        }
        return function () {
            return X.apply(V, arguments)
        }
    };
    var b;
    var z = function (V, X, W) {
        if (K.iteratee !== b) {
            return K.iteratee(V, X)
        }
        if (V == null) {
            return K.identity
        }
        if (K.isFunction(V)) {
            return h(V, X, W)
        }
        if (K.isObject(V)) {
            return K.matcher(V)
        }
        return K.property(V)
    };
    K.iteratee = b = function (W, V) {
        return z(W, V, Infinity)
    };
    var H = function (V, W) {
        W = W == null ? V.length - 1 : +W;
        return function () {
            var X = Math.max(arguments.length - W, 0);
            var Y = Array(X);
            for (var Z = 0; Z < X; Z++) {
                Y[Z] = arguments[Z + W]
            }
            switch (W) {
                case 0:
                    return V.call(this, Y);
                case 1:
                    return V.call(this, arguments[0], Y);
                case 2:
                    return V.call(this, arguments[0], arguments[1], Y)
            }
            var aa = Array(W + 1);
            for (Z = 0; Z < W; Z++) {
                aa[Z] = arguments[Z]
            }
            aa[W] = Y;
            return V.apply(this, aa)
        }
    };
    var G = function (V) {
        if (!K.isObject(V)) {
            return {}
        }
        if (x) {
            return x(V)
        }
        g.prototype = V;
        var W = new g;
        g.prototype = null;
        return W
    };
    var B = function (V) {
        return function (W) {
            return W == null ? void 0 : W[V]
        }
    };
    var a = Math.pow(2, 53) - 1;
    var D = B("length");
    var t = function (V) {
        var W = D(V);
        return typeof W == "number" && W >= 0 && W <= a
    };
    K.each = K.forEach = function (aa, Y, X) {
        Y = h(Y, X);
        var V, Z;
        if (t(aa)) {
            for (V = 0, Z = aa.length; V < Z; V++) {
                Y(aa[V], V, aa)
            }
        } else {
            var W = K.keys(aa);
            for (V = 0, Z = W.length; V < Z; V++) {
                Y(aa[W[V]], W[V], aa)
            }
        }
        return aa
    };
    K.decode = function (V) {
        if (!!V && (typeof V == "string")) {
            V = V.replace(/&quot;/g, '"').replace(/&#39;/g, "'").replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&amp;/g, "&")
        }
        return V
    };
    K.encode = function (V) {
        if (!!V && (typeof V == "string")) {
            V = V.replace(/\'/g, "&#39;").replace(/\"/g, "&quot;").replace(/>/g, "&gt;").replace(/</g, "&lt;")
        }
        return V
    };
    K.setPasteText = function (ac, aa) {
        if (aa !== "paste") {
            return
        }
        var W = $(ac.srcElement || ac.target);
        if (!W.is("input")) {
            return
        }
        var X = "";
        if (window.clipboardData && window.clipboardData.getData) {
            pastedText = window.clipboardData.getData("text") || ""
        } else {
            pastedText = ac.originalEvent.clipboardData.getData("text/plain") || ""
        }
        var Z = function (af) {
            var ae = 0;
            if (document.selection) {
                var ag = document.selection.createRange();
                var ah = ag.text.length;
                ag.moveStart("character", -$(af).val().length);
                ae = ag.text.length - ah
            } else {
                if (af[0].selectionStart || af[0].selectionStart == "0") {
                    ae = af[0].selectionStart
                }
            }
            return (ae)
        };
        var ab = function (ae) {
            if (navigator.userAgent.indexOf("MSIE") > -1) {
                return document.selection.createRange().text.length + Z(ae)
            } else {
                return ae[0].selectionEnd
            }
        };
        var ad = W.val();
        var Y = Z(W);
        var V = ab(W);
        ad = ad.substr(0, Y) + pastedText + ad.substr(V, ad.length - V);
        W.val(ad)
    };
    K.clearPastedText = function (V, W) {
        if (W !== "paste") {
            return
        }
        $(V.srcElement || V.target).data("pastedText", null)
    };
    K.jsonEncode = function (V) {
        if (!!V && (typeof V == "string")) {
            V = V.replace(/\'/g, "&#39;").replace(/\"/g, "&quot;").replace(/>/g, "&gt;").replace(/</g, "&lt;").replace(/\[/g, "&#91;").replace(/\\/g, "&#92;").replace(/\]/g, "&#93;").replace(/\{/g, "&#123;").replace(/\}/g, "&#125;")
        }
        return V
    };
    K.jsonDecode = function (V) {
        if (!!V && (typeof V == "string")) {
            V = V.replace(/&quot;/g, '"').replace(/&#39;/g, "'").replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&#91;/g, "[").replace(/&#92;/g, "\\").replace(/&#93;/g, "]").replace(/&#123;/g, "{").replace(/&#125;/g, "}")
        }
        return V
    };
    K.htmlDecode = function (W) {
        if (!!W && (typeof W == "string")) {
            var V = document.createElement("div");
            V.innerHTML = W;
            W = V.innerText || V.textContent;
            V = null
        }
        return W
    }, K.htmlEncode = function (V) {
        if (!!V && (typeof V == "string")) {
            V = V.replace(/\"/g, "&quot;").replace(/\'/g, "&#39;").replace(/\n/g, "\\n").replace(/>/g, "&gt;").replace(/</g, "&lt;")
        }
        return V
    }, K.urlEncode = function (V) {
        if (!!V && (typeof V == "string")) {
            V = V.replace(/'/g, "mssq;").replace(/"/g, "msdq;").replace(/#/g, "mshm;").replace(/&/g, "msad")
        }
        return V
    };
    K.urlDecode = function (V) {
        if (!!V && (typeof V == "string")) {
            V = V.replace(/mssq;/g, "'").replace(/msdq;/g, '"').replace(/mshm;/g, "#").replace(/msad/g, "&")
        }
        return V
    };
    K.map = K.collect = function (ac, Y, X) {
        Y = z(Y, X);
        var W = !t(ac) && K.keys(ac),
            aa = (W || ac).length,
            Z = Array(aa);
        for (var ab = 0; ab < aa; ab++) {
            var V = W ? W[ab] : ab;
            Z[ab] = Y(ac[V], V, ac)
        }
        return Z
    };
    var L = function (V) {
        var W = function (ae, aa, ab, ac) {
            var Z = !t(ae) && K.keys(ae),
                Y = (Z || ae).length,
                ad = V > 0 ? 0 : Y - 1;
            if (!ac) {
                ab = ae[Z ? Z[ad] : ad];
                ad += V
            }
            for (; ad >= 0 && ad < Y; ad += V) {
                var X = Z ? Z[ad] : ad;
                ab = aa(ab, ae[X], X, ae)
            }
            return ab
        };
        return function (Y, ab, Z, X) {
            var aa = arguments.length >= 3;
            return W(Y, h(ab, X, 4), Z, aa)
        }
    };
    K.reduce = K.foldl = K.inject = L(1);
    K.reduceRight = K.foldr = L(-1);
    K.find = K.detect = function (Y, W, V) {
        var X = t(Y) ? K.findIndex : K.findKey;
        var Z = X(Y, W, V);
        if (Z !== void 0 && Z !== -1) {
            return Y[Z]
        }
    };
    K.filter = K.select = function (Y, W, V) {
        var X = [];
        W = z(W, V);
        K.each(Y, function (Z, aa, ab) {
            if (W(Z, aa, ab)) {
                X.push(Z)
            }
        });
        return X
    };
    K.reject = function (X, W, V) {
        return K.filter(X, K.negate(z(W)), V)
    };
    K.every = K.all = function (ab, Y, W) {
        Y = z(Y, W);
        var X = !t(ab) && K.keys(ab),
            Z = (X || ab).length;
        for (var aa = 0; aa < Z; aa++) {
            var V = X ? X[aa] : aa;
            if (!Y(ab[V], V, ab)) {
                return false
            }
        }
        return true
    };
    K.some = K.any = function (ab, Y, W) {
        Y = z(Y, W);
        var X = !t(ab) && K.keys(ab),
            Z = (X || ab).length;
        for (var aa = 0; aa < Z; aa++) {
            var V = X ? X[aa] : aa;
            if (Y(ab[V], V, ab)) {
                return true
            }
        }
        return false
    };
    K.contains = K.includes = K.include = function (X, W, V, Y) {
        if (!t(X)) {
            X = K.values(X)
        }
        if (typeof V != "number" || Y) {
            V = 0
        }
        return K.indexOf(X, W, V) >= 0
    };
    K.invoke = H(function (Y, X, W) {
        var V = K.isFunction(X);
        return K.map(Y, function (aa) {
            var Z = V ? X : aa[X];
            return Z == null ? Z : Z.apply(aa, W)
        })
    });
    K.pluck = function (W, V) {
        return K.map(W, K.property(V))
    };
    K.where = function (V, W) {
        return K.filter(V, K.matcher(W))
    };
    K.findWhere = function (V, W) {
        return K.find(V, K.matcher(W))
    };
    K.max = function (ad, Y, X) {
        var ab = -Infinity,
            Z = -Infinity,
            V, ac;
        if (Y == null || (typeof Y == "number" && typeof ad[0] != "object") && ad != null) {
            ad = t(ad) ? ad : K.values(ad);
            for (var W = 0, aa = ad.length; W < aa; W++) {
                V = ad[W];
                if (V != null && V > ab) {
                    ab = V
                }
            }
        } else {
            Y = z(Y, X);
            K.each(ad, function (ag, ae, af) {
                ac = Y(ag, ae, af);
                if (ac > Z || ac === -Infinity && ab === -Infinity) {
                    ab = ag;
                    Z = ac
                }
            })
        }
        return ab
    };
    K.min = function (ad, Y, X) {
        var ab = Infinity,
            Z = Infinity,
            V, ac;
        if (Y == null || (typeof Y == "number" && typeof ad[0] != "object") && ad != null) {
            ad = t(ad) ? ad : K.values(ad);
            for (var W = 0, aa = ad.length; W < aa; W++) {
                V = ad[W];
                if (V != null && V < ab) {
                    ab = V
                }
            }
        } else {
            Y = z(Y, X);
            K.each(ad, function (ag, ae, af) {
                ac = Y(ag, ae, af);
                if (ac < Z || ac === Infinity && ab === Infinity) {
                    ab = ag;
                    Z = ac
                }
            })
        }
        return ab
    };
    K.shuffle = function (V) {
        return K.sample(V, Infinity)
    };
    K.sample = function (ad, X, Y) {
        if (X == null || Y) {
            if (!t(ad)) {
                ad = K.values(ad)
            }
            return ad[K.random(ad.length - 1)]
        }
        var ab = t(ad) ? K.clone(ad) : K.values(ad);
        var aa = D(ab);
        X = Math.max(Math.min(X, aa), 0);
        var W = aa - 1;
        for (var ac = 0; ac < X; ac++) {
            var Z = K.random(ac, W);
            var V = ab[ac];
            ab[ac] = ab[Z];
            ab[Z] = V
        }
        return ab.slice(0, X)
    };
    K.sortBy = function (W, Y, V) {
        var X = 0;
        Y = z(Y, V);
        return K.pluck(K.map(W, function (Z, ab, aa) {
            return {
                value: Z,
                index: X++,
                criteria: Y(Z, ab, aa)
            }
        }).sort(function (ac, aa) {
            var Z = ac.criteria;
            var ab = aa.criteria;
            if (Z !== ab) {
                if (Z > ab || Z === void 0) {
                    return 1
                }
                if (Z < ab || ab === void 0) {
                    return -1
                }
            }
            return ac.index - aa.index
        }), "value")
    };
    var R = function (W, V) {
        return function (Y, Z, X) {
            var aa = V ? [
                [],
                []
            ] : {};
            Z = z(Z, X);
            K.each(Y, function (ab, ac) {
                var ad = Z(ab, ac, Y);
                W(aa, ab, ad)
            });
            return aa
        }
    };
    K.groupBy = R(function (W, V, X) {
        if (K.has(W, X)) {
            W[X].push(V)
        } else {
            W[X] = [V]
        }
    });
    K.indexBy = R(function (W, V, X) {
        W[X] = V
    });
    K.countBy = R(function (W, V, X) {
        if (K.has(W, X)) {
            W[X]++
        } else {
            W[X] = 1
        }
    });
    var f = /[^\ud800-\udfff]|[\ud800-\udbff][\udc00-\udfff]|[\ud800-\udfff]/g;
    K.toArray = function (V) {
        if (!V) {
            return []
        }
        if (K.isArray(V)) {
            return y.call(V)
        }
        if (K.isString(V)) {
            return V.match(f)
        }
        if (t(V)) {
            return K.map(V, K.identity)
        }
        return K.values(V)
    };
    K.size = function (V) {
        if (V == null) {
            return 0
        }
        return t(V) ? V.length : K.keys(V).length
    };
    K.partition = R(function (W, V, X) {
        W[X ? 0 : 1].push(V)
    }, true);
    K.first = K.head = K.take = function (V, X, W) {
        if (V == null) {
            return void 0
        }
        if (X == null || W) {
            return V[0]
        }
        return K.initial(V, V.length - X)
    };
    K.initial = function (V, X, W) {
        return y.call(V, 0, Math.max(0, V.length - (X == null || W ? 1 : X)))
    };
    K.last = function (V, X, W) {
        if (V == null) {
            return void 0
        }
        if (X == null || W) {
            return V[V.length - 1]
        }
        return K.rest(V, Math.max(0, V.length - X))
    };
    K.rest = K.tail = K.drop = function (V, X, W) {
        return y.call(V, X == null || W ? 1 : X)
    };
    K.compact = function (V) {
        return K.filter(V, Boolean)
    };
    var j = function (Z, ae, W, ab) {
        ab = ab || [];
        var V = ab.length;
        for (var ac = 0, ad = D(Z); ac < ad; ac++) {
            var Y = Z[ac];
            if (t(Y) && (K.isArray(Y) || K.isArguments(Y))) {
                if (ae) {
                    var X = 0,
                        aa = Y.length;
                    while (X < aa) {
                        ab[V++] = Y[X++]
                    }
                } else {
                    j(Y, ae, W, ab);
                    V = ab.length
                }
            } else {
                if (!W) {
                    ab[V++] = Y
                }
            }
        }
        return ab
    };
    K.flatten = function (V, W) {
        return j(V, W, false)
    };
    K.without = H(function (W, V) {
        return K.difference(W, V)
    });
    K.uniq = K.unique = function (ae, ab, Z, Y) {
        if (!K.isBoolean(ab)) {
            Y = Z;
            Z = ab;
            ab = false
        }
        if (Z != null) {
            Z = z(Z, Y)
        }
        var ad = [];
        var X = [];
        for (var W = 0, ac = D(ae); W < ac; W++) {
            var V = ae[W],
                aa = Z ? Z(V, W, ae) : V;
            if (ab) {
                if (!W || X !== aa) {
                    ad.push(V)
                }
                X = aa
            } else {
                if (Z) {
                    if (!K.contains(X, aa)) {
                        X.push(aa);
                        ad.push(V)
                    }
                } else {
                    if (!K.contains(ad, V)) {
                        ad.push(V)
                    }
                }
            }
        }
        return ad
    };
    K.union = H(function (V) {
        return K.uniq(j(V, true, true))
    });
    K.intersection = function (aa) {
        var Z = [];
        var V = arguments.length;
        for (var W = 0, Y = D(aa); W < Y; W++) {
            var ab = aa[W];
            if (K.contains(Z, ab)) {
                continue
            }
            var X;
            for (X = 1; X < V; X++) {
                if (!K.contains(arguments[X], ab)) {
                    break
                }
            }
            if (X === V) {
                Z.push(ab)
            }
        }
        return Z
    };
    K.difference = H(function (W, V) {
        V = j(V, true, true);
        return K.filter(W, function (X) {
            return !K.contains(V, X)
        })
    });
    K.unzip = function (V) {
        var X = V && K.max(V, D).length || 0;
        var W = Array(X);
        for (var Y = 0; Y < X; Y++) {
            W[Y] = K.pluck(V, Y)
        }
        return W
    };
    K.zip = H(K.unzip);
    K.object = function (Y, Z) {
        var W = {};
        for (var X = 0, V = D(Y); X < V; X++) {
            if (Z) {
                W[Y[X]] = Z[X]
            } else {
                W[Y[X][0]] = Y[X][1]
            }
        }
        return W
    };
    var v = function (V) {
        return function (W, X, Z) {
            X = z(X, Z);
            var Y = D(W);
            var aa = V > 0 ? 0 : Y - 1;
            for (; aa >= 0 && aa < Y; aa += V) {
                if (X(W[aa], aa, W)) {
                    return aa
                }
            }
            return -1
        }
    };
    K.findIndex = v(1);
    K.findLastIndex = v(-1);
    K.sortedIndex = function (ab, ac, X, W) {
        X = z(X, W, 1);
        var V = X(ac);
        var Y = 0,
            Z = D(ab);
        while (Y < Z) {
            var aa = Math.floor((Y + Z) / 2);
            if (X(ab[aa]) < V) {
                Y = aa + 1
            } else {
                Z = aa
            }
        }
        return Y
    };
    var s = function (V, X, W) {
        return function (Y, ab, ac) {
            var Z = 0,
                aa = D(Y);
            if (typeof ac == "number") {
                if (V > 0) {
                    Z = ac >= 0 ? ac : Math.max(ac + aa, Z)
                } else {
                    aa = ac >= 0 ? Math.min(ac + 1, aa) : ac + aa + 1
                }
            } else {
                if (W && ac && aa) {
                    ac = W(Y, ab);
                    return Y[ac] === ab ? ac : -1
                }
            }
            if (ab !== ab) {
                ac = X(y.call(Y, Z, aa), K.isNaN);
                return ac >= 0 ? ac + Z : -1
            }
            for (ac = V > 0 ? Z : aa - 1; ac >= 0 && ac < aa; ac += V) {
                if (Y[ac] === ab) {
                    return ac
                }
            }
            return -1
        }
    };
    K.indexOfArray = function (X, W) {
        if ((X instanceof Array) && X.length > 0) {
            for (var V = 0; V < X.length; V++) {
                if (K.isEqual(X[V], W)) {
                    return V
                }
            }
        }
        return -1
    };
    K.removeFromArray = function (Y, X) {
        if ((Y instanceof Array) && Y.length > 0) {
            var V = [];
            for (var W = 0; W < Y.length; W++) {
                if (!K.isEqual(Y[W], X)) {
                    V.push(Y[W])
                }
            }
            return V
        }
        return Y
    };
    K.indexOf = s(1, K.findIndex, K.sortedIndex);
    K.lastIndexOf = s(-1, K.findLastIndex);
    K.range = function (W, Y, V) {
        if (Y == null) {
            Y = W || 0;
            W = 0
        }
        if (!V) {
            V = Y < W ? -1 : 1
        }
        var Z = Math.max(Math.ceil((Y - W) / V), 0);
        var X = Array(Z);
        for (var aa = 0; aa < Z; aa++ , W += V) {
            X[aa] = W
        }
        return X
    };
    K.chunk = function (V, W) {
        if (W == null || W < 1) {
            return []
        }
        var Z = [];
        var X = 0,
            Y = V.length;
        while (X < Y) {
            Z.push(y.call(V, X, X += W))
        }
        return Z
    };
    var p = function (Y, Z, X, V, ab) {
        if (!(V instanceof Z)) {
            return Y.apply(X, ab)
        }
        var W = G(Y.prototype);
        var aa = Y.apply(W, ab);
        if (K.isObject(aa)) {
            return aa
        }
        return W
    };
    K.bind = H(function (Y, V, X) {
        if (!K.isFunction(Y)) {
            throw new TypeError("Bind must be called on a function")
        }
        var W = H(function (Z) {
            return p(Y, W, V, this, X.concat(Z))
        });
        return W
    });
    K.partial = H(function (V, Y) {
        var W = K.partial.placeholder;
        var X = function () {
            var Z = 0,
                ab = Y.length;
            var ac = Array(ab);
            for (var aa = 0; aa < ab; aa++) {
                ac[aa] = Y[aa] === W ? arguments[Z++] : Y[aa]
            }
            while (Z < arguments.length) {
                ac.push(arguments[Z++])
            }
            return p(V, X, this, this, ac)
        };
        return X
    });
    K.partial.placeholder = K;
    K.bindAll = H(function (V, X) {
        X = j(X, false, false);
        var W = X.length;
        if (W < 1) {
            throw new Error("bindAll must be passed function names")
        }
        while (W--) {
            var Y = X[W];
            V[Y] = K.bind(V[Y], V)
        }
    });
    K.memoize = function (X, V) {
        var W = function (aa) {
            var Z = W.cache;
            var Y = "" + (V ? V.apply(this, arguments) : aa);
            if (!K.has(Z, Y)) {
                Z[Y] = X.apply(this, arguments)
            }
            return Z[Y]
        };
        W.cache = {};
        return W
    };
    K.delay = H(function (X, W, V) {
        return setTimeout(function () {
            return X.apply(null, V)
        }, W)
    });
    K.defer = K.partial(K.delay, K, 1);
    K.throttle = function (Z, Y, W) {
        var ac, X, ae, ad;
        var aa = 0;
        if (!W) {
            W = {}
        }
        var ab = function () {
            aa = W.leading === false ? 0 : K.now();
            ac = null;
            ad = Z.apply(X, ae);
            if (!ac) {
                X = ae = null
            }
        };
        var V = function () {
            var af = K.now();
            if (!aa && W.leading === false) {
                aa = af
            }
            var ag = Y - (af - aa);
            X = this;
            ae = arguments;
            if (ag <= 0 || ag > Y) {
                if (ac) {
                    clearTimeout(ac);
                    ac = null
                }
                aa = af;
                ad = Z.apply(X, ae);
                if (!ac) {
                    X = ae = null
                }
            } else {
                if (!ac && W.trailing !== false) {
                    ac = setTimeout(ab, ag)
                }
            }
            return ad
        };
        V.cancel = function () {
            clearTimeout(ac);
            aa = 0;
            ac = X = ae = null
        };
        return V
    };
    K.debounce = function (Y, X, W) {
        var aa, ab;
        var Z = function (ac, ad) {
            aa = null;
            if (ad) {
                ab = Y.apply(ac, ad)
            }
        };
        var V = H(function (ad) {
            if (aa) {
                clearTimeout(aa)
            }
            if (W) {
                var ac = !aa;
                aa = setTimeout(Z, X);
                if (ac) {
                    ab = Y.apply(this, ad)
                }
            } else {
                aa = K.delay(Z, X, this, ad)
            }
            return ab
        });
        V.cancel = function () {
            clearTimeout(aa);
            aa = null
        };
        return V
    };
    K.wrap = function (V, W) {
        return K.partial(W, V)
    };
    K.negate = function (V) {
        return function () {
            return !V.apply(this, arguments)
        }
    };
    K.compose = function () {
        var W = arguments;
        var V = W.length - 1;
        return function () {
            var Y = V;
            var X = W[V].apply(this, arguments);
            while (Y--) {
                X = W[Y].call(this, X)
            }
            return X
        }
    };
    K.after = function (V, W) {
        return function () {
            if (--V < 1) {
                return W.apply(this, arguments)
            }
        }
    };
    K.before = function (V, X) {
        var W;
        return function () {
            if (--V > 0) {
                W = X.apply(this, arguments)
            }
            if (V <= 1) {
                X = null
            }
            return W
        }
    };
    K.once = K.partial(K.before, 2);
    K.restArgs = H;
    var N = !{
        toString: null
    }.propertyIsEnumerable("toString");
    var q = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"];
    var C = function (aa, W) {
        var Z = q.length;
        var X = aa.constructor;
        var Y = K.isFunction(X) && X.prototype || c;
        var V = "constructor";
        if (K.has(aa, V) && !K.contains(W, V)) {
            W.push(V)
        }
        while (Z--) {
            V = q[Z];
            if (V in aa && aa[V] !== Y[V] && !K.contains(W, V)) {
                W.push(V)
            }
        }
    };
    K.keys = function (V) {
        if (!K.isObject(V)) {
            return []
        }
        if (r) {
            return r(V)
        }
        var W = [];
        for (var X in V) {
            if (K.has(V, X)) {
                W.push(X)
            }
        }
        if (N) {
            C(V, W)
        }
        return W
    };
    K.allKeys = function (V) {
        if (!K.isObject(V)) {
            return []
        }
        var W = [];
        for (var X in V) {
            W.push(X)
        }
        if (N) {
            C(V, W)
        }
        return W
    };
    K.values = function (V) {
        var Y = K.keys(V);
        var X = Y.length;
        var Z = Array(X);
        for (var W = 0; W < X; W++) {
            Z[W] = V[Y[W]]
        }
        return Z
    };
    K.mapObject = function (ac, Y, X) {
        Y = z(Y, X);
        var W = K.keys(ac),
            aa = W.length,
            Z = {};
        for (var ab = 0; ab < aa; ab++) {
            var V = W[ab];
            Z[V] = Y(ac[V], V, ac)
        }
        return Z
    };
    K.pairs = function (W) {
        var Z = K.keys(W);
        var Y = Z.length;
        var V = Array(Y);
        for (var X = 0; X < Y; X++) {
            V[X] = [Z[X], W[Z[X]]]
        }
        return V
    };
    K.invert = function (Z) {
        var W = {};
        var X = K.keys(Z);
        for (var Y = 0, V = X.length; Y < V; Y++) {
            W[Z[X[Y]]] = X[Y]
        }
        return W
    };
    K.functions = K.methods = function (W) {
        var V = [];
        for (var X in W) {
            if (K.isFunction(W[X])) {
                V.push(X)
            }
        }
        return V.sort()
    };
    var i = function (W, V) {
        return function (ae) {
            var ac = arguments.length;
            if (V) {
                ae = Object(ae)
            }
            if (ac < 2 || ae == null) {
                return ae
            }
            for (var ad = 1; ad < ac; ad++) {
                var X = arguments[ad],
                    ab = W(X),
                    aa = ab.length;
                for (var Y = 0; Y < aa; Y++) {
                    var Z = ab[Y];
                    if (!V || ae[Z] === void 0) {
                        ae[Z] = X[Z]
                    }
                }
            }
            return ae
        }
    };
    K.extend = i(K.allKeys);
    K.extendOwn = K.assign = i(K.keys);
    K.findKey = function (ab, Z, X) {
        Z = z(Z, X);
        var Y = K.keys(ab),
            aa;
        for (var V = 0, W = Y.length; V < W; V++) {
            aa = Y[V];
            if (Z(ab[aa], aa, ab)) {
                return aa
            }
        }
    };
    var l = function (V, X, W) {
        return X in W
    };
    K.pick = H(function (ac, Y) {
        var ab = {},
            Z = Y[0];
        if (ac == null) {
            return ab
        }
        if (K.isFunction(Z)) {
            if (Y.length > 1) {
                Z = h(Z, Y[1])
            }
            Y = K.allKeys(ac)
        } else {
            Z = l;
            Y = j(Y, false, false);
            ac = Object(ac)
        }
        for (var W = 0, aa = Y.length; W < aa; W++) {
            var X = Y[W];
            var V = ac[X];
            if (Z(V, X, ac)) {
                ab[X] = V
            }
        }
        return ab
    });
    K.omit = H(function (W, Y) {
        var V = Y[0],
            X;
        if (K.isFunction(V)) {
            V = K.negate(V);
            if (Y.length > 1) {
                X = Y[1]
            }
        } else {
            Y = K.map(j(Y, false, false), String);
            V = function (aa, Z) {
                return !K.contains(Y, Z)
            }
        }
        return K.pick(W, V, X)
    });
    K.defaults = i(K.allKeys, true);
    K.create = function (X, V) {
        var W = G(X);
        if (V) {
            K.extendOwn(W, V)
        }
        return W
    };
    K.clone = function (V) {
        if (!K.isObject(V)) {
            return V
        }
        return K.isArray(V) ? V.slice() : K.extend({}, V)
    };
    K.tap = function (V, W) {
        W(V);
        return V
    };
    K.isMatch = function (X, aa) {
        var Y = K.keys(aa),
            Z = Y.length;
        if (X == null) {
            return !Z
        }
        var ab = Object(X);
        for (var V = 0; V < Z; V++) {
            var W = Y[V];
            if (aa[W] !== ab[W] || !(W in ab)) {
                return false
            }
        }
        return true
    };
    var w, e;
    w = function (W, X, V, Z) {
        if (W === X) {
            return W !== 0 || 1 / W === 1 / X
        }
        if (W == null || X == null) {
            return W === X
        }
        if (W !== W) {
            return X !== X
        }
        var Y = typeof W;
        if (Y !== "function" && Y !== "object" && typeof X != "object") {
            return false
        }
        return e(W, X, V, Z)
    };
    e = function (aa, ab, X, ac) {
        if (aa instanceof K) {
            aa = aa._wrapped
        }
        if (ab instanceof K) {
            ab = ab._wrapped
        }
        var ae = O.call(aa);
        if (ae !== O.call(ab)) {
            return false
        }
        switch (ae) {
            case "[object RegExp]":
            case "[object String]":
                return "" + aa === "" + ab;
            case "[object Number]":
                if (+aa !== +aa) {
                    return +ab !== +ab
                }
                return +aa === 0 ? 1 / +aa === 1 / ab : +aa === +ab;
            case "[object Date]":
            case "[object Boolean]":
                return +aa === +ab;
            case "[object Symbol]":
                return P.valueOf.call(aa) === P.valueOf.call(ab)
        }
        var af = ae === "[object Array]";
        if (!af) {
            if (typeof aa != "object" || typeof ab != "object") {
                return false
            }
            var V = aa.constructor,
                Z = ab.constructor;
            if (V !== Z && !(K.isFunction(V) && V instanceof V && K.isFunction(Z) && Z instanceof Z) && ("constructor" in aa && "constructor" in ab)) {
                return false
            }
        }
        X = X || [];
        ac = ac || [];
        var ad = X.length;
        while (ad--) {
            if (X[ad] === aa) {
                return ac[ad] === ab
            }
        }
        X.push(aa);
        ac.push(ab);
        if (af) {
            ad = aa.length;
            if (ad !== ab.length) {
                return false
            }
            while (ad--) {
                if (!w(aa[ad], ab[ad], X, ac)) {
                    return false
                }
            }
        } else {
            var Y = K.keys(aa),
                W;
            ad = Y.length;
            if (K.keys(ab).length !== ad) {
                return false
            }
            while (ad--) {
                W = Y[ad];
                if (!(K.has(ab, W) && w(aa[W], ab[W], X, ac))) {
                    return false
                }
            }
        }
        X.pop();
        ac.pop();
        return true
    };
    K.isEqual = function (V, W) {
        return w(V, W)
    };
    K.isEmpty = function (V) {
        if (V == null) {
            return true
        }
        if (t(V) && (K.isArray(V) || K.isString(V) || K.isArguments(V))) {
            return V.length === 0
        }
        return K.keys(V).length === 0
    };
    K.isElement = function (V) {
        return !!(V && V.nodeType === 1)
    };
    K.isArray = M ||
        function (V) {
            return O.call(V) === "[object Array]"
        };
    K.isObject = function (V) {
        var W = typeof V;
        return W === "function" || W === "object" && !!V
    };
    K.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error", "Symbol", "Map", "WeakMap", "Set", "WeakSet"], function (V) {
        K["is" + V] = function (W) {
            return O.call(W) === "[object " + V + "]"
        }
    });
    if (!K.isArguments(arguments)) {
        K.isArguments = function (V) {
            return K.has(V, "callee")
        }
    }
    var F = E.document && E.document.childNodes;
    if (typeof / . / != "function" && typeof Int8Array != "object" && typeof F != "function") {
        K.isFunction = function (V) {
            return typeof V == "function" || false
        }
    }
    K.isFinite = function (V) {
        return !K.isSymbol(V) && isFinite(V) && !isNaN(parseFloat(V))
    };
    K.isNaN = function (V) {
        return isNaN(V) && K.isNumber(V)
    };
    K.isBoolean = function (V) {
        return V === true || V === false || O.call(V) === "[object Boolean]"
    };
    K.isNull = function (V) {
        return V === null
    };
    K.isUndefined = function (V) {
        return V === void 0
    };
    K.has = function (W, V) {
        return W != null && u.call(W, V)
    };
    K.noConflict = function () {
        E._ = T;
        return this
    };
    K.identity = function (V) {
        return V
    };
    K.constant = function (V) {
        return function () {
            return V
        }
    };
    K.noop = function () { };
    K.property = B;
    K.propertyOf = function (V) {
        return V == null ?
            function () { } : function (W) {
                return V[W]
            }
    };
    K.matcher = K.matches = function (V) {
        V = K.extendOwn({}, V);
        return function (W) {
            return K.isMatch(W, V)
        }
    };
    K.times = function (Z, Y, V) {
        var W = Array(Math.max(0, Z));
        Y = h(Y, V, 1);
        for (var X = 0; X < Z; X++) {
            W[X] = Y(X)
        }
        return W
    };
    K.random = function (V, W) {
        if (W == null) {
            W = V;
            V = 0
        }
        return V + Math.floor(Math.random() * (W - V + 1))
    };
    K.now = Date.now ||
        function () {
            return new Date().getTime()
        };
    var m = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#x27;",
        "`": "&#x60;"
    };
    var U = K.invert(m);
    var Q = function (X) {
        var Z = function (aa) {
            return X[aa]
        };
        var V = "(?:" + K.keys(X).join("|") + ")";
        var Y = RegExp(V);
        var W = RegExp(V, "g");
        return function (aa) {
            aa = aa == null ? "" : "" + aa;
            return Y.test(aa) ? aa.replace(W, Z) : aa
        }
    };
    K.escape = Q(m);
    K.unescape = Q(U);
    K.result = function (Y, W, V) {
        var X = Y == null ? void 0 : Y[W];
        if (X === void 0) {
            X = V
        }
        return K.isFunction(X) ? X.call(Y) : X
    };
    var S = 0;
    K.uniqueId = function (V) {
        var W = ++S + "";
        return V ? V + W : W
    };
    K.templateSettings = {
        evaluate: /<%([\s\S]+?)%>/g,
        interpolate: /<%=([\s\S]+?)%>/g,
        escape: /<%-([\s\S]+?)%>/g
    };
    var I = /(.)^/;
    var A = {
        "'": "'",
        "\\": "\\",
        "\r": "r",
        "\n": "n",
        "\u2028": "u2028",
        "\u2029": "u2029"
    };
    var n = /\\|'|\r|\n|\u2028|\u2029/g;
    var J = function (V) {
        return "\\" + A[V]
    };
    K.template = function (ad, V, aa) {
        if (!V && aa) {
            V = aa
        }
        V = K.defaults({}, V, K.templateSettings);
        var X = RegExp([(V.escape || I).source, (V.interpolate || I).source, (V.evaluate || I).source].join("|") + "|$", "g");
        var Y = 0;
        var W = "__p+='";
        ad.replace(X, function (aj, ah, af, ai, ag) {
            W += ad.slice(Y, ag).replace(n, J);
            Y = ag + aj.length;
            if (ah) {
                W += "'+\n((__t=(" + ah + "))==null?'':_.escape(__t))+\n'"
            } else {
                if (af) {
                    W += "'+\n((__t=(" + af + "))==null?'':__t)+\n'"
                } else {
                    if (ai) {
                        W += "';\n" + ai + "\n__p+='"
                    }
                }
            }
            return aj
        });
        W += "';\n";
        if (!V.variable) {
            W = "with(obj||{}){\n" + W + "}\n"
        }
        W = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + W + "return __p;\n";
        var Z;
        try {
            Z = new Function(V.variable || "obj", "_", W)
        } catch (ac) {
            ac.source = W;
            throw ac
        }
        var ab = function (af) {
            return Z.call(this, af, K)
        };
        var ae = V.variable || "obj";
        ab.source = "function(" + ae + "){\n" + W + "}";
        return ab
    };
    K.chain = function (V) {
        var W = K(V);
        W._chain = true;
        return W
    };
    var d = function (W, V) {
        return W._chain ? K(V).chain() : V
    };
    K.mixin = function (V) {
        K.each(K.functions(V), function (X) {
            var W = K[X] = V[X];
            K.prototype[X] = function () {
                var Y = [this._wrapped];
                k.apply(Y, arguments);
                return d(this, W.apply(K, Y))
            }
        })
    };
    K.mixin(K);
    K.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function (W) {
        var V = o[W];
        K.prototype[W] = function () {
            var X = this._wrapped;
            V.apply(X, arguments);
            if ((W === "shift" || W === "splice") && X.length === 0) {
                delete X[0]
            }
            return d(this, X)
        }
    });
    K.each(["concat", "join", "slice"], function (W) {
        var V = o[W];
        K.prototype[W] = function () {
            return d(this, V.apply(this._wrapped, arguments))
        }
    });
    K.prototype.value = function () {
        return this._wrapped
    };
    K.prototype.valueOf = K.prototype.toJSON = K.prototype.value;
    K.prototype.toString = function () {
        return "" + this._wrapped
    };
    if (typeof define == "function" && define.amd) {
        define("underscore", [], function () {
            return K
        })
    }
}());
(function (b) {
    if (typeof exports === "object" && typeof module !== "undefined") {
        module.exports = b()
    } else {
        if (typeof define === "function" && define.amd) {
            define([], b)
        } else {
            var a;
            if (typeof window !== "undefined") {
                a = window
            } else {
                if (typeof global !== "undefined") {
                    a = global
                } else {
                    if (typeof self !== "undefined") {
                        a = self
                    } else {
                        a = this
                    }
                }
            }
            a.pako = b()
        }
    }
})(function () {
    var d, c, b;
    return (function a(k, f, h) {
        function j(i, p) {
            if (!f[i]) {
                if (!k[i]) {
                    var n = typeof require == "function" && require;
                    if (!p && n) {
                        return n(i, !0)
                    }
                    if (e) {
                        return e(i, !0)
                    }
                    var q = new Error("Cannot find module '" + i + "'");
                    throw q.code = "MODULE_NOT_FOUND", q
                }
                var m = f[i] = {
                    exports: {}
                };
                k[i][0].call(m.exports, function (o) {
                    var l = k[i][1][o];
                    return j(l ? l : o)
                }, m, m.exports, a, k, f, h)
            }
            return f[i].exports
        }
        var e = typeof require == "function" && require;
        for (var g = 0; g < h.length; g++) {
            j(h[g])
        }
        return j
    })({
        1: [function (j, h, e) {
            var i = (typeof Uint8Array !== "undefined") && (typeof Uint16Array !== "undefined") && (typeof Int32Array !== "undefined");

            function k(m, l) {
                return Object.prototype.hasOwnProperty.call(m, l)
            }
            e.assign = function (n) {
                var m = Array.prototype.slice.call(arguments, 1);
                while (m.length) {
                    var l = m.shift();
                    if (!l) {
                        continue
                    }
                    if (typeof l !== "object") {
                        throw new TypeError(l + "must be non-object")
                    }
                    for (var o in l) {
                        if (k(l, o)) {
                            n[o] = l[o]
                        }
                    }
                }
                return n
            };
            e.shrinkBuf = function (m, l) {
                if (m.length === l) {
                    return m
                }
                if (m.subarray) {
                    return m.subarray(0, l)
                }
                m.length = l;
                return m
            };
            var g = {
                arraySet: function (q, l, p, n, o) {
                    if (l.subarray && q.subarray) {
                        q.set(l.subarray(p, p + n), o);
                        return
                    }
                    for (var m = 0; m < n; m++) {
                        q[o + m] = l[p + m]
                    }
                },
                flattenChunks: function (q) {
                    var m, o, p, n, r, s;
                    p = 0;
                    for (m = 0, o = q.length; m < o; m++) {
                        p += q[m].length
                    }
                    s = new Uint8Array(p);
                    n = 0;
                    for (m = 0, o = q.length; m < o; m++) {
                        r = q[m];
                        s.set(r, n);
                        n += r.length
                    }
                    return s
                }
            };
            var f = {
                arraySet: function (q, l, p, n, o) {
                    for (var m = 0; m < n; m++) {
                        q[o + m] = l[p + m]
                    }
                },
                flattenChunks: function (l) {
                    return [].concat.apply([], l)
                }
            };
            e.setTyped = function (l) {
                if (l) {
                    e.Buf8 = Uint8Array;
                    e.Buf16 = Uint16Array;
                    e.Buf32 = Int32Array;
                    e.assign(e, g)
                } else {
                    e.Buf8 = Array;
                    e.Buf16 = Array;
                    e.Buf32 = Array;
                    e.assign(e, f)
                }
            };
            e.setTyped(i)
        }, {}],
        2: [function (m, h, n) {
            var e = m("./common");
            var f = true;
            var j = true;
            try {
                String.fromCharCode.apply(null, [0])
            } catch (g) {
                f = false
            }
            try {
                String.fromCharCode.apply(null, new Uint8Array(1))
            } catch (g) {
                j = false
            }
            var k = new e.Buf8(256);
            for (var i = 0; i < 256; i++) {
                k[i] = (i >= 252 ? 6 : i >= 248 ? 5 : i >= 240 ? 4 : i >= 224 ? 3 : i >= 192 ? 2 : 1)
            }
            k[254] = k[254] = 1;
            n.string2buf = function (s) {
                var q, t, u, v, p, o = s.length,
                    r = 0;
                for (v = 0; v < o; v++) {
                    t = s.charCodeAt(v);
                    if ((t & 64512) === 55296 && (v + 1 < o)) {
                        u = s.charCodeAt(v + 1);
                        if ((u & 64512) === 56320) {
                            t = 65536 + ((t - 55296) << 10) + (u - 56320);
                            v++
                        }
                    }
                    r += t < 128 ? 1 : t < 2048 ? 2 : t < 65536 ? 3 : 4
                }
                q = new e.Buf8(r);
                for (p = 0, v = 0; p < r; v++) {
                    t = s.charCodeAt(v);
                    if ((t & 64512) === 55296 && (v + 1 < o)) {
                        u = s.charCodeAt(v + 1);
                        if ((u & 64512) === 56320) {
                            t = 65536 + ((t - 55296) << 10) + (u - 56320);
                            v++
                        }
                    }
                    if (t < 128) {
                        q[p++] = t
                    } else {
                        if (t < 2048) {
                            q[p++] = 192 | (t >>> 6);
                            q[p++] = 128 | (t & 63)
                        } else {
                            if (t < 65536) {
                                q[p++] = 224 | (t >>> 12);
                                q[p++] = 128 | (t >>> 6 & 63);
                                q[p++] = 128 | (t & 63)
                            } else {
                                q[p++] = 240 | (t >>> 18);
                                q[p++] = 128 | (t >>> 12 & 63);
                                q[p++] = 128 | (t >>> 6 & 63);
                                q[p++] = 128 | (t & 63)
                            }
                        }
                    }
                }
                return q
            };

            function l(r, q) {
                if (q < 65537) {
                    if ((r.subarray && j) || (!r.subarray && f)) {
                        return String.fromCharCode.apply(null, e.shrinkBuf(r, q))
                    }
                }
                var o = "";
                for (var p = 0; p < q; p++) {
                    o += String.fromCharCode(r[p])
                }
                return o
            }
            n.buf2binstring = function (o) {
                return l(o, o.length)
            };
            n.binstring2buf = function (q) {
                var r = new e.Buf8(q.length);
                for (var o = 0, p = r.length; o < p; o++) {
                    r[o] = q.charCodeAt(o)
                }
                return r
            };
            n.buf2string = function (r, v) {
                var o, q, u, t;
                var s = v || r.length;
                var p = new Array(s * 2);
                for (q = 0, o = 0; o < s;) {
                    u = r[o++];
                    if (u < 128) {
                        p[q++] = u;
                        continue
                    }
                    t = k[u];
                    if (t > 4) {
                        p[q++] = 65533;
                        o += t - 1;
                        continue
                    }
                    u &= t === 2 ? 31 : t === 3 ? 15 : 7;
                    while (t > 1 && o < s) {
                        u = (u << 6) | (r[o++] & 63);
                        t--
                    }
                    if (t > 1) {
                        p[q++] = 65533;
                        continue
                    }
                    if (u < 65536) {
                        p[q++] = u
                    } else {
                        u -= 65536;
                        p[q++] = 55296 | ((u >> 10) & 1023);
                        p[q++] = 56320 | (u & 1023)
                    }
                }
                return l(p, q)
            };
            n.utf8border = function (p, q) {
                var o;
                q = q || p.length;
                if (q > p.length) {
                    q = p.length
                }
                o = q - 1;
                while (o >= 0 && (p[o] & 192) === 128) {
                    o--
                }
                if (o < 0) {
                    return q
                }
                if (o === 0) {
                    return q
                }
                return (o + k[p[o]] > q) ? o : q
            }
        }, {
            "./common": 1
        }],
        3: [function (f, g, e) {
            function h(m, j, l, i) {
                var o = (m & 65535) | 0,
                    p = ((m >>> 16) & 65535) | 0,
                    k = 0;
                while (l !== 0) {
                    k = l > 2000 ? 2000 : l;
                    l -= k;
                    do {
                        o = (o + j[i++]) | 0;
                        p = (p + o) | 0
                    } while (--k);
                    o %= 65521;
                    p %= 65521
                }
                return (o | (p << 16)) | 0
            }
            g.exports = h
        }, {}],
        4: [function (j, h, e) {
            function f() {
                var o, m = [];
                for (var p = 0; p < 256; p++) {
                    o = p;
                    for (var l = 0; l < 8; l++) {
                        o = ((o & 1) ? (3988292384 ^ (o >>> 1)) : (o >>> 1))
                    }
                    m[p] = o
                }
                return m
            }
            var g = f();

            function i(q, n, o, m) {
                var p = g,
                    k = m + o;
                q ^= -1;
                for (var l = m; l < k; l++) {
                    q = (q >>> 8) ^ p[(q ^ n[l]) & 255]
                }
                return (q ^ (-1))
            }
            h.exports = i
        }, {}],
        5: [function (i, k, C) {
            var ar = i("../utils/common");
            var A = i("./trees");
            var X = i("./adler32");
            var al = i("./crc32");
            var K = i("./messages");
            var ag = 0;
            var x = 1;
            var o = 3;
            var ao = 4;
            var T = 5;
            var ak = 0;
            var J = 1;
            var aF = -2;
            var S = -3;
            var F = -5;
            var aC = -1;
            var z = 1;
            var s = 2;
            var m = 3;
            var U = 4;
            var aj = 0;
            var Z = 2;
            var u = 8;
            var e = 9;
            var au = 15;
            var az = 8;
            var L = 29;
            var aB = 256;
            var aA = aB + 1 + L;
            var G = 30;
            var t = 19;
            var W = 2 * aA + 1;
            var ab = 15;
            var aq = 3;
            var aE = 258;
            var y = (aE + aq + 1);
            var q = 32;
            var R = 42;
            var v = 69;
            var l = 73;
            var av = 91;
            var j = 103;
            var ap = 113;
            var O = 666;
            var V = 1;
            var ai = 2;
            var ae = 3;
            var H = 4;
            var at = 3;

            function aD(aH, aG) {
                aH.msg = K[aG];
                return aG
            }
            function ac(aG) {
                return ((aG) << 1) - ((aG) > 4 ? 9 : 0)
            }
            function P(aH) {
                var aG = aH.length;
                while (--aG >= 0) {
                    aH[aG] = 0
                }
            }
            function M(aI) {
                var aG = aI.state;
                var aH = aG.pending;
                if (aH > aI.avail_out) {
                    aH = aI.avail_out
                }
                if (aH === 0) {
                    return
                }
                ar.arraySet(aI.output, aG.pending_buf, aG.pending_out, aH, aI.next_out);
                aI.next_out += aH;
                aG.pending_out += aH;
                aI.total_out += aH;
                aI.avail_out -= aH;
                aG.pending -= aH;
                if (aG.pending === 0) {
                    aG.pending_out = 0
                }
            }
            function aa(aH, aG) {
                A._tr_flush_block(aH, (aH.block_start >= 0 ? aH.block_start : -1), aH.strstart - aH.block_start, aG);
                aH.block_start = aH.strstart;
                M(aH.strm)
            }
            function af(aH, aG) {
                aH.pending_buf[aH.pending++] = aG
            }
            function f(aH, aG) {
                aH.pending_buf[aH.pending++] = (aG >>> 8) & 255;
                aH.pending_buf[aH.pending++] = aG & 255
            }
            function ay(aG, aI, aK, aJ) {
                var aH = aG.avail_in;
                if (aH > aJ) {
                    aH = aJ
                }
                if (aH === 0) {
                    return 0
                }
                aG.avail_in -= aH;
                ar.arraySet(aI, aG.input, aG.next_in, aH, aK);
                if (aG.state.wrap === 1) {
                    aG.adler = X(aG.adler, aI, aH, aK)
                } else {
                    if (aG.state.wrap === 2) {
                        aG.adler = al(aG.adler, aI, aH, aK)
                    }
                }
                aG.next_in += aH;
                aG.total_in += aH;
                return aH
            }
            function r(aN, aM) {
                var aU = aN.max_chain_length;
                var aS = aN.strstart;
                var aR;
                var aL;
                var aI = aN.prev_length;
                var aJ = aN.nice_match;
                var aH = (aN.strstart > (aN.w_size - y)) ? aN.strstart - (aN.w_size - y) : 0;
                var aP = aN.window;
                var aO = aN.w_mask;
                var aG = aN.prev;
                var aT = aN.strstart + aE;
                var aK = aP[aS + aI - 1];
                var aQ = aP[aS + aI];
                if (aN.prev_length >= aN.good_match) {
                    aU >>= 2
                }
                if (aJ > aN.lookahead) {
                    aJ = aN.lookahead
                }
                do {
                    aR = aM;
                    if (aP[aR + aI] !== aQ || aP[aR + aI - 1] !== aK || aP[aR] !== aP[aS] || aP[++aR] !== aP[aS + 1]) {
                        continue
                    }
                    aS += 2;
                    aR++;
                    do { } while (aP[++aS] === aP[++aR] && aP[++aS] === aP[++aR] && aP[++aS] === aP[++aR] && aP[++aS] === aP[++aR] && aP[++aS] === aP[++aR] && aP[++aS] === aP[++aR] && aP[++aS] === aP[++aR] && aP[++aS] === aP[++aR] && aS < aT);
                    aL = aE - (aT - aS);
                    aS = aT - aE;
                    if (aL > aI) {
                        aN.match_start = aM;
                        aI = aL;
                        if (aL >= aJ) {
                            break
                        }
                        aK = aP[aS + aI - 1];
                        aQ = aP[aS + aI]
                    }
                } while ((aM = aG[aM & aO]) > aH && --aU !== 0);
                if (aI <= aN.lookahead) {
                    return aI
                }
                return aN.lookahead
            }
            function ah(aL) {
                var aM = aL.w_size;
                var aK, aH, aG, aI, aJ;
                do {
                    aI = aL.window_size - aL.lookahead - aL.strstart;
                    if (aL.strstart >= aM + (aM - y)) {
                        ar.arraySet(aL.window, aL.window, aM, aM, 0);
                        aL.match_start -= aM;
                        aL.strstart -= aM;
                        aL.block_start -= aM;
                        aH = aL.hash_size;
                        aK = aH;
                        do {
                            aG = aL.head[--aK];
                            aL.head[aK] = (aG >= aM ? aG - aM : 0)
                        } while (--aH);
                        aH = aM;
                        aK = aH;
                        do {
                            aG = aL.prev[--aK];
                            aL.prev[aK] = (aG >= aM ? aG - aM : 0)
                        } while (--aH);
                        aI += aM
                    }
                    if (aL.strm.avail_in === 0) {
                        break
                    }
                    aH = ay(aL.strm, aL.window, aL.strstart + aL.lookahead, aI);
                    aL.lookahead += aH;
                    if (aL.lookahead + aL.insert >= aq) {
                        aJ = aL.strstart - aL.insert;
                        aL.ins_h = aL.window[aJ];
                        aL.ins_h = ((aL.ins_h << aL.hash_shift) ^ aL.window[aJ + 1]) & aL.hash_mask;
                        while (aL.insert) {
                            aL.ins_h = ((aL.ins_h << aL.hash_shift) ^ aL.window[aJ + aq - 1]) & aL.hash_mask;
                            aL.prev[aJ & aL.w_mask] = aL.head[aL.ins_h];
                            aL.head[aL.ins_h] = aJ;
                            aJ++;
                            aL.insert--;
                            if (aL.lookahead + aL.insert < aq) {
                                break
                            }
                        }
                    }
                } while (aL.lookahead < y && aL.strm.avail_in !== 0)
            }
            function B(aH, aJ) {
                var aG = 65535;
                if (aG > aH.pending_buf_size - 5) {
                    aG = aH.pending_buf_size - 5
                }
                for (; ;) {
                    if (aH.lookahead <= 1) {
                        ah(aH);
                        if (aH.lookahead === 0 && aJ === ag) {
                            return V
                        }
                        if (aH.lookahead === 0) {
                            break
                        }
                    }
                    aH.strstart += aH.lookahead;
                    aH.lookahead = 0;
                    var aI = aH.block_start + aG;
                    if (aH.strstart === 0 || aH.strstart >= aI) {
                        aH.lookahead = aH.strstart - aI;
                        aH.strstart = aI;
                        aa(aH, false);
                        if (aH.strm.avail_out === 0) {
                            return V
                        }
                    }
                    if (aH.strstart - aH.block_start >= (aH.w_size - y)) {
                        aa(aH, false);
                        if (aH.strm.avail_out === 0) {
                            return V
                        }
                    }
                }
                aH.insert = 0;
                if (aJ === ao) {
                    aa(aH, true);
                    if (aH.strm.avail_out === 0) {
                        return ae
                    }
                    return H
                }
                if (aH.strstart > aH.block_start) {
                    aa(aH, false);
                    if (aH.strm.avail_out === 0) {
                        return V
                    }
                }
                return V
            }
            function ad(aG, aJ) {
                var aH;
                var aI;
                for (; ;) {
                    if (aG.lookahead < y) {
                        ah(aG);
                        if (aG.lookahead < y && aJ === ag) {
                            return V
                        }
                        if (aG.lookahead === 0) {
                            break
                        }
                    }
                    aH = 0;
                    if (aG.lookahead >= aq) {
                        aG.ins_h = ((aG.ins_h << aG.hash_shift) ^ aG.window[aG.strstart + aq - 1]) & aG.hash_mask;
                        aH = aG.prev[aG.strstart & aG.w_mask] = aG.head[aG.ins_h];
                        aG.head[aG.ins_h] = aG.strstart
                    }
                    if (aH !== 0 && ((aG.strstart - aH) <= (aG.w_size - y))) {
                        aG.match_length = r(aG, aH)
                    }
                    if (aG.match_length >= aq) {
                        aI = A._tr_tally(aG, aG.strstart - aG.match_start, aG.match_length - aq);
                        aG.lookahead -= aG.match_length;
                        if (aG.match_length <= aG.max_lazy_match && aG.lookahead >= aq) {
                            aG.match_length--;
                            do {
                                aG.strstart++;
                                aG.ins_h = ((aG.ins_h << aG.hash_shift) ^ aG.window[aG.strstart + aq - 1]) & aG.hash_mask;
                                aH = aG.prev[aG.strstart & aG.w_mask] = aG.head[aG.ins_h];
                                aG.head[aG.ins_h] = aG.strstart
                            } while (--aG.match_length !== 0);
                            aG.strstart++
                        } else {
                            aG.strstart += aG.match_length;
                            aG.match_length = 0;
                            aG.ins_h = aG.window[aG.strstart];
                            aG.ins_h = ((aG.ins_h << aG.hash_shift) ^ aG.window[aG.strstart + 1]) & aG.hash_mask
                        }
                    } else {
                        aI = A._tr_tally(aG, 0, aG.window[aG.strstart]);
                        aG.lookahead--;
                        aG.strstart++
                    }
                    if (aI) {
                        aa(aG, false);
                        if (aG.strm.avail_out === 0) {
                            return V
                        }
                    }
                }
                aG.insert = ((aG.strstart < (aq - 1)) ? aG.strstart : aq - 1);
                if (aJ === ao) {
                    aa(aG, true);
                    if (aG.strm.avail_out === 0) {
                        return ae
                    }
                    return H
                }
                if (aG.last_lit) {
                    aa(aG, false);
                    if (aG.strm.avail_out === 0) {
                        return V
                    }
                }
                return ai
            }
            function w(aH, aK) {
                var aI;
                var aJ;
                var aG;
                for (; ;) {
                    if (aH.lookahead < y) {
                        ah(aH);
                        if (aH.lookahead < y && aK === ag) {
                            return V
                        }
                        if (aH.lookahead === 0) {
                            break
                        }
                    }
                    aI = 0;
                    if (aH.lookahead >= aq) {
                        aH.ins_h = ((aH.ins_h << aH.hash_shift) ^ aH.window[aH.strstart + aq - 1]) & aH.hash_mask;
                        aI = aH.prev[aH.strstart & aH.w_mask] = aH.head[aH.ins_h];
                        aH.head[aH.ins_h] = aH.strstart
                    }
                    aH.prev_length = aH.match_length;
                    aH.prev_match = aH.match_start;
                    aH.match_length = aq - 1;
                    if (aI !== 0 && aH.prev_length < aH.max_lazy_match && aH.strstart - aI <= (aH.w_size - y)) {
                        aH.match_length = r(aH, aI);
                        if (aH.match_length <= 5 && (aH.strategy === z || (aH.match_length === aq && aH.strstart - aH.match_start > 4096))) {
                            aH.match_length = aq - 1
                        }
                    }
                    if (aH.prev_length >= aq && aH.match_length <= aH.prev_length) {
                        aG = aH.strstart + aH.lookahead - aq;
                        aJ = A._tr_tally(aH, aH.strstart - 1 - aH.prev_match, aH.prev_length - aq);
                        aH.lookahead -= aH.prev_length - 1;
                        aH.prev_length -= 2;
                        do {
                            if (++aH.strstart <= aG) {
                                aH.ins_h = ((aH.ins_h << aH.hash_shift) ^ aH.window[aH.strstart + aq - 1]) & aH.hash_mask;
                                aI = aH.prev[aH.strstart & aH.w_mask] = aH.head[aH.ins_h];
                                aH.head[aH.ins_h] = aH.strstart
                            }
                        } while (--aH.prev_length !== 0);
                        aH.match_available = 0;
                        aH.match_length = aq - 1;
                        aH.strstart++;
                        if (aJ) {
                            aa(aH, false);
                            if (aH.strm.avail_out === 0) {
                                return V
                            }
                        }
                    } else {
                        if (aH.match_available) {
                            aJ = A._tr_tally(aH, 0, aH.window[aH.strstart - 1]);
                            if (aJ) {
                                aa(aH, false)
                            }
                            aH.strstart++;
                            aH.lookahead--;
                            if (aH.strm.avail_out === 0) {
                                return V
                            }
                        } else {
                            aH.match_available = 1;
                            aH.strstart++;
                            aH.lookahead--
                        }
                    }
                }
                if (aH.match_available) {
                    aJ = A._tr_tally(aH, 0, aH.window[aH.strstart - 1]);
                    aH.match_available = 0
                }
                aH.insert = aH.strstart < aq - 1 ? aH.strstart : aq - 1;
                if (aK === ao) {
                    aa(aH, true);
                    if (aH.strm.avail_out === 0) {
                        return ae
                    }
                    return H
                }
                if (aH.last_lit) {
                    aa(aH, false);
                    if (aH.strm.avail_out === 0) {
                        return V
                    }
                }
                return ai
            }
            function Q(aK, aM) {
                var aG;
                var aH;
                var aJ, aL;
                var aI = aK.window;
                for (; ;) {
                    if (aK.lookahead <= aE) {
                        ah(aK);
                        if (aK.lookahead <= aE && aM === ag) {
                            return V
                        }
                        if (aK.lookahead === 0) {
                            break
                        }
                    }
                    aK.match_length = 0;
                    if (aK.lookahead >= aq && aK.strstart > 0) {
                        aJ = aK.strstart - 1;
                        aH = aI[aJ];
                        if (aH === aI[++aJ] && aH === aI[++aJ] && aH === aI[++aJ]) {
                            aL = aK.strstart + aE;
                            do { } while (aH === aI[++aJ] && aH === aI[++aJ] && aH === aI[++aJ] && aH === aI[++aJ] && aH === aI[++aJ] && aH === aI[++aJ] && aH === aI[++aJ] && aH === aI[++aJ] && aJ < aL);
                            aK.match_length = aE - (aL - aJ);
                            if (aK.match_length > aK.lookahead) {
                                aK.match_length = aK.lookahead
                            }
                        }
                    }
                    if (aK.match_length >= aq) {
                        aG = A._tr_tally(aK, 1, aK.match_length - aq);
                        aK.lookahead -= aK.match_length;
                        aK.strstart += aK.match_length;
                        aK.match_length = 0
                    } else {
                        aG = A._tr_tally(aK, 0, aK.window[aK.strstart]);
                        aK.lookahead--;
                        aK.strstart++
                    }
                    if (aG) {
                        aa(aK, false);
                        if (aK.strm.avail_out === 0) {
                            return V
                        }
                    }
                }
                aK.insert = 0;
                if (aM === ao) {
                    aa(aK, true);
                    if (aK.strm.avail_out === 0) {
                        return ae
                    }
                    return H
                }
                if (aK.last_lit) {
                    aa(aK, false);
                    if (aK.strm.avail_out === 0) {
                        return V
                    }
                }
                return ai
            }
            function D(aG, aI) {
                var aH;
                for (; ;) {
                    if (aG.lookahead === 0) {
                        ah(aG);
                        if (aG.lookahead === 0) {
                            if (aI === ag) {
                                return V
                            }
                            break
                        }
                    }
                    aG.match_length = 0;
                    aH = A._tr_tally(aG, 0, aG.window[aG.strstart]);
                    aG.lookahead--;
                    aG.strstart++;
                    if (aH) {
                        aa(aG, false);
                        if (aG.strm.avail_out === 0) {
                            return V
                        }
                    }
                }
                aG.insert = 0;
                if (aI === ao) {
                    aa(aG, true);
                    if (aG.strm.avail_out === 0) {
                        return ae
                    }
                    return H
                }
                if (aG.last_lit) {
                    aa(aG, false);
                    if (aG.strm.avail_out === 0) {
                        return V
                    }
                }
                return ai
            }
            function Y(aK, aI, aJ, aH, aG) {
                this.good_length = aK;
                this.max_lazy = aI;
                this.nice_length = aJ;
                this.max_chain = aH;
                this.func = aG
            }
            var E;
            E = [new Y(0, 0, 0, 0, B), new Y(4, 4, 8, 4, ad), new Y(4, 5, 16, 8, ad), new Y(4, 6, 32, 32, ad), new Y(4, 4, 16, 16, w), new Y(8, 16, 32, 32, w), new Y(8, 16, 128, 128, w), new Y(8, 32, 128, 256, w), new Y(32, 128, 258, 1024, w), new Y(32, 258, 258, 4096, w)];

            function p(aG) {
                aG.window_size = 2 * aG.w_size;
                P(aG.head);
                aG.max_lazy_match = E[aG.level].max_lazy;
                aG.good_match = E[aG.level].good_length;
                aG.nice_match = E[aG.level].nice_length;
                aG.max_chain_length = E[aG.level].max_chain;
                aG.strstart = 0;
                aG.block_start = 0;
                aG.lookahead = 0;
                aG.insert = 0;
                aG.match_length = aG.prev_length = aq - 1;
                aG.match_available = 0;
                aG.ins_h = 0
            }
            function an() {
                this.strm = null;
                this.status = 0;
                this.pending_buf = null;
                this.pending_buf_size = 0;
                this.pending_out = 0;
                this.pending = 0;
                this.wrap = 0;
                this.gzhead = null;
                this.gzindex = 0;
                this.method = u;
                this.last_flush = -1;
                this.w_size = 0;
                this.w_bits = 0;
                this.w_mask = 0;
                this.window = null;
                this.window_size = 0;
                this.prev = null;
                this.head = null;
                this.ins_h = 0;
                this.hash_size = 0;
                this.hash_bits = 0;
                this.hash_mask = 0;
                this.hash_shift = 0;
                this.block_start = 0;
                this.match_length = 0;
                this.prev_match = 0;
                this.match_available = 0;
                this.strstart = 0;
                this.match_start = 0;
                this.lookahead = 0;
                this.prev_length = 0;
                this.max_chain_length = 0;
                this.max_lazy_match = 0;
                this.level = 0;
                this.strategy = 0;
                this.good_match = 0;
                this.nice_match = 0;
                this.dyn_ltree = new ar.Buf16(W * 2);
                this.dyn_dtree = new ar.Buf16((2 * G + 1) * 2);
                this.bl_tree = new ar.Buf16((2 * t + 1) * 2);
                P(this.dyn_ltree);
                P(this.dyn_dtree);
                P(this.bl_tree);
                this.l_desc = null;
                this.d_desc = null;
                this.bl_desc = null;
                this.bl_count = new ar.Buf16(ab + 1);
                this.heap = new ar.Buf16(2 * aA + 1);
                P(this.heap);
                this.heap_len = 0;
                this.heap_max = 0;
                this.depth = new ar.Buf16(2 * aA + 1);
                P(this.depth);
                this.l_buf = 0;
                this.lit_bufsize = 0;
                this.last_lit = 0;
                this.d_buf = 0;
                this.opt_len = 0;
                this.static_len = 0;
                this.matches = 0;
                this.insert = 0;
                this.bi_buf = 0;
                this.bi_valid = 0
            }
            function ax(aG) {
                var aH;
                if (!aG || !aG.state) {
                    return aD(aG, aF)
                }
                aG.total_in = aG.total_out = 0;
                aG.data_type = Z;
                aH = aG.state;
                aH.pending = 0;
                aH.pending_out = 0;
                if (aH.wrap < 0) {
                    aH.wrap = -aH.wrap
                }
                aH.status = (aH.wrap ? R : ap);
                aG.adler = (aH.wrap === 2) ? 0 : 1;
                aH.last_flush = ag;
                A._tr_init(aH);
                return ak
            }
            function n(aH) {
                var aG = ax(aH);
                if (aG === ak) {
                    p(aH.state)
                }
                return aG
            }
            function aw(aG, aH) {
                if (!aG || !aG.state) {
                    return aF
                }
                if (aG.state.wrap !== 2) {
                    return aF
                }
                aG.state.gzhead = aH;
                return ak
            }
            function am(aI, aH, aN, aJ, aM, aG) {
                if (!aI) {
                    return aF
                }
                var aL = 1;
                if (aH === aC) {
                    aH = 6
                }
                if (aJ < 0) {
                    aL = 0;
                    aJ = -aJ
                } else {
                    if (aJ > 15) {
                        aL = 2;
                        aJ -= 16
                    }
                }
                if (aM < 1 || aM > e || aN !== u || aJ < 8 || aJ > 15 || aH < 0 || aH > 9 || aG < 0 || aG > U) {
                    return aD(aI, aF)
                }
                if (aJ === 8) {
                    aJ = 9
                }
                var aK = new an();
                aI.state = aK;
                aK.strm = aI;
                aK.wrap = aL;
                aK.gzhead = null;
                aK.w_bits = aJ;
                aK.w_size = 1 << aK.w_bits;
                aK.w_mask = aK.w_size - 1;
                aK.hash_bits = aM + 7;
                aK.hash_size = 1 << aK.hash_bits;
                aK.hash_mask = aK.hash_size - 1;
                aK.hash_shift = ~~((aK.hash_bits + aq - 1) / aq);
                aK.window = new ar.Buf8(aK.w_size * 2);
                aK.head = new ar.Buf16(aK.hash_size);
                aK.prev = new ar.Buf16(aK.w_size);
                aK.lit_bufsize = 1 << (aM + 6);
                aK.pending_buf_size = aK.lit_bufsize * 4;
                aK.pending_buf = new ar.Buf8(aK.pending_buf_size);
                aK.d_buf = 1 * aK.lit_bufsize;
                aK.l_buf = (1 + 2) * aK.lit_bufsize;
                aK.level = aH;
                aK.strategy = aG;
                aK.method = aN;
                return n(aI)
            }
            function I(aG, aH) {
                return am(aG, aH, u, au, az, aj)
            }
            function h(aK, aO) {
                var aH, aL;
                var aN, aJ;
                if (!aK || !aK.state || aO > T || aO < 0) {
                    return aK ? aD(aK, aF) : aF
                }
                aL = aK.state;
                if (!aK.output || (!aK.input && aK.avail_in !== 0) || (aL.status === O && aO !== ao)) {
                    return aD(aK, (aK.avail_out === 0) ? F : aF)
                }
                aL.strm = aK;
                aH = aL.last_flush;
                aL.last_flush = aO;
                if (aL.status === R) {
                    if (aL.wrap === 2) {
                        aK.adler = 0;
                        af(aL, 31);
                        af(aL, 139);
                        af(aL, 8);
                        if (!aL.gzhead) {
                            af(aL, 0);
                            af(aL, 0);
                            af(aL, 0);
                            af(aL, 0);
                            af(aL, 0);
                            af(aL, aL.level === 9 ? 2 : (aL.strategy >= s || aL.level < 2 ? 4 : 0));
                            af(aL, at);
                            aL.status = ap
                        } else {
                            af(aL, (aL.gzhead.text ? 1 : 0) + (aL.gzhead.hcrc ? 2 : 0) + (!aL.gzhead.extra ? 0 : 4) + (!aL.gzhead.name ? 0 : 8) + (!aL.gzhead.comment ? 0 : 16));
                            af(aL, aL.gzhead.time & 255);
                            af(aL, (aL.gzhead.time >> 8) & 255);
                            af(aL, (aL.gzhead.time >> 16) & 255);
                            af(aL, (aL.gzhead.time >> 24) & 255);
                            af(aL, aL.level === 9 ? 2 : (aL.strategy >= s || aL.level < 2 ? 4 : 0));
                            af(aL, aL.gzhead.os & 255);
                            if (aL.gzhead.extra && aL.gzhead.extra.length) {
                                af(aL, aL.gzhead.extra.length & 255);
                                af(aL, (aL.gzhead.extra.length >> 8) & 255)
                            }
                            if (aL.gzhead.hcrc) {
                                aK.adler = al(aK.adler, aL.pending_buf, aL.pending, 0)
                            }
                            aL.gzindex = 0;
                            aL.status = v
                        }
                    } else {
                        var aI = (u + ((aL.w_bits - 8) << 4)) << 8;
                        var aG = -1;
                        if (aL.strategy >= s || aL.level < 2) {
                            aG = 0
                        } else {
                            if (aL.level < 6) {
                                aG = 1
                            } else {
                                if (aL.level === 6) {
                                    aG = 2
                                } else {
                                    aG = 3
                                }
                            }
                        }
                        aI |= (aG << 6);
                        if (aL.strstart !== 0) {
                            aI |= q
                        }
                        aI += 31 - (aI % 31);
                        aL.status = ap;
                        f(aL, aI);
                        if (aL.strstart !== 0) {
                            f(aL, aK.adler >>> 16);
                            f(aL, aK.adler & 65535)
                        }
                        aK.adler = 1
                    }
                }
                if (aL.status === v) {
                    if (aL.gzhead.extra) {
                        aN = aL.pending;
                        while (aL.gzindex < (aL.gzhead.extra.length & 65535)) {
                            if (aL.pending === aL.pending_buf_size) {
                                if (aL.gzhead.hcrc && aL.pending > aN) {
                                    aK.adler = al(aK.adler, aL.pending_buf, aL.pending - aN, aN)
                                }
                                M(aK);
                                aN = aL.pending;
                                if (aL.pending === aL.pending_buf_size) {
                                    break
                                }
                            }
                            af(aL, aL.gzhead.extra[aL.gzindex] & 255);
                            aL.gzindex++
                        }
                        if (aL.gzhead.hcrc && aL.pending > aN) {
                            aK.adler = al(aK.adler, aL.pending_buf, aL.pending - aN, aN)
                        }
                        if (aL.gzindex === aL.gzhead.extra.length) {
                            aL.gzindex = 0;
                            aL.status = l
                        }
                    } else {
                        aL.status = l
                    }
                }
                if (aL.status === l) {
                    if (aL.gzhead.name) {
                        aN = aL.pending;
                        do {
                            if (aL.pending === aL.pending_buf_size) {
                                if (aL.gzhead.hcrc && aL.pending > aN) {
                                    aK.adler = al(aK.adler, aL.pending_buf, aL.pending - aN, aN)
                                }
                                M(aK);
                                aN = aL.pending;
                                if (aL.pending === aL.pending_buf_size) {
                                    aJ = 1;
                                    break
                                }
                            }
                            if (aL.gzindex < aL.gzhead.name.length) {
                                aJ = aL.gzhead.name.charCodeAt(aL.gzindex++) & 255
                            } else {
                                aJ = 0
                            }
                            af(aL, aJ)
                        } while (aJ !== 0);
                        if (aL.gzhead.hcrc && aL.pending > aN) {
                            aK.adler = al(aK.adler, aL.pending_buf, aL.pending - aN, aN)
                        }
                        if (aJ === 0) {
                            aL.gzindex = 0;
                            aL.status = av
                        }
                    } else {
                        aL.status = av
                    }
                }
                if (aL.status === av) {
                    if (aL.gzhead.comment) {
                        aN = aL.pending;
                        do {
                            if (aL.pending === aL.pending_buf_size) {
                                if (aL.gzhead.hcrc && aL.pending > aN) {
                                    aK.adler = al(aK.adler, aL.pending_buf, aL.pending - aN, aN)
                                }
                                M(aK);
                                aN = aL.pending;
                                if (aL.pending === aL.pending_buf_size) {
                                    aJ = 1;
                                    break
                                }
                            }
                            if (aL.gzindex < aL.gzhead.comment.length) {
                                aJ = aL.gzhead.comment.charCodeAt(aL.gzindex++) & 255
                            } else {
                                aJ = 0
                            }
                            af(aL, aJ)
                        } while (aJ !== 0);
                        if (aL.gzhead.hcrc && aL.pending > aN) {
                            aK.adler = al(aK.adler, aL.pending_buf, aL.pending - aN, aN)
                        }
                        if (aJ === 0) {
                            aL.status = j
                        }
                    } else {
                        aL.status = j
                    }
                }
                if (aL.status === j) {
                    if (aL.gzhead.hcrc) {
                        if (aL.pending + 2 > aL.pending_buf_size) {
                            M(aK)
                        }
                        if (aL.pending + 2 <= aL.pending_buf_size) {
                            af(aL, aK.adler & 255);
                            af(aL, (aK.adler >> 8) & 255);
                            aK.adler = 0;
                            aL.status = ap
                        }
                    } else {
                        aL.status = ap
                    }
                }
                if (aL.pending !== 0) {
                    M(aK);
                    if (aK.avail_out === 0) {
                        aL.last_flush = -1;
                        return ak
                    }
                } else {
                    if (aK.avail_in === 0 && ac(aO) <= ac(aH) && aO !== ao) {
                        return aD(aK, F)
                    }
                }
                if (aL.status === O && aK.avail_in !== 0) {
                    return aD(aK, F)
                }
                if (aK.avail_in !== 0 || aL.lookahead !== 0 || (aO !== ag && aL.status !== O)) {
                    var aM = (aL.strategy === s) ? D(aL, aO) : (aL.strategy === m ? Q(aL, aO) : E[aL.level].func(aL, aO));
                    if (aM === ae || aM === H) {
                        aL.status = O
                    }
                    if (aM === V || aM === ae) {
                        if (aK.avail_out === 0) {
                            aL.last_flush = -1
                        }
                        return ak
                    }
                    if (aM === ai) {
                        if (aO === x) {
                            A._tr_align(aL)
                        } else {
                            if (aO !== T) {
                                A._tr_stored_block(aL, 0, 0, false);
                                if (aO === o) {
                                    P(aL.head);
                                    if (aL.lookahead === 0) {
                                        aL.strstart = 0;
                                        aL.block_start = 0;
                                        aL.insert = 0
                                    }
                                }
                            }
                        }
                        M(aK);
                        if (aK.avail_out === 0) {
                            aL.last_flush = -1;
                            return ak
                        }
                    }
                }
                if (aO !== ao) {
                    return ak
                }
                if (aL.wrap <= 0) {
                    return J
                }
                if (aL.wrap === 2) {
                    af(aL, aK.adler & 255);
                    af(aL, (aK.adler >> 8) & 255);
                    af(aL, (aK.adler >> 16) & 255);
                    af(aL, (aK.adler >> 24) & 255);
                    af(aL, aK.total_in & 255);
                    af(aL, (aK.total_in >> 8) & 255);
                    af(aL, (aK.total_in >> 16) & 255);
                    af(aL, (aK.total_in >> 24) & 255)
                } else {
                    f(aL, aK.adler >>> 16);
                    f(aL, aK.adler & 65535)
                }
                M(aK);
                if (aL.wrap > 0) {
                    aL.wrap = -aL.wrap
                }
                return aL.pending !== 0 ? ak : J
            }
            function g(aG) {
                var aH;
                if (!aG || !aG.state) {
                    return aF
                }
                aH = aG.state.status;
                if (aH !== R && aH !== v && aH !== l && aH !== av && aH !== j && aH !== ap && aH !== O) {
                    return aD(aG, aF)
                }
                aG.state = null;
                return aH === ap ? aD(aG, S) : ak
            }
            function N(aK, aI) {
                var aH = aI.length;
                var aP;
                var aM, aG;
                var aJ;
                var aO;
                var aL;
                var aN;
                var aQ;
                if (!aK || !aK.state) {
                    return aF
                }
                aP = aK.state;
                aJ = aP.wrap;
                if (aJ === 2 || (aJ === 1 && aP.status !== R) || aP.lookahead) {
                    return aF
                }
                if (aJ === 1) {
                    aK.adler = X(aK.adler, aI, aH, 0)
                }
                aP.wrap = 0;
                if (aH >= aP.w_size) {
                    if (aJ === 0) {
                        P(aP.head);
                        aP.strstart = 0;
                        aP.block_start = 0;
                        aP.insert = 0
                    }
                    aQ = new ar.Buf8(aP.w_size);
                    ar.arraySet(aQ, aI, aH - aP.w_size, aP.w_size, 0);
                    aI = aQ;
                    aH = aP.w_size
                }
                aO = aK.avail_in;
                aL = aK.next_in;
                aN = aK.input;
                aK.avail_in = aH;
                aK.next_in = 0;
                aK.input = aI;
                ah(aP);
                while (aP.lookahead >= aq) {
                    aM = aP.strstart;
                    aG = aP.lookahead - (aq - 1);
                    do {
                        aP.ins_h = ((aP.ins_h << aP.hash_shift) ^ aP.window[aM + aq - 1]) & aP.hash_mask;
                        aP.prev[aM & aP.w_mask] = aP.head[aP.ins_h];
                        aP.head[aP.ins_h] = aM;
                        aM++
                    } while (--aG);
                    aP.strstart = aM;
                    aP.lookahead = aq - 1;
                    ah(aP)
                }
                aP.strstart += aP.lookahead;
                aP.block_start = aP.strstart;
                aP.insert = aP.lookahead;
                aP.lookahead = 0;
                aP.match_length = aP.prev_length = aq - 1;
                aP.match_available = 0;
                aK.next_in = aL;
                aK.input = aN;
                aK.avail_in = aO;
                aP.wrap = aJ;
                return ak
            }
            C.deflateInit = I;
            C.deflateInit2 = am;
            C.deflateReset = n;
            C.deflateResetKeep = ax;
            C.deflateSetHeader = aw;
            C.deflate = h;
            C.deflateEnd = g;
            C.deflateSetDictionary = N;
            C.deflateInfo = "pako deflate (from Nodeca project)"
        }, {
            "../utils/common": 1,
            "./adler32": 3,
            "./crc32": 4,
            "./messages": 6,
            "./trees": 7
        }],
        6: [function (f, g, e) {
            g.exports = {
                2: "need dictionary",
                1: "stream end",
                0: "",
                "-1": "file error",
                "-2": "stream error",
                "-3": "data error",
                "-4": "insufficient memory",
                "-5": "buffer error",
                "-6": "incompatible version"
            }
        }, {}],
        7: [function (i, k, y) {
            var ak = i("../utils/common");
            var N = 4;
            var ab = 0;
            var av = 1;
            var T = 2;

            function ad(ay) {
                var ax = ay.length;
                while (--ax >= 0) {
                    ay[ax] = 0
                }
            }
            var P = 0;
            var s = 1;
            var Z = 2;
            var aj = 3;
            var aw = 258;
            var G = 29;
            var at = 256;
            var aa = at + 1 + G;
            var z = 30;
            var r = 19;
            var Q = 2 * aa + 1;
            var Y = 15;
            var E = 16;
            var j = 7;
            var U = 256;
            var K = 16;
            var q = 17;
            var am = 18;
            var M = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];
            var f = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];
            var e = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7];
            var V = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
            var R = 512;
            var D = new Array((aa + 2) * 2);
            ad(D);
            var w = new Array(z * 2);
            ad(w);
            var u = new Array(R);
            ad(u);
            var O = new Array(aw - aj + 1);
            ad(O);
            var h = new Array(G);
            ad(h);
            var p = new Array(z);
            ad(p);

            function J(ax, az, aB, aA, ay) {
                this.static_tree = ax;
                this.extra_bits = az;
                this.extra_base = aB;
                this.elems = aA;
                this.max_length = ay;
                this.has_stree = ax && ax.length
            }
            var ah;
            var an;
            var I;

            function t(ax, ay) {
                this.dyn_tree = ax;
                this.max_code = 0;
                this.stat_desc = ay
            }
            function ao(ax) {
                return ax < 256 ? u[ax] : u[256 + (ax >>> 7)]
            }
            function o(ax, ay) {
                ax.pending_buf[ax.pending++] = (ay) & 255;
                ax.pending_buf[ax.pending++] = (ay >>> 8) & 255
            }
            function ai(ay, ax, az) {
                if (ay.bi_valid > (E - az)) {
                    ay.bi_buf |= (ax << ay.bi_valid) & 65535;
                    o(ay, ay.bi_buf);
                    ay.bi_buf = ax >> (E - ay.bi_valid);
                    ay.bi_valid += az - E
                } else {
                    ay.bi_buf |= (ax << ay.bi_valid) & 65535;
                    ay.bi_valid += az
                }
            }
            function ae(ax, ay, az) {
                ai(ax, az[ay * 2], az[ay * 2 + 1])
            }
            function ag(ay, az) {
                var ax = 0;
                do {
                    ax |= ay & 1;
                    ay >>>= 1;
                    ax <<= 1
                } while (--az > 0);
                return ax >>> 1
            }
            function n(ax) {
                if (ax.bi_valid === 16) {
                    o(ax, ax.bi_buf);
                    ax.bi_buf = 0;
                    ax.bi_valid = 0
                } else {
                    if (ax.bi_valid >= 8) {
                        ax.pending_buf[ax.pending++] = ax.bi_buf & 255;
                        ax.bi_buf >>= 8;
                        ax.bi_valid -= 8
                    }
                }
            }
            function al(aA, aB) {
                var aH = aB.dyn_tree;
                var aJ = aB.max_code;
                var aI = aB.stat_desc.static_tree;
                var aC = aB.stat_desc.has_stree;
                var aM = aB.stat_desc.extra_bits;
                var az = aB.stat_desc.extra_base;
                var ay = aB.stat_desc.max_length;
                var aD;
                var aG, aF;
                var ax;
                var aE;
                var aK;
                var aL = 0;
                for (ax = 0; ax <= Y; ax++) {
                    aA.bl_count[ax] = 0
                }
                aH[aA.heap[aA.heap_max] * 2 + 1] = 0;
                for (aD = aA.heap_max + 1; aD < Q; aD++) {
                    aG = aA.heap[aD];
                    ax = aH[aH[aG * 2 + 1] * 2 + 1] + 1;
                    if (ax > ay) {
                        ax = ay;
                        aL++
                    }
                    aH[aG * 2 + 1] = ax;
                    if (aG > aJ) {
                        continue
                    }
                    aA.bl_count[ax]++;
                    aE = 0;
                    if (aG >= az) {
                        aE = aM[aG - az]
                    }
                    aK = aH[aG * 2];
                    aA.opt_len += aK * (ax + aE);
                    if (aC) {
                        aA.static_len += aK * (aI[aG * 2 + 1] + aE)
                    }
                }
                if (aL === 0) {
                    return
                }
                do {
                    ax = ay - 1;
                    while (aA.bl_count[ax] === 0) {
                        ax--
                    }
                    aA.bl_count[ax]--;
                    aA.bl_count[ax + 1] += 2;
                    aA.bl_count[ay]--;
                    aL -= 2
                } while (aL > 0);
                for (ax = ay; ax !== 0; ax--) {
                    aG = aA.bl_count[ax];
                    while (aG !== 0) {
                        aF = aA.heap[--aD];
                        if (aF > aJ) {
                            continue
                        }
                        if (aH[aF * 2 + 1] !== ax) {
                            aA.opt_len += (ax - aH[aF * 2 + 1]) * aH[aF * 2];
                            aH[aF * 2 + 1] = ax
                        }
                        aG--
                    }
                }
            }
            function B(ay, aD, aE) {
                var aC = new Array(Y + 1);
                var ax = 0;
                var az;
                var aA;
                for (az = 1; az <= Y; az++) {
                    aC[az] = ax = (ax + aE[az - 1]) << 1
                }
                for (aA = 0; aA <= aD; aA++) {
                    var aB = ay[aA * 2 + 1];
                    if (aB === 0) {
                        continue
                    }
                    ay[aA * 2] = ag(aC[aB]++, aB)
                }
            }
            function S() {
                var aA;
                var az;
                var aC;
                var ax;
                var ay;
                var aB = new Array(Y + 1);
                aC = 0;
                for (ax = 0; ax < G - 1; ax++) {
                    h[ax] = aC;
                    for (aA = 0; aA < (1 << M[ax]); aA++) {
                        O[aC++] = ax
                    }
                }
                O[aC - 1] = ax;
                ay = 0;
                for (ax = 0; ax < 16; ax++) {
                    p[ax] = ay;
                    for (aA = 0; aA < (1 << f[ax]); aA++) {
                        u[ay++] = ax
                    }
                }
                ay >>= 7;
                for (; ax < z; ax++) {
                    p[ax] = ay << 7;
                    for (aA = 0; aA < (1 << (f[ax] - 7)); aA++) {
                        u[256 + ay++] = ax
                    }
                }
                for (az = 0; az <= Y; az++) {
                    aB[az] = 0
                }
                aA = 0;
                while (aA <= 143) {
                    D[aA * 2 + 1] = 8;
                    aA++;
                    aB[8]++
                }
                while (aA <= 255) {
                    D[aA * 2 + 1] = 9;
                    aA++;
                    aB[9]++
                }
                while (aA <= 279) {
                    D[aA * 2 + 1] = 7;
                    aA++;
                    aB[7]++
                }
                while (aA <= 287) {
                    D[aA * 2 + 1] = 8;
                    aA++;
                    aB[8]++
                }
                B(D, aa + 1, aB);
                for (aA = 0; aA < z; aA++) {
                    w[aA * 2 + 1] = 5;
                    w[aA * 2] = ag(aA, 5)
                }
                ah = new J(D, M, at + 1, aa, Y);
                an = new J(w, f, 0, z, Y);
                I = new J(new Array(0), e, 0, r, j)
            }
            function aq(ay) {
                var ax;
                for (ax = 0; ax < aa; ax++) {
                    ay.dyn_ltree[ax * 2] = 0
                }
                for (ax = 0; ax < z; ax++) {
                    ay.dyn_dtree[ax * 2] = 0
                }
                for (ax = 0; ax < r; ax++) {
                    ay.bl_tree[ax * 2] = 0
                }
                ay.dyn_ltree[U * 2] = 1;
                ay.opt_len = ay.static_len = 0;
                ay.last_lit = ay.matches = 0
            }
            function L(ax) {
                if (ax.bi_valid > 8) {
                    o(ax, ax.bi_buf)
                } else {
                    if (ax.bi_valid > 0) {
                        ax.pending_buf[ax.pending++] = ax.bi_buf
                    }
                }
                ax.bi_buf = 0;
                ax.bi_valid = 0
            }
            function F(ax, az, ay, aA) {
                L(ax);
                if (aA) {
                    o(ax, ay);
                    o(ax, ~ay)
                }
                ak.arraySet(ax.pending_buf, ax.window, az, ay, ax.pending);
                ax.pending += ay
            }
            function A(ay, aA, az, aB) {
                var ax = aA * 2;
                var aC = az * 2;
                return (ay[ax] < ay[aC] || (ay[ax] === ay[aC] && aB[aA] <= aB[az]))
            }
            function ap(ay, aA, az) {
                var aB = ay.heap[az];
                var ax = az << 1;
                while (ax <= ay.heap_len) {
                    if (ax < ay.heap_len && A(aA, ay.heap[ax + 1], ay.heap[ax], ay.depth)) {
                        ax++
                    }
                    if (A(aA, aB, ay.heap[ax], ay.depth)) {
                        break
                    }
                    ay.heap[az] = ay.heap[ax];
                    az = ax;
                    ax <<= 1
                }
                ay.heap[az] = aB
            }
            function l(aD, aB, ay) {
                var aA;
                var aC;
                var aE = 0;
                var az;
                var ax;
                if (aD.last_lit !== 0) {
                    do {
                        aA = (aD.pending_buf[aD.d_buf + aE * 2] << 8) | (aD.pending_buf[aD.d_buf + aE * 2 + 1]);
                        aC = aD.pending_buf[aD.l_buf + aE];
                        aE++;
                        if (aA === 0) {
                            ae(aD, aC, aB)
                        } else {
                            az = O[aC];
                            ae(aD, az + at + 1, aB);
                            ax = M[az];
                            if (ax !== 0) {
                                aC -= h[az];
                                ai(aD, aC, ax)
                            }
                            aA--;
                            az = ao(aA);
                            ae(aD, az, ay);
                            ax = f[az];
                            if (ax !== 0) {
                                aA -= p[az];
                                ai(aD, aA, ax)
                            }
                        }
                    } while (aE < aD.last_lit)
                }
                ae(aD, U, aB)
            }
            function m(aE, ax) {
                var ay = ax.dyn_tree;
                var aC = ax.stat_desc.static_tree;
                var aB = ax.stat_desc.has_stree;
                var aF = ax.stat_desc.elems;
                var aA, az;
                var aD = -1;
                var aG;
                aE.heap_len = 0;
                aE.heap_max = Q;
                for (aA = 0; aA < aF; aA++) {
                    if (ay[aA * 2] !== 0) {
                        aE.heap[++aE.heap_len] = aD = aA;
                        aE.depth[aA] = 0
                    } else {
                        ay[aA * 2 + 1] = 0
                    }
                }
                while (aE.heap_len < 2) {
                    aG = aE.heap[++aE.heap_len] = (aD < 2 ? ++aD : 0);
                    ay[aG * 2] = 1;
                    aE.depth[aG] = 0;
                    aE.opt_len--;
                    if (aB) {
                        aE.static_len -= aC[aG * 2 + 1]
                    }
                }
                ax.max_code = aD;
                for (aA = (aE.heap_len >> 1); aA >= 1; aA--) {
                    ap(aE, ay, aA)
                }
                aG = aF;
                do {
                    aA = aE.heap[1];
                    aE.heap[1] = aE.heap[aE.heap_len--];
                    ap(aE, ay, 1);
                    az = aE.heap[1];
                    aE.heap[--aE.heap_max] = aA;
                    aE.heap[--aE.heap_max] = az;
                    ay[aG * 2] = ay[aA * 2] + ay[az * 2];
                    aE.depth[aG] = (aE.depth[aA] >= aE.depth[az] ? aE.depth[aA] : aE.depth[az]) + 1;
                    ay[aA * 2 + 1] = ay[az * 2 + 1] = aG;
                    aE.heap[1] = aG++;
                    ap(aE, ay, 1)
                } while (aE.heap_len >= 2);
                aE.heap[--aE.heap_max] = aE.heap[1];
                al(aE, ax);
                B(ay, aD, aE.bl_count)
            }
            function af(aE, az, aD) {
                var aB;
                var aG = -1;
                var ay;
                var aF = az[0 * 2 + 1];
                var aA = 0;
                var ax = 7;
                var aC = 4;
                if (aF === 0) {
                    ax = 138;
                    aC = 3
                }
                az[(aD + 1) * 2 + 1] = 65535;
                for (aB = 0; aB <= aD; aB++) {
                    ay = aF;
                    aF = az[(aB + 1) * 2 + 1];
                    if (++aA < ax && ay === aF) {
                        continue
                    } else {
                        if (aA < aC) {
                            aE.bl_tree[ay * 2] += aA
                        } else {
                            if (ay !== 0) {
                                if (ay !== aG) {
                                    aE.bl_tree[ay * 2]++
                                }
                                aE.bl_tree[K * 2]++
                            } else {
                                if (aA <= 10) {
                                    aE.bl_tree[q * 2]++
                                } else {
                                    aE.bl_tree[am * 2]++
                                }
                            }
                        }
                    }
                    aA = 0;
                    aG = ay;
                    if (aF === 0) {
                        ax = 138;
                        aC = 3
                    } else {
                        if (ay === aF) {
                            ax = 6;
                            aC = 3
                        } else {
                            ax = 7;
                            aC = 4
                        }
                    }
                }
            }
            function au(aE, az, aD) {
                var aB;
                var aG = -1;
                var ay;
                var aF = az[0 * 2 + 1];
                var aA = 0;
                var ax = 7;
                var aC = 4;
                if (aF === 0) {
                    ax = 138;
                    aC = 3
                }
                for (aB = 0; aB <= aD; aB++) {
                    ay = aF;
                    aF = az[(aB + 1) * 2 + 1];
                    if (++aA < ax && ay === aF) {
                        continue
                    } else {
                        if (aA < aC) {
                            do {
                                ae(aE, ay, aE.bl_tree)
                            } while (--aA !== 0)
                        } else {
                            if (ay !== 0) {
                                if (ay !== aG) {
                                    ae(aE, ay, aE.bl_tree);
                                    aA--
                                }
                                ae(aE, K, aE.bl_tree);
                                ai(aE, aA - 3, 2)
                            } else {
                                if (aA <= 10) {
                                    ae(aE, q, aE.bl_tree);
                                    ai(aE, aA - 3, 3)
                                } else {
                                    ae(aE, am, aE.bl_tree);
                                    ai(aE, aA - 11, 7)
                                }
                            }
                        }
                    }
                    aA = 0;
                    aG = ay;
                    if (aF === 0) {
                        ax = 138;
                        aC = 3
                    } else {
                        if (ay === aF) {
                            ax = 6;
                            aC = 3
                        } else {
                            ax = 7;
                            aC = 4
                        }
                    }
                }
            }
            function W(ax) {
                var ay;
                af(ax, ax.dyn_ltree, ax.l_desc.max_code);
                af(ax, ax.dyn_dtree, ax.d_desc.max_code);
                m(ax, ax.bl_desc);
                for (ay = r - 1; ay >= 3; ay--) {
                    if (ax.bl_tree[V[ay] * 2 + 1] !== 0) {
                        break
                    }
                }
                ax.opt_len += 3 * (ay + 1) + 5 + 5 + 4;
                return ay
            }
            function g(ay, aA, aB, az) {
                var ax;
                ai(ay, aA - 257, 5);
                ai(ay, aB - 1, 5);
                ai(ay, az - 4, 4);
                for (ax = 0; ax < az; ax++) {
                    ai(ay, ay.bl_tree[V[ax] * 2 + 1], 3)
                }
                au(ay, ay.dyn_ltree, aA - 1);
                au(ay, ay.dyn_dtree, aB - 1)
            }
            function X(ax) {
                var ay = 4093624447;
                var az;
                for (az = 0; az <= 31; az++ , ay >>>= 1) {
                    if ((ay & 1) && (ax.dyn_ltree[az * 2] !== 0)) {
                        return ab
                    }
                }
                if (ax.dyn_ltree[9 * 2] !== 0 || ax.dyn_ltree[10 * 2] !== 0 || ax.dyn_ltree[13 * 2] !== 0) {
                    return av
                }
                for (az = 32; az < at; az++) {
                    if (ax.dyn_ltree[az * 2] !== 0) {
                        return av
                    }
                }
                return ab
            }
            var v = false;

            function x(ax) {
                if (!v) {
                    S();
                    v = true
                }
                ax.l_desc = new t(ax.dyn_ltree, ah);
                ax.d_desc = new t(ax.dyn_dtree, an);
                ax.bl_desc = new t(ax.bl_tree, I);
                ax.bi_buf = 0;
                ax.bi_valid = 0;
                aq(ax)
            }
            function C(ax, az, aA, ay) {
                ai(ax, (P << 1) + (ay ? 1 : 0), 3);
                F(ax, az, aA, true)
            }
            function H(ax) {
                ai(ax, s << 1, 3);
                ae(ax, U, D);
                n(ax)
            }
            function ac(aC, az, aB, ay) {
                var aD, aA;
                var ax = 0;
                if (aC.level > 0) {
                    if (aC.strm.data_type === T) {
                        aC.strm.data_type = X(aC)
                    }
                    m(aC, aC.l_desc);
                    m(aC, aC.d_desc);
                    ax = W(aC);
                    aD = (aC.opt_len + 3 + 7) >>> 3;
                    aA = (aC.static_len + 3 + 7) >>> 3;
                    if (aA <= aD) {
                        aD = aA
                    }
                } else {
                    aD = aA = aB + 5
                }
                if ((aB + 4 <= aD) && (az !== -1)) {
                    C(aC, az, aB, ay)
                } else {
                    if (aC.strategy === N || aA === aD) {
                        ai(aC, (s << 1) + (ay ? 1 : 0), 3);
                        l(aC, D, w)
                    } else {
                        ai(aC, (Z << 1) + (ay ? 1 : 0), 3);
                        g(aC, aC.l_desc.max_code + 1, aC.d_desc.max_code + 1, ax + 1);
                        l(aC, aC.dyn_ltree, aC.dyn_dtree)
                    }
                }
                aq(aC);
                if (ay) {
                    L(aC)
                }
            }
            function ar(ay, az, ax) {
                ay.pending_buf[ay.d_buf + ay.last_lit * 2] = (az >>> 8) & 255;
                ay.pending_buf[ay.d_buf + ay.last_lit * 2 + 1] = az & 255;
                ay.pending_buf[ay.l_buf + ay.last_lit] = ax & 255;
                ay.last_lit++;
                if (az === 0) {
                    ay.dyn_ltree[ax * 2]++
                } else {
                    ay.matches++;
                    az--;
                    ay.dyn_ltree[(O[ax] + at + 1) * 2]++;
                    ay.dyn_dtree[ao(az) * 2]++
                }
                return (ay.last_lit === ay.lit_bufsize - 1)
            }
            y._tr_init = x;
            y._tr_stored_block = C;
            y._tr_flush_block = ac;
            y._tr_tally = ar;
            y._tr_align = H
        }, {
            "../utils/common": 1
        }],
        8: [function (f, g, e) {
            function h() {
                this.input = null;
                this.next_in = 0;
                this.avail_in = 0;
                this.total_in = 0;
                this.output = null;
                this.next_out = 0;
                this.avail_out = 0;
                this.total_out = 0;
                this.msg = "";
                this.state = null;
                this.data_type = 2;
                this.adler = 0
            }
            g.exports = h
        }, {}],
        "/lib/deflate.js": [function (q, t, i) {
            var s = q("./zlib/deflate");
            var m = q("./utils/common");
            var e = q("./utils/strings");
            var l = q("./zlib/messages");
            var u = q("./zlib/zstream");
            var h = Object.prototype.toString;
            var o = 0;
            var r = 4;
            var j = 0;
            var w = 1;
            var v = 2;
            var f = -1;
            var g = 0;
            var y = 8;

            function p(C) {
                if (!(this instanceof p)) {
                    return new p(C)
                }
                this.options = m.assign({
                    level: f,
                    method: y,
                    chunkSize: 16384,
                    windowBits: 15,
                    memLevel: 8,
                    strategy: g,
                    to: ""
                }, C || {});
                var A = this.options;
                if (A.raw && (A.windowBits > 0)) {
                    A.windowBits = -A.windowBits
                } else {
                    if (A.gzip && (A.windowBits > 0) && (A.windowBits < 16)) {
                        A.windowBits += 16
                    }
                }
                this.err = 0;
                this.msg = "";
                this.ended = false;
                this.chunks = [];
                this.strm = new u();
                this.strm.avail_out = 0;
                var B = s.deflateInit2(this.strm, A.level, A.method, A.windowBits, A.memLevel, A.strategy);
                if (B !== j) {
                    throw new Error(l[B])
                }
                if (A.header) {
                    s.deflateSetHeader(this.strm, A.header)
                }
                if (A.dictionary) {
                    var z;
                    if (typeof A.dictionary === "string") {
                        z = e.string2buf(A.dictionary)
                    } else {
                        if (h.call(A.dictionary) === "[object ArrayBuffer]") {
                            z = new Uint8Array(A.dictionary)
                        } else {
                            z = A.dictionary
                        }
                    }
                    B = s.deflateSetDictionary(this.strm, z);
                    if (B !== j) {
                        throw new Error(l[B])
                    }
                    this._dict_set = true
                }
            }
            p.prototype.push = function (A, E) {
                var C = this.strm;
                var D = this.options.chunkSize;
                var B, z;
                if (this.ended) {
                    return false
                }
                z = (E === ~~E) ? E : ((E === true) ? r : o);
                if (typeof A === "string") {
                    C.input = e.string2buf(A)
                } else {
                    if (h.call(A) === "[object ArrayBuffer]") {
                        C.input = new Uint8Array(A)
                    } else {
                        C.input = A
                    }
                }
                C.next_in = 0;
                C.avail_in = C.input.length;
                do {
                    if (C.avail_out === 0) {
                        C.output = new m.Buf8(D);
                        C.next_out = 0;
                        C.avail_out = D
                    }
                    B = s.deflate(C, z);
                    if (B !== w && B !== j) {
                        this.onEnd(B);
                        this.ended = true;
                        return false
                    }
                    if (C.avail_out === 0 || (C.avail_in === 0 && (z === r || z === v))) {
                        if (this.options.to === "string") {
                            this.onData(e.buf2binstring(m.shrinkBuf(C.output, C.next_out)))
                        } else {
                            this.onData(m.shrinkBuf(C.output, C.next_out))
                        }
                    }
                } while ((C.avail_in > 0 || C.avail_out === 0) && B !== w);
                if (z === r) {
                    B = s.deflateEnd(this.strm);
                    this.onEnd(B);
                    this.ended = true;
                    return B === j
                }
                if (z === v) {
                    this.onEnd(j);
                    C.avail_out = 0;
                    return true
                }
                return true
            };
            p.prototype.onData = function (z) {
                this.chunks.push(z)
            };
            p.prototype.onEnd = function (z) {
                if (z === j) {
                    if (this.options.to === "string") {
                        this.result = this.chunks.join("")
                    } else {
                        this.result = m.flattenChunks(this.chunks)
                    }
                }
                this.chunks = [];
                this.err = z;
                this.msg = this.strm.msg
            };

            function k(z, B) {
                var A = new p(B);
                A.push(z, true);
                if (A.err) {
                    throw A.msg || l[A.err]
                }
                return A.result
            }
            function x(z, A) {
                A = A || {};
                A.raw = true;
                return k(z, A)
            }
            function n(z, A) {
                A = A || {};
                A.gzip = true;
                return k(z, A)
            }
            i.Deflate = p;
            i.deflate = k;
            i.deflateRaw = x;
            i.gzip = n
        }, {
            "./utils/common": 1,
            "./utils/strings": 2,
            "./zlib/deflate": 5,
            "./zlib/messages": 6,
            "./zlib/zstream": 8
        }]
    }, {}, [])("/lib/deflate.js")
});
(function () {
    var a = (function () {
        var b = function () { };
        return b
    })();
    window.mText = a;
    a.htmlDecode = _.htmlDecode;
    a.htmlEncode = _.htmlEncode;
    a.urlDecode = _.urlDecode;
    a.urlEncode = _.urlEncode;
    a.encodeObject = function (e, b) {
        if (arguments.length == 1 || !b || !_.isFunction(b)) {
            b = _.encode
        }
        if (!e && typeof e !== "object") {
            return e
        }
        var c = Object.keys(e);
        for (var d = 0; d < c.length; d++) {
            e[c[d]] = a.encode(e[c[d]], b)
        }
        return e
    };
    a.encodeArray = function (d, b) {
        if (arguments.length == 1 || !b || !_.isFunction(b)) {
            b = a.encode
        }
        if (!d && _.isArray(d)) {
            for (var c = 0; c < d.length; c++) {
                d[c] = a.encode(d[c], b)
            }
        }
        return d
    };
    a.encode = function (b, c) {
        if (!b) {
            return b
        }
        if (_.isArray(b)) {
            return a.encodeArray(b, c)
        }
        if (typeof b === "string") {
            if (arguments.length == 1 || !c || !_.isFunction(c)) {
                return _.encode(b)
            }
            return c(b)
        }
        if (typeof b === "object") {
            return a.encodeObject(b, c)
        }
        return b
    };
    a.decodeObject = function (e, b) {
        if (!e && typeof e !== "object") {
            return e
        }
        if (arguments.length == 1 || !b || !_.isFunction(b)) {
            b = _.decode
        }
        var d = Object.keys(e);
        for (var c = 0; c < d.length; c++) {
            e[d[c]] = a.decode(e[d[c]], b)
        }
        return e
    };
    a.decodeArray = function (d, b) {
        if (arguments.length == 1 || !b || !_.isFunction(b)) {
            b = _.decode
        }
        if (!!d && _.isArray(d)) {
            for (var c = 0; c < d.length; c++) {
                d[c] = a.decode(d[c], b)
            }
        }
        return d
    };
    a.decode = function (c, b) {
        if (!c) {
            return c
        }
        if (_.isArray(c)) {
            return a.decodeArray(c, b)
        }
        if (typeof c === "string") {
            if (arguments.length == 1 || !b || !_.isFunction(b)) {
                return _.decode(c)
            }
            return b(c)
        }
        if (typeof c === "object") {
            return a.decodeObject(c, b)
        }
        return c
    };
    a.jsonEncode = function (b) {
        return a.encode(b, _.jsonDecode)
    };
    a.jsonDecode = function (b) {
        return a.decode(b, _.jsonDecode)
    };
    a.toJson = function (b) {
        return JSON.stringify(a.jsonEncode(b))
    };
    a.parseJson = function (b) {
        return a.jsonDecode(!!b ? JSON.parse(b) : b)
    };
    a.Base64 = function () {
        _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        this.encode = function (d) {
            var g = "";
            var c, h, j, k, e, l, f;
            var b = 0;
            d = _utf8_encode(d);
            while (b < d.length) {
                c = d.charCodeAt(b++);
                h = d.charCodeAt(b++);
                j = d.charCodeAt(b++);
                k = c >> 2;
                e = ((c & 3) << 4) | (h >> 4);
                l = ((h & 15) << 2) | (j >> 6);
                f = j & 63;
                if (isNaN(h)) {
                    l = f = 64
                } else {
                    if (isNaN(j)) {
                        f = 64
                    }
                }
                g = g + _keyStr.charAt(k) + _keyStr.charAt(e) + _keyStr.charAt(l) + _keyStr.charAt(f)
            }
            return g
        };
        this.decode = function (d) {
            var g = "";
            var c, h, j;
            var k, e, l, f;
            var b = 0;
            d = d.replace(/[^A-Za-z0-9\+\/\=]/g, "");
            while (b < d.length) {
                k = _keyStr.indexOf(d.charAt(b++));
                e = _keyStr.indexOf(d.charAt(b++));
                l = _keyStr.indexOf(d.charAt(b++));
                f = _keyStr.indexOf(d.charAt(b++));
                c = (k << 2) | (e >> 4);
                h = ((e & 15) << 4) | (l >> 2);
                j = ((l & 3) << 6) | f;
                g = g + String.fromCharCode(c);
                if (l != 64) {
                    g = g + String.fromCharCode(h)
                }
                if (f != 64) {
                    g = g + String.fromCharCode(j)
                }
            }
            g = _utf8_decode(g);
            return g
        };
        _utf8_encode = function (d) {
            d = d.replace(/\r\n/g, "\n");
            var e = "";
            for (var f = 0; f < d.length; f++) {
                var b = d.charCodeAt(f);
                if (b < 128) {
                    e += String.fromCharCode(b)
                } else {
                    if ((b > 127) && (b < 2048)) {
                        e += String.fromCharCode((b >> 6) | 192);
                        e += String.fromCharCode((b & 63) | 128)
                    } else {
                        e += String.fromCharCode((b >> 12) | 224);
                        e += String.fromCharCode(((b >> 6) & 63) | 128);
                        e += String.fromCharCode((b & 63) | 128)
                    }
                }
            }
            return e
        };
        _utf8_decode = function (f) {
            var e = "";
            var d = 0;
            var b = c1 = c2 = 0;
            while (d < f.length) {
                b = f.charCodeAt(d);
                if (b < 128) {
                    e += String.fromCharCode(b);
                    d++
                } else {
                    if ((b > 191) && (b < 224)) {
                        c2 = f.charCodeAt(d + 1);
                        e += String.fromCharCode(((b & 31) << 6) | (c2 & 63));
                        d += 2
                    } else {
                        c2 = f.charCodeAt(d + 1);
                        c3 = f.charCodeAt(d + 2);
                        e += String.fromCharCode(((b & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                        d += 3
                    }
                }
            }
            return e
        }
    };
    a.Base64Encode = function (b) {
        var c = (!!b && typeof b == "string") ? new a.Base64().encode(b) : b;
        return c || b
    };
    a.Base64Decode = function (b) {
        var c = (!!b && typeof b == "string") ? new a.Base64().decode(b) : b;
        return c || b
    };
    a.format = function () {
        if (arguments.length > 0) {
            var d = arguments[0];
            for (var b = 1; b < arguments.length; b++) {
                if (arguments[b] != undefined) {
                    var c = new RegExp("({)" + (b - 1) + "(})", "g");
                    d = d.replace(c, arguments[b])
                }
            }
            return d
        }
        return undefined
    }
})();
(function () {
    var b = (function () {
        var e = function () { };
        return e
    })();
    var a = /document\s*\.|window\s*\.|javascript|<(\s*|\/)script\s+?>|<(\s*|\/)img\s+?>|<(\s*|\/)applet\s+?>|<(\s*|\/)embed\s+?>|<(\s*|\/)a\s+?>|<(\s*|\/)meta\s+?>|<(\s*|\/)xml\s+?>|<(\s*|\/)html\s+?>|<(\s*|\/)body\s+?>|<(\s*|\/)head\s+?>|<(\s*|\/)div\s+?>|<(\s*|\/)ul\s+?>|<(\s*|\/)li\s+?>|<(\s*|\/)style\s+?>|<(\s*|\/)base\s+?>|<(\s*|\/)link\s+?>|<(\s*|\/)iframe\s+?>|<(\s*|\/)frameset\s+?>|<(\s*|\/)bgsound\s+?>|<(\s*|\/)object\s+?>|\s+style\s*=|\s+href\s*=|\s+rel\s*=|\s+type\s*=|\s+src\s*=|\s+backgroud\s*=|\s+alert\s*\([^()]*\)|\s+url\s*\([^()]*\)|\s+eval\s*\([^()]*\)|\s+escape\s*\([^()]*\)|\s+unescape\s*\([^()]*\)|\s+execscript\s*\([^()]*\)|\s+msgbox\s*\([^()]*\)|\s+confirm\s*\([^()]*\)|prompt\s*\([^()]*\)|data\s*:/gim;
    var c = "\\t|\\n|\\r|\\f";
    var d = "\\\\|&|#|%|<|>|:|\\(|\\)";
    b.xssFilter = function (e) {
        if (!e || typeof e != "string") {
            return e
        } else {
            var f = _.clone(e);
            if (b.hasXssEscapeChar(f)) {
                f = b.replaceInvalidChar(f);
                f = b.XssDecode(f)
            }
            if (b.hasXssScript(f)) {
                return b.xssFilter(b.filterXssScript(f))
            }
        }
        return e
    };
    b.hasXssEscapeChar = function (e) {
        return new RegExp(d, "i").test(e)
    };
    b.replaceInvalidChar = function (e) {
        var f = new RegExp(c, "i");
        return e.replace(f, "")
    };
    b.hasXssScript = function (e) {
        return a.test(e)
    };
    b.XssDecode = function (e) {
        return !!e ? b.urlDecode(b.jsUnicode(b.jsAsciiToString(b.asciiToString(e)))) : e
    };
    b.filterXssScript = function (e) {
        return e.replace(a, "")
    };
    b.jsUnicode = function (e) {
        var f = /\\[uU]([0-9a-f]{4})/gi;
        e = e.replace(f, function (j, g, i, h) {
            return String.fromCharCode(parseInt(g, 16))
        });
        return e
    };
    b.urlDecode = function (e) {
        var f = /%([0-9a-f]{1,4})/ig;
        e = e.replace(f, function (j, g, i, h) {
            return String.fromCharCode(parseInt(g, 16))
        });
        return e
    };
    b.jsAsciiToString = function (e) {
        return b.jsAsciiToString10(b.jsAsciiToString16(e))
    };
    b.jsAsciiToString16 = function (e) {
        var f = /\&#[xX]([0-9a-f]{1,4});/ig;
        e = e.replace(f, function (j, g, i, h) {
            return String.fromCharCode(parseInt(g, 16))
        });
        return e
    };
    b.jsAsciiToString10 = function (e) {
        var f = /&#([0-9]{1,4})/ig;
        e = e.replace(f, function (j, g, i, h) {
            return String.fromCharCode(parseInt(g, 10))
        });
        return e
    };
    b.asciiToString = function (e) {
        return b.asciiToString16(b.asciiToString8(e))
    };
    b.asciiToString8 = function (e) {
        var f = /\\([0-7]{1,4})/ig;
        e = e.replace(f, function (j, g, i, h) {
            return String.fromCharCode(parseInt(g, 8))
        });
        return e
    };
    b.asciiToString16 = function (e) {
        var f = /\\[xX]([0-9a-f]{1,4})/ig;
        e = e.replace(f, function (j, g, i, h) {
            return String.fromCharCode(parseInt(g, 16))
        });
        return e
    };
    window.mXss = b
})();
var mDES = {
    des: function (h, C, s, f, g) {
        var b = new Array(16843776, 0, 65536, 16843780, 16842756, 66564, 4, 65536, 1024, 16843776, 16843780, 1024, 16778244, 16842756, 16777216, 4, 1028, 16778240, 16778240, 66560, 66560, 16842752, 16842752, 16778244, 65540, 16777220, 16777220, 65540, 0, 1028, 66564, 16777216, 65536, 16843780, 4, 16842752, 16843776, 16777216, 16777216, 1024, 16842756, 65536, 66560, 16777220, 1024, 4, 16778244, 66564, 16843780, 65540, 16842752, 16778244, 16777220, 1028, 66564, 16843776, 1028, 16778240, 16778240, 0, 65540, 66560, 0, 16842756);
        var y = new Array(-2146402272, -2147450880, 32768, 1081376, 1048576, 32, -2146435040, -2147450848, -2147483616, -2146402272, -2146402304, -2147483648, -2147450880, 1048576, 32, -2146435040, 1081344, 1048608, -2147450848, 0, -2147483648, 32768, 1081376, -2146435072, 1048608, -2147483616, 0, 1081344, 32800, -2146402304, -2146435072, 32800, 0, 1081376, -2146435040, 1048576, -2147450848, -2146435072, -2146402304, 32768, -2146435072, -2147450880, 32, -2146402272, 1081376, 32, 32768, -2147483648, 32800, -2146402304, 1048576, -2147483616, 1048608, -2147450848, -2147483616, 1048608, 1081344, 0, -2147450880, 32800, -2147483648, -2146435040, -2146402272, 1081344);
        var k = new Array(520, 134349312, 0, 134348808, 134218240, 0, 131592, 134218240, 131080, 134217736, 134217736, 131072, 134349320, 131080, 134348800, 520, 134217728, 8, 134349312, 512, 131584, 134348800, 134348808, 131592, 134218248, 131584, 131072, 134218248, 8, 134349320, 512, 134217728, 134349312, 134217728, 131080, 520, 131072, 134349312, 134218240, 0, 512, 131080, 134349320, 134218240, 134217736, 512, 0, 134348808, 134218248, 131072, 134217728, 134349320, 8, 131592, 131584, 134217736, 134348800, 134218248, 520, 134348800, 131592, 8, 134348808, 131584);
        var G = new Array(8396801, 8321, 8321, 128, 8396928, 8388737, 8388609, 8193, 0, 8396800, 8396800, 8396929, 129, 0, 8388736, 8388609, 1, 8192, 8388608, 8396801, 128, 8388608, 8193, 8320, 8388737, 1, 8320, 8388736, 8192, 8396928, 8396929, 129, 8388736, 8388609, 8396800, 8396929, 129, 0, 0, 8396800, 8320, 8388736, 8388737, 1, 8396801, 8321, 8321, 128, 8396929, 129, 1, 8192, 8388609, 8193, 8396928, 8388737, 8193, 8320, 8388608, 8396801, 128, 8388608, 8192, 8396928);
        var H = new Array(256, 34078976, 34078720, 1107296512, 524288, 256, 1073741824, 34078720, 1074266368, 524288, 33554688, 1074266368, 1107296512, 1107820544, 524544, 1073741824, 33554432, 1074266112, 1074266112, 0, 1073742080, 1107820800, 1107820800, 33554688, 1107820544, 1073742080, 0, 1107296256, 34078976, 33554432, 1107296256, 524544, 524288, 1107296512, 256, 33554432, 1073741824, 34078720, 1107296512, 1074266368, 33554688, 1073741824, 1107820544, 34078976, 1074266368, 256, 33554432, 1107820544, 1107820800, 524544, 1107296256, 1107820800, 34078720, 0, 1074266112, 1107296256, 524544, 33554688, 1073742080, 524288, 0, 1074266112, 34078976, 1073742080);
        var t = new Array(536870928, 541065216, 16384, 541081616, 541065216, 16, 541081616, 4194304, 536887296, 4210704, 4194304, 536870928, 4194320, 536887296, 536870912, 16400, 0, 4194320, 536887312, 16384, 4210688, 536887312, 16, 541065232, 541065232, 0, 4210704, 541081600, 16400, 4210688, 541081600, 536870912, 536887296, 16, 541065232, 4210688, 541081616, 4194304, 16400, 536870928, 4194304, 536887296, 536870912, 16400, 536870928, 541081616, 4210688, 541065216, 4210704, 541081600, 0, 541065232, 16, 16384, 541065216, 4210704, 16384, 4194320, 536887312, 0, 541081600, 536870912, 4194320, 536887312);
        var v = new Array(2097152, 69206018, 67110914, 0, 2048, 67110914, 2099202, 69208064, 69208066, 2097152, 0, 67108866, 2, 67108864, 69206018, 2050, 67110912, 2099202, 2097154, 67110912, 67108866, 69206016, 69208064, 2097154, 69206016, 2048, 2050, 69208066, 2099200, 2, 67108864, 2099200, 67108864, 2099200, 2097152, 67110914, 67110914, 69206018, 69206018, 2, 2097154, 67108864, 67110912, 2097152, 69208064, 2050, 2099202, 69208064, 2050, 67108866, 69208066, 69206016, 2099200, 0, 2, 69208066, 0, 2099202, 69206016, 2048, 67108866, 67110912, 2048, 2097154);
        var q = new Array(268439616, 4096, 262144, 268701760, 268435456, 268439616, 64, 268435456, 262208, 268697600, 268701760, 266240, 268701696, 266304, 4096, 64, 268697600, 268435520, 268439552, 4160, 266240, 262208, 268697664, 268701696, 4160, 0, 0, 268697664, 268435520, 268439552, 266304, 262144, 266304, 262144, 268701696, 4096, 64, 268697664, 4096, 266304, 268439552, 64, 268435520, 268697600, 268697664, 268435456, 262144, 268439616, 0, 268701760, 262208, 268435520, 268697600, 268439552, 268439616, 0, 268701760, 266240, 266240, 4160, 4160, 262208, 268435456, 268701696);
        var e = mDES.des_createKeys(h);
        var r = 0,
            n, E, c, z, x, u, d, A, o;
        var I, D, w, F;
        var J, l;
        var a = C.length;
        var B = 0;
        var p = e.length == 32 ? 3 : 9;
        if (p == 3) {
            o = s ? new Array(0, 32, 2) : new Array(30, -2, -2)
        } else {
            o = s ? new Array(0, 32, 2, 62, 30, -2, 64, 96, 2) : new Array(94, 62, -2, 32, 64, 2, 30, -2, -2)
        }
        C += "\0\0\0\0\0\0\0\0";
        result = "";
        tempresult = "";
        if (f == 1) {
            I = (g.charCodeAt(r++) << 24) | (g.charCodeAt(r++) << 16) | (g.charCodeAt(r++) << 8) | g.charCodeAt(r++);
            w = (g.charCodeAt(r++) << 24) | (g.charCodeAt(r++) << 16) | (g.charCodeAt(r++) << 8) | g.charCodeAt(r++);
            r = 0
        }
        while (r < a) {
            if (s) {
                d = (C.charCodeAt(r++) << 16) | C.charCodeAt(r++);
                A = (C.charCodeAt(r++) << 16) | C.charCodeAt(r++)
            } else {
                d = (C.charCodeAt(r++) << 24) | (C.charCodeAt(r++) << 16) | (C.charCodeAt(r++) << 8) | C.charCodeAt(r++);
                A = (C.charCodeAt(r++) << 24) | (C.charCodeAt(r++) << 16) | (C.charCodeAt(r++) << 8) | C.charCodeAt(r++)
            }
            if (f == 1) {
                if (s) {
                    d ^= I;
                    A ^= w
                } else {
                    D = I;
                    F = w;
                    I = d;
                    w = A
                }
            }
            c = ((d >>> 4) ^ A) & 252645135;
            A ^= c;
            d ^= (c << 4);
            c = ((d >>> 16) ^ A) & 65535;
            A ^= c;
            d ^= (c << 16);
            c = ((A >>> 2) ^ d) & 858993459;
            d ^= c;
            A ^= (c << 2);
            c = ((A >>> 8) ^ d) & 16711935;
            d ^= c;
            A ^= (c << 8);
            c = ((d >>> 1) ^ A) & 1431655765;
            A ^= c;
            d ^= (c << 1);
            d = ((d << 1) | (d >>> 31));
            A = ((A << 1) | (A >>> 31));
            for (E = 0; E < p; E += 3) {
                J = o[E + 1];
                l = o[E + 2];
                for (n = o[E]; n != J; n += l) {
                    x = A ^ e[n];
                    u = ((A >>> 4) | (A << 28)) ^ e[n + 1];
                    c = d;
                    d = A;
                    A = c ^ (y[(x >>> 24) & 63] | G[(x >>> 16) & 63] | t[(x >>> 8) & 63] | q[x & 63] | b[(u >>> 24) & 63] | k[(u >>> 16) & 63] | H[(u >>> 8) & 63] | v[u & 63])
                }
                c = d;
                d = A;
                A = c
            }
            d = ((d >>> 1) | (d << 31));
            A = ((A >>> 1) | (A << 31));
            c = ((d >>> 1) ^ A) & 1431655765;
            A ^= c;
            d ^= (c << 1);
            c = ((A >>> 8) ^ d) & 16711935;
            d ^= c;
            A ^= (c << 8);
            c = ((A >>> 2) ^ d) & 858993459;
            d ^= c;
            A ^= (c << 2);
            c = ((d >>> 16) ^ A) & 65535;
            A ^= c;
            d ^= (c << 16);
            c = ((d >>> 4) ^ A) & 252645135;
            A ^= c;
            d ^= (c << 4);
            if (f == 1) {
                if (s) {
                    I = d;
                    w = A
                } else {
                    d ^= D;
                    A ^= F
                }
            }
            if (s) {
                tempresult += String.fromCharCode((d >>> 24), ((d >>> 16) & 255), ((d >>> 8) & 255), (d & 255), (A >>> 24), ((A >>> 16) & 255), ((A >>> 8) & 255), (A & 255))
            } else {
                tempresult += String.fromCharCode(((d >>> 16) & 65535), (d & 65535), ((A >>> 16) & 65535), (A & 65535))
            }
            s ? B += 16 : B += 8;
            if (B == 512) {
                result += tempresult;
                tempresult = "";
                B = 0
            }
        }
        return result + tempresult
    },
    des_createKeys: function (k) {
        pc2bytes0 = new Array(0, 4, 536870912, 536870916, 65536, 65540, 536936448, 536936452, 512, 516, 536871424, 536871428, 66048, 66052, 536936960, 536936964);
        pc2bytes1 = new Array(0, 1, 1048576, 1048577, 67108864, 67108865, 68157440, 68157441, 256, 257, 1048832, 1048833, 67109120, 67109121, 68157696, 68157697);
        pc2bytes2 = new Array(0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272, 0, 8, 2048, 2056, 16777216, 16777224, 16779264, 16779272);
        pc2bytes3 = new Array(0, 2097152, 134217728, 136314880, 8192, 2105344, 134225920, 136323072, 131072, 2228224, 134348800, 136445952, 139264, 2236416, 134356992, 136454144);
        pc2bytes4 = new Array(0, 262144, 16, 262160, 0, 262144, 16, 262160, 4096, 266240, 4112, 266256, 4096, 266240, 4112, 266256);
        pc2bytes5 = new Array(0, 1024, 32, 1056, 0, 1024, 32, 1056, 33554432, 33555456, 33554464, 33555488, 33554432, 33555456, 33554464, 33555488);
        pc2bytes6 = new Array(0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746, 0, 268435456, 524288, 268959744, 2, 268435458, 524290, 268959746);
        pc2bytes7 = new Array(0, 65536, 2048, 67584, 536870912, 536936448, 536872960, 536938496, 131072, 196608, 133120, 198656, 537001984, 537067520, 537004032, 537069568);
        pc2bytes8 = new Array(0, 262144, 0, 262144, 2, 262146, 2, 262146, 33554432, 33816576, 33554432, 33816576, 33554434, 33816578, 33554434, 33816578);
        pc2bytes9 = new Array(0, 268435456, 8, 268435464, 0, 268435456, 8, 268435464, 1024, 268436480, 1032, 268436488, 1024, 268436480, 1032, 268436488);
        pc2bytes10 = new Array(0, 32, 0, 32, 1048576, 1048608, 1048576, 1048608, 8192, 8224, 8192, 8224, 1056768, 1056800, 1056768, 1056800);
        pc2bytes11 = new Array(0, 16777216, 512, 16777728, 2097152, 18874368, 2097664, 18874880, 67108864, 83886080, 67109376, 83886592, 69206016, 85983232, 69206528, 85983744);
        pc2bytes12 = new Array(0, 4096, 134217728, 134221824, 524288, 528384, 134742016, 134746112, 16, 4112, 134217744, 134221840, 524304, 528400, 134742032, 134746128);
        pc2bytes13 = new Array(0, 4, 256, 260, 0, 4, 256, 260, 1, 5, 257, 261, 1, 5, 257, 261);
        var h = k.length >= 24 ? 3 : 1;
        var e = new Array(32 * h);
        var g = new Array(0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0);
        var c, l, d = 0,
            a = 0,
            f;
        for (var b = 0; b < h; b++) {
            left = (k.charCodeAt(d++) << 24) | (k.charCodeAt(d++) << 16) | (k.charCodeAt(d++) << 8) | k.charCodeAt(d++);
            right = (k.charCodeAt(d++) << 24) | (k.charCodeAt(d++) << 16) | (k.charCodeAt(d++) << 8) | k.charCodeAt(d++);
            f = ((left >>> 4) ^ right) & 252645135;
            right ^= f;
            left ^= (f << 4);
            f = ((right >>> -16) ^ left) & 65535;
            left ^= f;
            right ^= (f << -16);
            f = ((left >>> 2) ^ right) & 858993459;
            right ^= f;
            left ^= (f << 2);
            f = ((right >>> -16) ^ left) & 65535;
            left ^= f;
            right ^= (f << -16);
            f = ((left >>> 1) ^ right) & 1431655765;
            right ^= f;
            left ^= (f << 1);
            f = ((right >>> 8) ^ left) & 16711935;
            left ^= f;
            right ^= (f << 8);
            f = ((left >>> 1) ^ right) & 1431655765;
            right ^= f;
            left ^= (f << 1);
            f = (left << 8) | ((right >>> 20) & 240);
            left = (right << 24) | ((right << 8) & 16711680) | ((right >>> 8) & 65280) | ((right >>> 24) & 240);
            right = f;
            for (i = 0; i < g.length; i++) {
                if (g[i]) {
                    left = (left << 2) | (left >>> 26);
                    right = (right << 2) | (right >>> 26)
                } else {
                    left = (left << 1) | (left >>> 27);
                    right = (right << 1) | (right >>> 27)
                }
                left &= -15;
                right &= -15;
                c = pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 15] | pc2bytes2[(left >>> 20) & 15] | pc2bytes3[(left >>> 16) & 15] | pc2bytes4[(left >>> 12) & 15] | pc2bytes5[(left >>> 8) & 15] | pc2bytes6[(left >>> 4) & 15];
                l = pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 15] | pc2bytes9[(right >>> 20) & 15] | pc2bytes10[(right >>> 16) & 15] | pc2bytes11[(right >>> 12) & 15] | pc2bytes12[(right >>> 8) & 15] | pc2bytes13[(right >>> 4) & 15];
                f = ((l >>> 16) ^ c) & 65535;
                e[a++] = c ^ f;
                e[a++] = l ^ (f << 16)
            }
        }
        return e
    },
    stringToHex: function (b) {
        var a = "";
        var d = new Array("0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f");
        for (var c = 0; c < (b.length); c++) {
            a += d[b.charCodeAt(c) >> 4] + d[b.charCodeAt(c) & 15]
        }
        return a
    },
    HexTostring: function (b) {
        var a = "";
        for (var c = 0; c < b.length; c += 2) {
            var d = parseInt(b.substring(c, c + 2), 16);
            a += String.fromCharCode(d)
        }
        return a
    },
    encrypt: function (b, a) {
        a = a || "megi-001";
        return b ? mDES.stringToHex(mDES.des(a, b, 1, 0)) : b
    },
    decrypt: function (b, a) {
        a = a || "megi-001";
        return b ? mDES.des(a, mDES.HexTostring(b), 0, 0) : b
    }
};

function HashTable() {
    var b = 0;
    var a = new Object();
    this.add = function (c, d) {
        if (!this.containsKey(c)) {
            b++
        }
        a[c] = d;
        return this
    };
    this.getValue = function (c) {
        return this.containsKey(c) ? a[c] : null
    };
    this.remove = function (c) {
        if (this.containsKey(c) && (delete a[c])) {
            b--
        }
    };
    this.containsKey = function (c) {
        return (c in a)
    };
    this.containsValue = function (d) {
        for (var c in a) {
            if (a[c] == d) {
                return true
            }
        }
        return false
    };
    this.getValues = function () {
        var d = new Array();
        for (var c in a) {
            d.push(a[c])
        }
        return d
    };
    this.getKeys = function () {
        var d = new Array();
        for (var c in a) {
            d.push(c)
        }
        return d
    };
    this.getSize = function () {
        return b
    };
    this.clear = function () {
        b = 0;
        a = new Object();
        return this
    }
};
/*
 * jQuery JavaScript Library v1.8.2
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2012 jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: Thu Sep 20 2012 21:13:05 GMT-0400 (Eastern Daylight Time)
 */
(function (Y, bD) {
    var bs, ak, bQ = Y.document,
        bf = Y.location,
        bi = Y.navigator,
        bC = Y.jQuery,
        N = Y.$,
        b = Array.prototype.push,
        aE = Array.prototype.slice,
        aY = Array.prototype.indexOf,
        aO = Object.prototype.toString,
        af = Object.prototype.hasOwnProperty,
        bO = String.prototype.trim,
        S = function (e, bZ) {
            return new S.fn.init(e, bZ, bs)
        },
        bL = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source,
        ae = /\S/,
        bV = /\s+/,
        aq = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
        bc = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,
        ag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
        az = /^[\],:{}\s]*$/,
        bb = /(?:^|:|,)(?:\s*\[)+/g,
        a4 = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g,
        br = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g,
        P = /^-ms-/,
        aP = /-([\da-z])/gi,
        aw = function (e, bZ) {
            return (bZ + "").toUpperCase()
        },
        bH = function () {
            if (bQ.addEventListener) {
                bQ.removeEventListener("DOMContentLoaded", bH, false);
                S.ready()
            } else {
                if (bQ.readyState === "complete") {
                    bQ.detachEvent("onreadystatechange", bH);
                    S.ready()
                }
            }
        },
        bq = {};
    S.fn = S.prototype = {
        constructor: S,
        init: function (e, b1, b0) {
            var b2, bZ, b3, b4;
            if (!e) {
                return this
            }
            if (e.nodeType) {
                this.context = this[0] = e;
                this.length = 1;
                return this
            }
            if (typeof e === "string") {
                if (e.charAt(0) === "<" && e.charAt(e.length - 1) === ">" && e.length >= 3) {
                    b2 = [null, e, null]
                } else {
                    b2 = bc.exec(e)
                }
                if (b2 && (b2[1] || !b1)) {
                    if (b2[1]) {
                        b1 = b1 instanceof S ? b1[0] : b1;
                        b4 = (b1 && b1.nodeType ? b1.ownerDocument || b1 : bQ);
                        e = S.parseHTML(b2[1], b4, true);
                        if (ag.test(b2[1]) && S.isPlainObject(b1)) {
                            this.attr.call(e, b1, true)
                        }
                        return S.merge(this, e)
                    } else {
                        bZ = bQ.getElementById(b2[2]);
                        if (bZ && bZ.parentNode) {
                            if (bZ.id !== b2[2]) {
                                return b0.find(e)
                            }
                            this.length = 1;
                            this[0] = bZ
                        }
                        this.context = bQ;
                        this.selector = e;
                        return this
                    }
                } else {
                    if (!b1 || b1.jquery) {
                        return (b1 || b0).find(e)
                    } else {
                        return this.constructor(b1).find(e)
                    }
                }
            } else {
                if (S.isFunction(e)) {
                    return b0.ready(e)
                }
            }
            if (e.selector !== bD) {
                this.selector = e.selector;
                this.context = e.context
            }
            return S.makeArray(e, this)
        },
        selector: "",
        jquery: "1.8.2",
        length: 0,
        size: function () {
            return this.length
        },
        toArray: function () {
            return aE.call(this)
        },
        get: function (e) {
            return e == null ? this.toArray() : (e < 0 ? this[this.length + e] : this[e])
        },
        pushStack: function (b0, b1, bZ) {
            var e = S.merge(this.constructor(), b0);
            e.prevObject = this;
            e.context = this.context;
            if (b1 === "find") {
                e.selector = this.selector + (this.selector ? " " : "") + bZ
            } else {
                if (b1) {
                    e.selector = this.selector + "." + b1 + "(" + bZ + ")"
                }
            }
            return e
        },
        each: function (e, bZ) {
            return S.each(this, e, bZ)
        },
        ready: function (e) {
            S.ready.promise().done(e);
            return this
        },
        eq: function (e) {
            e = +e;
            return e === -1 ? this.slice(e) : this.slice(e, e + 1)
        },
        first: function () {
            return this.eq(0)
        },
        last: function () {
            return this.eq(-1)
        },
        slice: function () {
            return this.pushStack(aE.apply(this, arguments), "slice", aE.call(arguments).join(","))
        },
        map: function (e) {
            return this.pushStack(S.map(this, function (bZ, b0) {
                return e.call(bZ, b0, bZ)
            }))
        },
        end: function () {
            return this.prevObject || this.constructor(null)
        },
        push: b,
        sort: [].sort,
        splice: [].splice
    };
    S.fn.init.prototype = S.fn;
    S.extend = S.fn.extend = function () {
        var b0, b5, e, b7, b6, b2, b1 = arguments[0] || {},
            bZ = 1,
            b3 = arguments.length,
            b4 = false;
        if (typeof b1 === "boolean") {
            b4 = b1;
            b1 = arguments[1] || {};
            bZ = 2
        }
        if (typeof b1 !== "object" && !S.isFunction(b1)) {
            b1 = {}
        }
        if (b3 === bZ) {
            b1 = this;
            --bZ
        }
        for (; bZ < b3; bZ++) {
            if ((b0 = arguments[bZ]) != null) {
                for (b5 in b0) {
                    e = b1[b5];
                    b7 = b0[b5];
                    if (b1 === b7) {
                        continue
                    }
                    if (b4 && b7 && (S.isPlainObject(b7) || (b6 = S.isArray(b7)))) {
                        if (b6) {
                            b6 = false;
                            b2 = e && S.isArray(e) ? e : []
                        } else {
                            b2 = e && S.isPlainObject(e) ? e : {}
                        }
                        b1[b5] = S.extend(b4, b2, b7)
                    } else {
                        if (b7 !== bD) {
                            b1[b5] = b7
                        }
                    }
                }
            }
        }
        return b1
    };
    S.extend({
        noConflict: function (e) {
            if (Y.$ === S) {
                Y.$ = N
            }
            if (e && Y.jQuery === S) {
                Y.jQuery = bC
            }
            return S
        },
        isReady: false,
        readyWait: 1,
        holdReady: function (e) {
            if (e) {
                S.readyWait++
            } else {
                S.ready(true)
            }
        },
        ready: function (e) {
            if (e === true ? --S.readyWait : S.isReady) {
                return
            }
            if (!bQ.body) {
                return setTimeout(S.ready, 1)
            }
            S.isReady = true;
            if (e !== true && --S.readyWait > 0) {
                return
            }
            ak.resolveWith(bQ, [S]);
            if (S.fn.trigger) {
                S(bQ).trigger("ready").off("ready")
            }
        },
        isFunction: function (e) {
            return S.type(e) === "function"
        },
        isArray: Array.isArray ||
            function (e) {
                return S.type(e) === "array"
            },
        isWindow: function (e) {
            return e != null && e == e.window
        },
        isNumeric: function (e) {
            return !isNaN(parseFloat(e)) && isFinite(e)
        },
        type: function (e) {
            return e == null ? String(e) : bq[aO.call(e)] || "object"
        },
        isPlainObject: function (b0) {
            if (!b0 || S.type(b0) !== "object" || b0.nodeType || S.isWindow(b0)) {
                return false
            }
            try {
                if (b0.constructor && !af.call(b0, "constructor") && !af.call(b0.constructor.prototype, "isPrototypeOf")) {
                    return false
                }
            } catch (b1) {
                return false
            }
            var bZ;
            for (bZ in b0) { }
            return bZ === bD || af.call(b0, bZ)
        },
        isEmptyObject: function (e) {
            var bZ;
            for (bZ in e) {
                return false
            }
            return true
        },
        error: function (e) {
            throw new Error(e)
        },
        parseHTML: function (bZ, e, b1) {
            var b0;
            if (!bZ || typeof bZ !== "string") {
                return null
            }
            if (typeof e === "boolean") {
                b1 = e;
                e = 0
            }
            e = e || bQ;
            if ((b0 = ag.exec(bZ))) {
                return [e.createElement(b0[1])]
            }
            b0 = S.buildFragment([bZ], e, b1 ? null : []);
            return S.merge([], (b0.cacheable ? S.clone(b0.fragment) : b0.fragment).childNodes)
        },
        parseJSON: function (e) {
            if (!e || typeof e !== "string") {
                return null
            }
            e = S.trim(e);
            if (Y.JSON && Y.JSON.parse) {
                return Y.JSON.parse(e)
            }
            if (az.test(e.replace(a4, "@").replace(br, "]").replace(bb, ""))) {
                return (new Function("return " + e))()
            }
            S.error("Invalid JSON: " + e)
        },
        parseXML: function (bZ) {
            var b0, b1;
            if (!bZ || typeof bZ !== "string") {
                return null
            }
            try {
                if (Y.DOMParser) {
                    b1 = new DOMParser();
                    b0 = b1.parseFromString(bZ, "text/xml")
                } else {
                    b0 = new ActiveXObject("Microsoft.XMLDOM");
                    b0.async = "false";
                    b0.loadXML(bZ)
                }
            } catch (b2) {
                b0 = bD
            }
            if (!b0 || !b0.documentElement || b0.getElementsByTagName("parsererror").length) {
                S.error("Invalid XML: " + bZ)
            }
            return b0
        },
        noop: function () { },
        globalEval: function (e) {
            if (e && ae.test(e)) {
                (Y.execScript ||
                    function (bZ) {
                        Y["eval"].call(Y, bZ)
                    })(e)
            }
        },
        camelCase: function (e) {
            return e.replace(P, "ms-").replace(aP, aw)
        },
        nodeName: function (e, bZ) {
            return e.nodeName && e.nodeName.toLowerCase() === bZ.toLowerCase()
        },
        each: function (b4, b0, e) {
            var b2, b3 = 0,
                bZ = b4.length,
                b1 = bZ === bD || S.isFunction(b4);
            if (e) {
                if (b1) {
                    for (b2 in b4) {
                        if (b0.apply(b4[b2], e) === false) {
                            break
                        }
                    }
                } else {
                    for (; b3 < bZ;) {
                        if (b0.apply(b4[b3++], e) === false) {
                            break
                        }
                    }
                }
            } else {
                if (b1) {
                    for (b2 in b4) {
                        if (b0.call(b4[b2], b2, b4[b2]) === false) {
                            break
                        }
                    }
                } else {
                    for (; b3 < bZ;) {
                        if (b0.call(b4[b3], b3, b4[b3++]) === false) {
                            break
                        }
                    }
                }
            }
            return b4
        },
        trim: bO && !bO.call("\uFEFF\xA0") ?
            function (e) {
                return e == null ? "" : bO.call(e)
            } : function (e) {
                return e == null ? "" : (e + "").replace(aq, "")
            },
        makeArray: function (b1, bZ) {
            var e, b0 = bZ || [];
            if (b1 != null) {
                e = S.type(b1);
                if (b1.length == null || e === "string" || e === "function" || e === "regexp" || S.isWindow(b1)) {
                    b.call(b0, b1)
                } else {
                    S.merge(b0, b1)
                }
            }
            return b0
        },
        inArray: function (b0, b1, e) {
            var bZ;
            if (b1) {
                if (aY) {
                    return aY.call(b1, b0, e)
                }
                bZ = b1.length;
                e = e ? e < 0 ? Math.max(0, bZ + e) : e : 0;
                for (; e < bZ; e++) {
                    if (e in b1 && b1[e] === b0) {
                        return e
                    }
                }
            }
            return -1
        },
        merge: function (b2, b1) {
            var bZ = b1.length,
                b0 = b2.length,
                e = 0;
            if (typeof bZ === "number") {
                for (; e < bZ; e++) {
                    b2[b0++] = b1[e]
                }
            } else {
                while (b1[e] !== bD) {
                    b2[b0++] = b1[e++]
                }
            }
            b2.length = b0;
            return b2
        },
        grep: function (b2, b0, b3) {
            var b4, b1 = [],
                e = 0,
                bZ = b2.length;
            b3 = !!b3;
            for (; e < bZ; e++) {
                b4 = !!b0(b2[e], e);
                if (b3 !== b4) {
                    b1.push(b2[e])
                }
            }
            return b1
        },
        map: function (b1, b5, b2) {
            var e, b6, b4 = [],
                bZ = 0,
                b0 = b1.length,
                b3 = b1 instanceof S || b0 !== bD && typeof b0 === "number" && ((b0 > 0 && b1[0] && b1[b0 - 1]) || b0 === 0 || S.isArray(b1));
            if (b3) {
                for (; bZ < b0; bZ++) {
                    e = b5(b1[bZ], bZ, b2);
                    if (e != null) {
                        b4[b4.length] = e
                    }
                }
            } else {
                for (b6 in b1) {
                    e = b5(b1[b6], b6, b2);
                    if (e != null) {
                        b4[b4.length] = e
                    }
                }
            }
            return b4.concat.apply([], b4)
        },
        guid: 1,
        proxy: function (b0, e) {
            var bZ, b1, b2;
            if (typeof e === "string") {
                bZ = b0[e];
                e = b0;
                b0 = bZ
            }
            if (!S.isFunction(b0)) {
                return bD
            }
            b1 = aE.call(arguments, 2);
            b2 = function () {
                return b0.apply(e, b1.concat(aE.call(arguments)))
            };
            b2.guid = b0.guid = b0.guid || S.guid++;
            return b2
        },
        access: function (b1, b7, b6, e, b2, b3, b8) {
            var b5, b4 = b6 == null,
                bZ = 0,
                b0 = b1.length;
            if (b6 && typeof b6 === "object") {
                for (bZ in b6) {
                    S.access(b1, b7, bZ, b6[bZ], 1, b3, e)
                }
                b2 = 1
            } else {
                if (e !== bD) {
                    b5 = b8 === bD && S.isFunction(e);
                    if (b4) {
                        if (b5) {
                            b5 = b7;
                            b7 = function (ca, cb, b9) {
                                return b5.call(S(ca), b9)
                            }
                        } else {
                            b7.call(b1, e);
                            b7 = null
                        }
                    }
                    if (b7) {
                        for (; bZ < b0; bZ++) {
                            b7(b1[bZ], b6, b5 ? e.call(b1[bZ], bZ, b7(b1[bZ], b6)) : e, b8)
                        }
                    }
                    b2 = 1
                }
            }
            return b2 ? b1 : b4 ? b7.call(b1) : b0 ? b7(b1[0], b6) : b3
        },
        now: function () {
            return (new Date()).getTime()
        }
    });
    S.ready.promise = function (bZ) {
        if (!ak) {
            ak = S.Deferred();
            if (bQ.readyState === "complete") {
                setTimeout(S.ready, 1)
            } else {
                if (bQ.addEventListener) {
                    bQ.addEventListener("DOMContentLoaded", bH, false);
                    Y.addEventListener("load", S.ready, false)
                } else {
                    bQ.attachEvent("onreadystatechange", bH);
                    Y.attachEvent("onload", S.ready);
                    var b1 = false;
                    try {
                        b1 = Y.frameElement == null && bQ.documentElement
                    } catch (b2) { }
                    if (b1 && b1.doScroll) {
                        (function b0() {
                            if (!S.isReady) {
                                try {
                                    b1.doScroll("left")
                                } catch (b3) {
                                    return setTimeout(b0, 50)
                                }
                                S.ready()
                            }
                        })()
                    }
                }
            }
        }
        return ak.promise(bZ)
    };
    S.each("Boolean Number String Function Array Date RegExp Object".split(" "), function (e, bZ) {
        bq["[object " + bZ + "]"] = bZ.toLowerCase()
    });
    bs = S(bQ);
    var k = {};

    function F(bZ) {
        var e = k[bZ] = {};
        S.each(bZ.split(bV), function (b0, b1) {
            e[b1] = true
        });
        return e
    }
    S.Callbacks = function (bZ) {
        bZ = typeof bZ === "string" ? (k[bZ] || F(bZ)) : S.extend({}, bZ);
        var b2, b6, e, b1, b4, b3, b7 = [],
            b8 = !bZ.once && [],
            b5 = function (b9) {
                b2 = bZ.memory && b9;
                b6 = true;
                b3 = b1 || 0;
                b1 = 0;
                b4 = b7.length;
                e = true;
                for (; b7 && b3 < b4; b3++) {
                    if (b7[b3].apply(b9[0], b9[1]) === false && bZ.stopOnFalse) {
                        b2 = false;
                        break
                    }
                }
                e = false;
                if (b7) {
                    if (b8) {
                        if (b8.length) {
                            b5(b8.shift())
                        }
                    } else {
                        if (b2) {
                            b7 = []
                        } else {
                            b0.disable()
                        }
                    }
                }
            },
            b0 = {
                add: function () {
                    if (b7) {
                        var ca = b7.length;
                        (function b9(cb) {
                            S.each(cb, function (cc, ce) {
                                var cd = S.type(ce);
                                if (cd === "function" && (!bZ.unique || !b0.has(ce))) {
                                    b7.push(ce)
                                } else {
                                    if (ce && ce.length && cd !== "string") {
                                        b9(ce)
                                    }
                                }
                            })
                        })(arguments);
                        if (e) {
                            b4 = b7.length
                        } else {
                            if (b2) {
                                b1 = ca;
                                b5(b2)
                            }
                        }
                    }
                    return this
                },
                remove: function () {
                    if (b7) {
                        S.each(arguments, function (b9, cb) {
                            var ca;
                            while ((ca = S.inArray(cb, b7, ca)) > -1) {
                                b7.splice(ca, 1);
                                if (e) {
                                    if (ca <= b4) {
                                        b4--
                                    }
                                    if (ca <= b3) {
                                        b3--
                                    }
                                }
                            }
                        })
                    }
                    return this
                },
                has: function (b9) {
                    return S.inArray(b9, b7) > -1
                },
                empty: function () {
                    b7 = [];
                    return this
                },
                disable: function () {
                    b7 = b8 = b2 = bD;
                    return this
                },
                disabled: function () {
                    return !b7
                },
                lock: function () {
                    b8 = bD;
                    if (!b2) {
                        b0.disable()
                    }
                    return this
                },
                locked: function () {
                    return !b8
                },
                fireWith: function (b9, ca) {
                    ca = ca || [];
                    ca = [b9, ca.slice ? ca.slice() : ca];
                    if (b7 && (!b6 || b8)) {
                        if (e) {
                            b8.push(ca)
                        } else {
                            b5(ca)
                        }
                    }
                    return this
                },
                fire: function () {
                    b0.fireWith(this, arguments);
                    return this
                },
                fired: function () {
                    return !!b6
                }
            };
        return b0
    };
    S.extend({
        Deferred: function (b1) {
            var b2 = [
                ["resolve", "done", S.Callbacks("once memory"), "resolved"],
                ["reject", "fail", S.Callbacks("once memory"), "rejected"],
                ["notify", "progress", S.Callbacks("memory")]
            ],
                b0 = "pending",
                e = {
                    state: function () {
                        return b0
                    },
                    always: function () {
                        bZ.done(arguments).fail(arguments);
                        return this
                    },
                    then: function () {
                        var b3 = arguments;
                        return S.Deferred(function (b4) {
                            S.each(b2, function (b5, b8) {
                                var b6 = b8[0],
                                    b7 = b3[b5];
                                bZ[b8[1]](S.isFunction(b7) ?
                                    function () {
                                        var b9 = b7.apply(this, arguments);
                                        if (b9 && S.isFunction(b9.promise)) {
                                            b9.promise().done(b4.resolve).fail(b4.reject).progress(b4.notify)
                                        } else {
                                            b4[b6 + "With"](this === bZ ? b4 : this, [b9])
                                        }
                                    } : b4[b6])
                            });
                            b3 = null
                        }).promise()
                    },
                    promise: function (b3) {
                        return b3 != null ? S.extend(b3, e) : e
                    }
                },
                bZ = {};
            e.pipe = e.then;
            S.each(b2, function (b4, b6) {
                var b5 = b6[2],
                    b3 = b6[3];
                e[b6[1]] = b5.add;
                if (b3) {
                    b5.add(function () {
                        b0 = b3
                    }, b2[b4 ^ 1][2].disable, b2[2][2].lock)
                }
                bZ[b6[0]] = b5.fire;
                bZ[b6[0] + "With"] = b5.fireWith
            });
            e.promise(bZ);
            if (b1) {
                b1.call(bZ, bZ)
            }
            return bZ
        },
        when: function (e) {
            var b7 = 0,
                b2 = aE.call(arguments),
                bZ = b2.length,
                b6 = bZ !== 1 || (e && S.isFunction(e.promise)) ? bZ : 0,
                b4 = b6 === 1 ? e : S.Deferred(),
                b1 = function (b9, b8, ca) {
                    return function (cb) {
                        b8[b9] = this;
                        ca[b9] = arguments.length > 1 ? aE.call(arguments) : cb;
                        if (ca === b3) {
                            b4.notifyWith(b8, ca)
                        } else {
                            if (!(--b6)) {
                                b4.resolveWith(b8, ca)
                            }
                        }
                    }
                },
                b3, b0, b5;
            if (bZ > 1) {
                b3 = new Array(bZ);
                b0 = new Array(bZ);
                b5 = new Array(bZ);
                for (; b7 < bZ; b7++) {
                    if (b2[b7] && S.isFunction(b2[b7].promise)) {
                        b2[b7].promise().done(b1(b7, b5, b2)).fail(b4.reject).progress(b1(b7, b0, b3))
                    } else {
                        --b6
                    }
                }
            }
            if (!b6) {
                b4.resolveWith(b5, b2)
            }
            return b4.promise()
        }
    });
    S.support = (function () {
        var b5, b3, b2, b8, bZ, b9, b6, b0, b4, cb, b7, b1 = bQ.createElement("div");
        b1.setAttribute("className", "t");
        b1.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
        b3 = b1.getElementsByTagName("*");
        b2 = b1.getElementsByTagName("a")[0];
        b2.style.cssText = "top:1px;float:left;opacity:.5";
        if (!b3 || !b3.length) {
            return {}
        }
        b8 = bQ.createElement("select");
        bZ = b8.appendChild(bQ.createElement("option"));
        b9 = b1.getElementsByTagName("input")[0];
        b5 = {
            leadingWhitespace: (b1.firstChild.nodeType === 3),
            tbody: !b1.getElementsByTagName("tbody").length,
            htmlSerialize: !!b1.getElementsByTagName("link").length,
            style: /top/.test(b2.getAttribute("style")),
            hrefNormalized: (b2.getAttribute("href") === "/a"),
            opacity: /^0.5/.test(b2.style.opacity),
            cssFloat: !!b2.style.cssFloat,
            checkOn: (b9.value === "on"),
            optSelected: bZ.selected,
            getSetAttribute: b1.className !== "t",
            enctype: !!bQ.createElement("form").enctype,
            html5Clone: bQ.createElement("nav").cloneNode(true).outerHTML !== "<:nav></:nav>",
            boxModel: (bQ.compatMode === "CSS1Compat"),
            submitBubbles: true,
            changeBubbles: true,
            focusinBubbles: false,
            deleteExpando: true,
            noCloneEvent: true,
            inlineBlockNeedsLayout: false,
            shrinkWrapBlocks: false,
            reliableMarginRight: true,
            boxSizingReliable: true,
            pixelPosition: false
        };
        b9.checked = true;
        b5.noCloneChecked = b9.cloneNode(true).checked;
        b8.disabled = true;
        b5.optDisabled = !bZ.disabled;
        try {
            delete b1.test
        } catch (ca) {
            b5.deleteExpando = false
        }
        if (!b1.addEventListener && b1.attachEvent && b1.fireEvent) {
            b1.attachEvent("onclick", b7 = function () {
                b5.noCloneEvent = false
            });
            b1.cloneNode(true).fireEvent("onclick");
            b1.detachEvent("onclick", b7)
        }
        b9 = bQ.createElement("input");
        b9.value = "t";
        b9.setAttribute("type", "radio");
        b5.radioValue = b9.value === "t";
        b9.setAttribute("checked", "checked");
        b9.setAttribute("name", "t");
        b1.appendChild(b9);
        b6 = bQ.createDocumentFragment();
        b6.appendChild(b1.lastChild);
        b5.checkClone = b6.cloneNode(true).cloneNode(true).lastChild.checked;
        b5.appendChecked = b9.checked;
        b6.removeChild(b9);
        b6.appendChild(b1);
        if (b1.attachEvent) {
            for (b4 in {
                submit: true,
                change: true,
                focusin: true
            }) {
                b0 = "on" + b4;
                cb = (b0 in b1);
                if (!cb) {
                    b1.setAttribute(b0, "return;");
                    cb = (typeof b1[b0] === "function")
                }
                b5[b4 + "Bubbles"] = cb
            }
        }
        S(function () {
            var cg, cc, cd, cf, ce = "padding:0;margin:0;border:0;display:block;overflow:hidden;",
                e = bQ.getElementsByTagName("body")[0];
            if (!e) {
                return
            }
            cg = bQ.createElement("div");
            cg.style.cssText = "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px";
            e.insertBefore(cg, e.firstChild);
            cc = bQ.createElement("div");
            cg.appendChild(cc);
            cc.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
            cd = cc.getElementsByTagName("td");
            cd[0].style.cssText = "padding:0;margin:0;border:0;display:none";
            cb = (cd[0].offsetHeight === 0);
            cd[0].style.display = "";
            cd[1].style.display = "none";
            b5.reliableHiddenOffsets = cb && (cd[0].offsetHeight === 0);
            cc.innerHTML = "";
            cc.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;";
            b5.boxSizing = (cc.offsetWidth === 4);
            b5.doesNotIncludeMarginInBodyOffset = (e.offsetTop !== 1);
            if (Y.getComputedStyle) {
                b5.pixelPosition = (Y.getComputedStyle(cc, null) || {}).top !== "1%";
                b5.boxSizingReliable = (Y.getComputedStyle(cc, null) || {
                    width: "4px"
                }).width === "4px";
                cf = bQ.createElement("div");
                cf.style.cssText = cc.style.cssText = ce;
                cf.style.marginRight = cf.style.width = "0";
                cc.style.width = "1px";
                cc.appendChild(cf);
                b5.reliableMarginRight = !parseFloat((Y.getComputedStyle(cf, null) || {}).marginRight)
            }
            if (typeof cc.style.zoom !== "undefined") {
                cc.innerHTML = "";
                cc.style.cssText = ce + "width:1px;padding:1px;display:inline;zoom:1";
                b5.inlineBlockNeedsLayout = (cc.offsetWidth === 3);
                cc.style.display = "block";
                cc.style.overflow = "visible";
                cc.innerHTML = "<div></div>";
                cc.firstChild.style.width = "5px";
                b5.shrinkWrapBlocks = (cc.offsetWidth !== 3);
                cg.style.zoom = 1
            }
            e.removeChild(cg);
            cg = cc = cd = cf = null
        });
        b6.removeChild(b1);
        b3 = b2 = b8 = bZ = b9 = b6 = b1 = null;
        return b5
    })();
    var v = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/,
        l = /([A-Z])/g;
    S.extend({
        cache: {},
        deletedIds: [],
        uuid: 0,
        expando: "jQuery" + (S.fn.jquery + Math.random()).replace(/\D/g, ""),
        noData: {
            embed: true,
            object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            applet: true
        },
        hasData: function (e) {
            e = e.nodeType ? S.cache[e[S.expando]] : e[S.expando];
            return !!e && !g(e)
        },
        data: function (b0, b6, bZ, b2) {
            if (!S.acceptData(b0)) {
                return
            }
            var b8, b7, b4 = S.expando,
                e = typeof b6 === "string",
                b5 = b0.nodeType,
                b3 = b5 ? S.cache : b0,
                b1 = b5 ? b0[b4] : b0[b4] && b4;
            if ((!b1 || !b3[b1] || (!b2 && !b3[b1].data)) && e && bZ === bD) {
                return
            }
            if (!b1) {
                if (b5) {
                    b0[b4] = b1 = S.deletedIds.pop() || S.guid++
                } else {
                    b1 = b4
                }
            }
            if (!b3[b1]) {
                b3[b1] = {};
                if (!b5) {
                    b3[b1].toJSON = S.noop
                }
            }
            if (typeof b6 === "object" || typeof b6 === "function") {
                if (b2) {
                    b3[b1] = S.extend(b3[b1], b6)
                } else {
                    b3[b1].data = S.extend(b3[b1].data, b6)
                }
            }
            b8 = b3[b1];
            if (!b2) {
                if (!b8.data) {
                    b8.data = {}
                }
                b8 = b8.data
            }
            if (bZ !== bD) {
                b8[S.camelCase(b6)] = bZ
            }
            if (e) {
                b7 = b8[b6];
                if (b7 == null) {
                    b7 = b8[S.camelCase(b6)]
                }
            } else {
                b7 = b8
            }
            return b7
        },
        removeData: function (bZ, b4, b2) {
            if (!S.acceptData(bZ)) {
                return
            }
            var b6, e, b1, b5 = bZ.nodeType,
                b3 = b5 ? S.cache : bZ,
                b0 = b5 ? bZ[S.expando] : S.expando;
            if (!b3[b0]) {
                return
            }
            if (b4) {
                b6 = b2 ? b3[b0] : b3[b0].data;
                if (b6) {
                    if (!S.isArray(b4)) {
                        if (b4 in b6) {
                            b4 = [b4]
                        } else {
                            b4 = S.camelCase(b4);
                            if (b4 in b6) {
                                b4 = [b4]
                            } else {
                                b4 = b4.split(" ")
                            }
                        }
                    }
                    for (e = 0, b1 = b4.length; e < b1; e++) {
                        delete b6[b4[e]]
                    }
                    if (!(b2 ? g : S.isEmptyObject)(b6)) {
                        return
                    }
                }
            }
            if (!b2) {
                delete b3[b0].data;
                if (!g(b3[b0])) {
                    return
                }
            }
            if (b5) {
                S.cleanData([bZ], true)
            } else {
                if (S.support.deleteExpando || b3 != b3.window) {
                    delete b3[b0]
                } else {
                    b3[b0] = null
                }
            }
        },
        _data: function (bZ, b0, e) {
            return S.data(bZ, b0, e, true)
        },
        acceptData: function (e) {
            var bZ = e.nodeName && S.noData[e.nodeName.toLowerCase()];
            return !bZ || bZ !== true && e.getAttribute("classid") === bZ
        }
    });
    S.fn.extend({
        data: function (b6, e) {
            var b5, b2, b3, b7, b1, b0 = this[0],
                bZ = 0,
                b4 = null;
            if (b6 === bD) {
                if (this.length) {
                    b4 = S.data(b0);
                    if (b0.nodeType === 1 && !S._data(b0, "parsedAttrs")) {
                        b3 = b0.attributes;
                        for (b1 = b3.length; bZ < b1; bZ++) {
                            b7 = b3[bZ].name;
                            if (!b7.indexOf("data-")) {
                                b7 = S.camelCase(b7.substring(5));
                                d(b0, b7, b4[b7])
                            }
                        }
                        S._data(b0, "parsedAttrs", true)
                    }
                }
                return b4
            }
            if (typeof b6 === "object") {
                return this.each(function () {
                    S.data(this, b6)
                })
            }
            b5 = b6.split(".", 2);
            b5[1] = b5[1] ? "." + b5[1] : "";
            b2 = b5[1] + "!";
            return S.access(this, function (b8) {
                if (b8 === bD) {
                    b4 = this.triggerHandler("getData" + b2, [b5[0]]);
                    if (b4 === bD && b0) {
                        b4 = S.data(b0, b6);
                        b4 = d(b0, b6, b4)
                    }
                    return b4 === bD && b5[1] ? this.data(b5[0]) : b4
                }
                b5[1] = b8;
                this.each(function () {
                    var b9 = S(this);
                    b9.triggerHandler("setData" + b2, b5);
                    S.data(this, b6, b8);
                    b9.triggerHandler("changeData" + b2, b5)
                })
            }, null, e, arguments.length > 1, null, false)
        },
        removeData: function (e) {
            return this.each(function () {
                S.removeData(this, e)
            })
        }
    });

    function d(b2, b3, b0) {
        if (b0 === bD && b2.nodeType === 1) {
            var b1 = "data-" + b3.replace(l, "-$1").toLowerCase();
            b0 = b2.getAttribute(b1);
            if (typeof b0 === "string") {
                try {
                    b0 = b0 === "true" ? true : b0 === "false" ? false : b0 === "null" ? null : +b0 + "" === b0 ? +b0 : v.test(b0) ? S.parseJSON(b0) : b0
                } catch (bZ) { }
                S.data(b2, b3, b0)
            } else {
                b0 = bD
            }
        }
        return b0
    }
    function g(e) {
        var bZ;
        for (bZ in e) {
            if (bZ === "data" && S.isEmptyObject(e[bZ])) {
                continue
            }
            if (bZ !== "toJSON") {
                return false
            }
        }
        return true
    }
    S.extend({
        queue: function (b0, bZ, e) {
            var b1;
            if (b0) {
                bZ = (bZ || "fx") + "queue";
                b1 = S._data(b0, bZ);
                if (e) {
                    if (!b1 || S.isArray(e)) {
                        b1 = S._data(b0, bZ, S.makeArray(e))
                    } else {
                        b1.push(e)
                    }
                }
                return b1 || []
            }
        },
        dequeue: function (e, b2) {
            b2 = b2 || "fx";
            var bZ = S.queue(e, b2),
                b3 = bZ.length,
                b4 = bZ.shift(),
                b0 = S._queueHooks(e, b2),
                b1 = function () {
                    S.dequeue(e, b2)
                };
            if (b4 === "inprogress") {
                b4 = bZ.shift();
                b3--
            }
            if (b4) {
                if (b2 === "fx") {
                    bZ.unshift("inprogress")
                }
                delete b0.stop;
                b4.call(e, b1, b0)
            }
            if (!b3 && b0) {
                b0.empty.fire()
            }
        },
        _queueHooks: function (bZ, e) {
            var b0 = e + "queueHooks";
            return S._data(bZ, b0) || S._data(bZ, b0, {
                empty: S.Callbacks("once memory").add(function () {
                    S.removeData(bZ, e + "queue", true);
                    S.removeData(bZ, b0, true)
                })
            })
        }
    });
    S.fn.extend({
        queue: function (bZ, e) {
            var b0 = 2;
            if (typeof bZ !== "string") {
                e = bZ;
                bZ = "fx";
                b0--
            }
            if (arguments.length < b0) {
                return S.queue(this[0], bZ)
            }
            return e === bD ? this : this.each(function () {
                var b1 = S.queue(this, bZ, e);
                S._queueHooks(this, bZ);
                if (bZ === "fx" && b1[0] !== "inprogress") {
                    S.dequeue(this, bZ)
                }
            })
        },
        dequeue: function (e) {
            return this.each(function () {
                S.dequeue(this, e)
            })
        },
        delay: function (e, bZ) {
            e = S.fx ? S.fx.speeds[e] || e : e;
            bZ = bZ || "fx";
            return this.queue(bZ, function (b0, b1) {
                var b2 = setTimeout(b0, e);
                b1.stop = function () {
                    clearTimeout(b2)
                }
            })
        },
        clearQueue: function (e) {
            return this.queue(e || "fx", [])
        },
        promise: function (b1, b5) {
            var b3, bZ = 1,
                b0 = S.Deferred(),
                b4 = this,
                e = this.length,
                b2 = function () {
                    if (!(--bZ)) {
                        b0.resolveWith(b4, [b4])
                    }
                };
            if (typeof b1 !== "string") {
                b5 = b1;
                b1 = bD
            }
            b1 = b1 || "fx";
            while (e--) {
                b3 = S._data(b4[e], b1 + "queueHooks");
                if (b3 && b3.empty) {
                    bZ++;
                    b3.empty.add(b2)
                }
            }
            b2();
            return b0.promise(b5)
        }
    });
    var x, aB, bN, h = /[\t\r\n]/g,
        aa = /\r/g,
        f = /^(?:button|input)$/i,
        U = /^(?:button|input|object|select|textarea)$/i,
        ax = /^a(?:rea|)$/i,
        aQ = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
        E = S.support.getSetAttribute;
    S.fn.extend({
        attr: function (e, bZ) {
            return S.access(this, S.attr, e, bZ, arguments.length > 1)
        },
        removeAttr: function (e) {
            return this.each(function () {
                S.removeAttr(this, e)
            })
        },
        prop: function (e, bZ) {
            return S.access(this, S.prop, e, bZ, arguments.length > 1)
        },
        removeProp: function (e) {
            e = S.propFix[e] || e;
            return this.each(function () {
                try {
                    this[e] = bD;
                    delete this[e]
                } catch (bZ) { }
            })
        },
        addClass: function (e) {
            var b1, bZ, b2, b0, b5, b4, b3;
            if (S.isFunction(e)) {
                return this.each(function (b6) {
                    S(this).addClass(e.call(this, b6, this.className))
                })
            }
            if (e && typeof e === "string") {
                b1 = e.split(bV);
                for (bZ = 0, b2 = this.length; bZ < b2; bZ++) {
                    b0 = this[bZ];
                    if (b0.nodeType === 1) {
                        if (!b0.className && b1.length === 1) {
                            b0.className = e
                        } else {
                            b5 = " " + b0.className + " ";
                            for (b4 = 0, b3 = b1.length; b4 < b3; b4++) {
                                if (b5.indexOf(" " + b1[b4] + " ") < 0) {
                                    b5 += b1[b4] + " "
                                }
                            }
                            b0.className = S.trim(b5)
                        }
                    }
                }
            }
            return this
        },
        removeClass: function (e) {
            var b2, b5, b0, b4, b3, bZ, b1;
            if (S.isFunction(e)) {
                return this.each(function (b6) {
                    S(this).removeClass(e.call(this, b6, this.className))
                })
            }
            if ((e && typeof e === "string") || e === bD) {
                b2 = (e || "").split(bV);
                for (bZ = 0, b1 = this.length; bZ < b1; bZ++) {
                    b0 = this[bZ];
                    if (b0.nodeType === 1 && b0.className) {
                        b5 = (" " + b0.className + " ").replace(h, " ");
                        for (b4 = 0, b3 = b2.length; b4 < b3; b4++) {
                            while (b5.indexOf(" " + b2[b4] + " ") >= 0) {
                                b5 = b5.replace(" " + b2[b4] + " ", " ")
                            }
                        }
                        b0.className = e ? S.trim(b5) : ""
                    }
                }
            }
            return this
        },
        toggleClass: function (e, b0) {
            var bZ = typeof e,
                b1 = typeof b0 === "boolean";
            if (S.isFunction(e)) {
                return this.each(function (b2) {
                    S(this).toggleClass(e.call(this, b2, this.className, b0), b0)
                })
            }
            return this.each(function () {
                if (bZ === "string") {
                    var b5, b3 = 0,
                        b4 = S(this),
                        b6 = b0,
                        b2 = e.split(bV);
                    while ((b5 = b2[b3++])) {
                        b6 = b1 ? b6 : !b4.hasClass(b5);
                        b4[b6 ? "addClass" : "removeClass"](b5)
                    }
                } else {
                    if (bZ === "undefined" || bZ === "boolean") {
                        if (this.className) {
                            S._data(this, "__className__", this.className)
                        }
                        this.className = this.className || e === false ? "" : S._data(this, "__className__") || ""
                    }
                }
            })
        },
        hasClass: function (e) {
            var b0 = " " + e + " ",
                bZ = 0,
                b1 = this.length;
            for (; bZ < b1; bZ++) {
                if (this[bZ].nodeType === 1 && (" " + this[bZ].className + " ").replace(h, " ").indexOf(b0) >= 0) {
                    return true
                }
            }
            return false
        },
        val: function (e) {
            var b2, b0, bZ, b1 = this[0];
            if (!arguments.length) {
                if (b1) {
                    b2 = S.valHooks[b1.type] || S.valHooks[b1.nodeName.toLowerCase()];
                    if (b2 && "get" in b2 && (b0 = b2.get(b1, "value")) !== bD) {
                        return b0
                    }
                    b0 = b1.value;
                    if (b0 && $(b1).attr("hint") && $(b1).attr("hint") == b0 && $(b1).hasClass("m-show-hint")) {
                        b0 = ""
                    }
                    return typeof b0 === "string" ? mXss.xssFilter(b0.replace(aa, "")) : b0 == null ? "" : b0
                }
                return
            }
            bZ = S.isFunction(e);
            return this.each(function (b3) {
                var b4, b5 = S(this);
                if (this.nodeType !== 1) {
                    return
                }
                if (bZ) {
                    b4 = e.call(this, b3, b5.val())
                } else {
                    b4 = e
                }
                if (b4 == null) {
                    b4 = ""
                } else {
                    if (typeof b4 === "number") {
                        b4 += ""
                    } else {
                        if (S.isArray(b4)) {
                            b4 = S.map(b4, function (b6) {
                                return b6 == null ? "" : b6 + ""
                            })
                        }
                    }
                }
                b2 = S.valHooks[this.type] || S.valHooks[this.nodeName.toLowerCase()];
                if (!b2 || !("set" in b2) || b2.set(this, b4, "value") === bD) {
                    if (S(this).attr("hint") || S(this).hasClass("has-hint")) {
                        if ((b4 === bD || b4 === "" || b4.length === 0) && S(this).attr("hint") && S(this).hasClass("hint-blur")) {
                            b4 = S(this).attr("hint");
                            S(this).addClass("m-show-hint")
                        } else {
                            S(this).removeClass("m-show-hint")
                        }
                    }
                    if (Y.frameElement && $(Y.frameElement).length > 0 && $(Y.frameElement).attr("change") && $(Y.frameElement).attr("change") != "" && $(this).attr("type") !== "hidden" && !$(this).attr("checkChange")) {
                        $(this).attr("checkChange", "checkChange");
                        $(this).attr("srcValue", b4)
                    }
                    this.value = mXss.xssFilter(mText.decode(b4))
                }
            })
        }
    });
    S.extend({
        valHooks: {
            option: {
                get: function (e) {
                    var bZ = e.attributes.value;
                    return !bZ || bZ.specified ? e.value : e.text
                }
            },
            select: {
                get: function (b0) {
                    var e, bZ, b6, b3, b5 = b0.selectedIndex,
                        b2 = [],
                        b1 = b0.options,
                        b4 = b0.type === "select-one";
                    if (b5 < 0) {
                        return null
                    }
                    bZ = b4 ? b5 : 0;
                    b6 = b4 ? b5 + 1 : b1.length;
                    for (; bZ < b6; bZ++) {
                        b3 = b1[bZ];
                        if (b3.selected && (S.support.optDisabled ? !b3.disabled : b3.getAttribute("disabled") === null) && (!b3.parentNode.disabled || !S.nodeName(b3.parentNode, "optgroup"))) {
                            e = S(b3).val();
                            if (b4) {
                                return e
                            }
                            b2.push(e)
                        }
                    }
                    if (b4 && !b2.length && b1.length) {
                        return S(b1[b5]).val()
                    }
                    return b2
                },
                set: function (bZ, e) {
                    var b0 = S.makeArray(e);
                    S(bZ).find("option").each(function () {
                        this.selected = S.inArray(S(this).val(), b0) >= 0
                    });
                    if (!b0.length) {
                        bZ.selectedIndex = -1
                    }
                    return b0
                }
            }
        },
        attrFn: {},
        attr: function (bZ, b3, e, b5) {
            var b1, b2, b4, b0 = bZ.nodeType;
            if (!bZ || b0 === 3 || b0 === 8 || b0 === 2) {
                return
            }
            if (b5 && S.isFunction(S.fn[b3])) {
                return S(bZ)[b3](e)
            }
            if (typeof bZ.getAttribute === "undefined") {
                return S.prop(bZ, b3, e)
            }
            b4 = b0 !== 1 || !S.isXMLDoc(bZ);
            if (b4) {
                b3 = b3.toLowerCase();
                b2 = S.attrHooks[b3] || (aQ.test(b3) ? aB : x)
            }
            if (e !== bD) {
                if (e === null) {
                    S.removeAttr(bZ, b3);
                    return
                } else {
                    if (b2 && "set" in b2 && b4 && (b1 = b2.set(bZ, e, b3)) !== bD) {
                        return b1
                    } else {
                        bZ.setAttribute(b3, e + "");
                        return e
                    }
                }
            } else {
                if (b2 && "get" in b2 && b4 && (b1 = b2.get(bZ, b3)) !== null) {
                    return b1
                } else {
                    b1 = bZ.getAttribute(b3);
                    return b1 === null ? bD : b1
                }
            }
        },
        removeAttr: function (b0, e) {
            var b2, b3, b1, bZ, b4 = 0;
            if (e && b0.nodeType === 1) {
                b3 = e.split(bV);
                for (; b4 < b3.length; b4++) {
                    b1 = b3[b4];
                    if (b1) {
                        b2 = S.propFix[b1] || b1;
                        bZ = aQ.test(b1);
                        if (!bZ) {
                            S.attr(b0, b1, "")
                        }
                        b0.removeAttribute(E ? b1 : b2);
                        if (bZ && b2 in b0) {
                            b0[b2] = false
                        }
                    }
                }
            }
        },
        attrHooks: {
            type: {
                set: function (b0, e) {
                    if (f.test(b0.nodeName) && b0.parentNode) {
                        S.error("type property can't be changed")
                    } else {
                        if (!S.support.radioValue && e === "radio" && S.nodeName(b0, "input")) {
                            var bZ = b0.value;
                            b0.setAttribute("type", e);
                            if (bZ) {
                                b0.value = bZ
                            }
                            return e
                        }
                    }
                }
            },
            value: {
                get: function (e, bZ) {
                    if (x && S.nodeName(e, "button")) {
                        return x.get(e, bZ)
                    }
                    return bZ in e ? e.value : null
                },
                set: function (bZ, e, b0) {
                    if (x && S.nodeName(bZ, "button")) {
                        return x.set(bZ, e, b0)
                    }
                    bZ.value = e
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function (bZ, b2, e) {
            var b3, b1, b4, b0 = bZ.nodeType;
            if (!bZ || b0 === 3 || b0 === 8 || b0 === 2) {
                return
            }
            b4 = b0 !== 1 || !S.isXMLDoc(bZ);
            if (b4) {
                b2 = S.propFix[b2] || b2;
                b1 = S.propHooks[b2]
            }
            if (e !== bD) {
                if (b1 && "set" in b1 && (b3 = b1.set(bZ, e, b2)) !== bD) {
                    return b3
                } else {
                    return (bZ[b2] = e)
                }
            } else {
                if (b1 && "get" in b1 && (b3 = b1.get(bZ, b2)) !== null) {
                    return b3
                } else {
                    return bZ[b2]
                }
            }
        },
        propHooks: {
            tabIndex: {
                get: function (e) {
                    var bZ = e.getAttributeNode("tabindex");
                    return bZ && bZ.specified ? parseInt(bZ.value, 10) : U.test(e.nodeName) || ax.test(e.nodeName) && e.href ? 0 : bD
                }
            }
        }
    });
    aB = {
        get: function (b0, b1) {
            var bZ, e = S.prop(b0, b1);
            return e === true || typeof e !== "boolean" && (bZ = b0.getAttributeNode(b1)) && bZ.nodeValue !== false ? b1.toLowerCase() : bD
        },
        set: function (b0, e, b1) {
            var bZ;
            if (e === false) {
                S.removeAttr(b0, b1)
            } else {
                bZ = S.propFix[b1] || b1;
                if (bZ in b0) {
                    b0[bZ] = true
                }
                b0.setAttribute(b1, b1.toLowerCase())
            }
            return b1
        }
    };
    if (!E) {
        bN = {
            name: true,
            id: true,
            coords: true
        };
        x = S.valHooks.button = {
            get: function (bZ, b0) {
                var e;
                e = bZ.getAttributeNode(b0);
                return e && (bN[b0] ? e.value !== "" : e.specified) ? e.value : bD
            },
            set: function (b0, e, b1) {
                var bZ = b0.getAttributeNode(b1);
                if (!bZ) {
                    bZ = bQ.createAttribute(b1);
                    b0.setAttributeNode(bZ)
                }
                return (bZ.value = e + "")
            }
        };
        S.each(["width", "height"], function (e, bZ) {
            S.attrHooks[bZ] = S.extend(S.attrHooks[bZ], {
                set: function (b0, b1) {
                    if (b1 === "") {
                        b0.setAttribute(bZ, "auto");
                        return b1
                    }
                }
            })
        });
        S.attrHooks.contenteditable = {
            get: x.get,
            set: function (bZ, e, b0) {
                if (e === "") {
                    e = "false"
                }
                x.set(bZ, e, b0)
            }
        }
    }
    if (!S.support.hrefNormalized) {
        S.each(["href", "src", "width", "height"], function (e, bZ) {
            S.attrHooks[bZ] = S.extend(S.attrHooks[bZ], {
                get: function (b0) {
                    var b1 = b0.getAttribute(bZ, 2);
                    return b1 === null ? bD : b1
                }
            })
        })
    }
    if (!S.support.style) {
        S.attrHooks.style = {
            get: function (e) {
                return e.style.cssText.toLowerCase() || bD
            },
            set: function (e, bZ) {
                return (e.style.cssText = bZ + "")
            }
        }
    }
    if (!S.support.optSelected) {
        S.propHooks.selected = S.extend(S.propHooks.selected, {
            get: function (e) {
                var bZ = e.parentNode;
                if (bZ) {
                    bZ.selectedIndex;
                    if (bZ.parentNode) {
                        bZ.parentNode.selectedIndex
                    }
                }
                return null
            }
        })
    }
    if (!S.support.enctype) {
        S.propFix.enctype = "encoding"
    }
    if (!S.support.checkOn) {
        S.each(["radio", "checkbox"], function () {
            S.valHooks[this] = {
                get: function (e) {
                    return e.getAttribute("value") === null ? "on" : e.value
                }
            }
        })
    }
    S.each(["radio", "checkbox"], function () {
        S.valHooks[this] = S.extend(S.valHooks[this], {
            set: function (e, bZ) {
                if (S.isArray(bZ)) {
                    return (e.checked = S.inArray(S(e).val(), bZ) >= 0)
                }
            }
        })
    });
    var bP = /^(?:textarea|input|select)$/i,
        aG = /^([^\.]*|)(?:\.(.+)|)$/,
        H = /(?:^|\s)hover(\.\S+|)\b/,
        aV = /^key/,
        w = /^(?:mouse|contextmenu)|click/,
        bX = /^(?:focusinfocus|focusoutblur)$/,
        W = function (e) {
            return S.event.special.hover ? e : e.replace(H, "mouseenter$1 mouseleave$1")
        };
    S.event = {
        add: function (b2, ca, b3, b8, cc) {
            var b7, b1, b6, b4, b0, b5, e, cb, cd, b9, bZ;
            if (b2.nodeType === 3 || b2.nodeType === 8 || !ca || !b3 || !(b7 = S._data(b2))) {
                return
            }
            if (b3.handler) {
                cd = b3;
                b3 = cd.handler;
                cc = cd.selector
            }
            if (!b3.guid) {
                b3.guid = S.guid++
            }
            b6 = b7.events;
            if (!b6) {
                b7.events = b6 = {}
            }
            b1 = b7.handle;
            if (!b1) {
                b7.handle = b1 = function (ce) {
                    return typeof S !== "undefined" && (!ce || S.event.triggered !== ce.type) ? S.event.dispatch.apply(b1.elem, arguments) : bD
                };
                b1.elem = b2
            }
            ca = S.trim(W(ca)).split(" ");
            for (b4 = 0; b4 < ca.length; b4++) {
                b0 = aG.exec(ca[b4]) || [];
                b5 = b0[1];
                e = (b0[2] || "").split(".").sort();
                bZ = S.event.special[b5] || {};
                b5 = (cc ? bZ.delegateType : bZ.bindType) || b5;
                bZ = S.event.special[b5] || {};
                cb = S.extend({
                    type: b5,
                    origType: b0[1],
                    data: b8,
                    handler: b3,
                    guid: b3.guid,
                    selector: cc,
                    needsContext: cc && S.expr.match.needsContext.test(cc),
                    namespace: e.join(".")
                }, cd);
                b9 = b6[b5];
                if (!b9) {
                    b9 = b6[b5] = [];
                    b9.delegateCount = 0;
                    if (!bZ.setup || bZ.setup.call(b2, b8, e, b1) === false) {
                        if (b2.addEventListener) {
                            b2.addEventListener(b5, b1, false)
                        } else {
                            if (b2.attachEvent) {
                                b2.attachEvent("on" + b5, b1)
                            }
                        }
                    }
                }
                if (bZ.add) {
                    bZ.add.call(b2, cb);
                    if (!cb.handler.guid) {
                        cb.handler.guid = b3.guid
                    }
                }
                if (cc) {
                    b9.splice(b9.delegateCount++, 0, cb)
                } else {
                    b9.push(cb)
                }
                S.event.global[b5] = true
            }
            b2 = null
        },
        global: {},
        remove: function (b1, cc, b2, ce, ca) {
            var b4, b0, b5, b6, e, cb, b7, b3, bZ, b9, cd, b8 = S.hasData(b1) && S._data(b1);
            if (!b8 || !(b3 = b8.events)) {
                return
            }
            cc = S.trim(W(cc || "")).split(" ");
            for (b4 = 0; b4 < cc.length; b4++) {
                b0 = aG.exec(cc[b4]) || [];
                b5 = b6 = b0[1];
                e = b0[2];
                if (!b5) {
                    for (b5 in b3) {
                        S.event.remove(b1, b5 + cc[b4], b2, ce, true)
                    }
                    continue
                }
                bZ = S.event.special[b5] || {};
                b5 = (ce ? bZ.delegateType : bZ.bindType) || b5;
                b9 = b3[b5] || [];
                cb = b9.length;
                e = e ? new RegExp("(^|\\.)" + e.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
                for (b7 = 0; b7 < b9.length; b7++) {
                    cd = b9[b7];
                    if ((ca || b6 === cd.origType) && (!b2 || b2.guid === cd.guid) && (!e || e.test(cd.namespace)) && (!ce || ce === cd.selector || ce === "**" && cd.selector)) {
                        b9.splice(b7--, 1);
                        if (cd.selector) {
                            b9.delegateCount--
                        }
                        if (bZ.remove) {
                            bZ.remove.call(b1, cd)
                        }
                    }
                }
                if (b9.length === 0 && cb !== b9.length) {
                    if (!bZ.teardown || bZ.teardown.call(b1, e, b8.handle) === false) {
                        S.removeEvent(b1, b5, b8.handle)
                    }
                    delete b3[b5]
                }
            }
            if (S.isEmptyObject(b3)) {
                delete b8.handle;
                S.removeData(b1, "events", true)
            }
        },
        customEvent: {
            getData: true,
            setData: true,
            changeData: true
        },
        trigger: function (b5, b7, b2, b1) {
            if (b2 && (b2.nodeType === 3 || b2.nodeType === 8)) {
                return
            }
            var e, cc, b6, cb, b9, b4, b0, b8, bZ, ca, cd = b5.type || b5,
                b3 = [];
            if (bX.test(cd + S.event.triggered)) {
                return
            }
            if (cd.indexOf("!") >= 0) {
                cd = cd.slice(0, -1);
                cc = true
            }
            if (cd.indexOf(".") >= 0) {
                b3 = cd.split(".");
                cd = b3.shift();
                b3.sort()
            }
            if ((!b2 || S.event.customEvent[cd]) && !S.event.global[cd]) {
                return
            }
            b5 = typeof b5 === "object" ? b5[S.expando] ? b5 : new S.Event(cd, b5) : new S.Event(cd);
            b5.type = cd;
            b5.isTrigger = true;
            b5.exclusive = cc;
            b5.namespace = b3.join(".");
            b5.namespace_re = b5.namespace ? new RegExp("(^|\\.)" + b3.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
            b4 = cd.indexOf(":") < 0 ? "on" + cd : "";
            if (!b2) {
                e = S.cache;
                for (b6 in e) {
                    if (e[b6].events && e[b6].events[cd]) {
                        S.event.trigger(b5, b7, e[b6].handle.elem, true)
                    }
                }
                return
            }
            b5.result = bD;
            if (!b5.target) {
                b5.target = b2
            }
            b7 = b7 != null ? S.makeArray(b7) : [];
            b7.unshift(b5);
            b0 = S.event.special[cd] || {};
            if (b0.trigger && b0.trigger.apply(b2, b7) === false) {
                return
            }
            bZ = [
                [b2, b0.bindType || cd]
            ];
            if (!b1 && !b0.noBubble && !S.isWindow(b2)) {
                ca = b0.delegateType || cd;
                cb = bX.test(ca + cd) ? b2 : b2.parentNode;
                for (b9 = b2; cb; cb = cb.parentNode) {
                    bZ.push([cb, ca]);
                    b9 = cb
                }
                if (b9 === (b2.ownerDocument || bQ)) {
                    bZ.push([b9.defaultView || b9.parentWindow || Y, ca])
                }
            }
            for (b6 = 0; b6 < bZ.length && !b5.isPropagationStopped(); b6++) {
                cb = bZ[b6][0];
                b5.type = bZ[b6][1];
                b8 = (S._data(cb, "events") || {})[b5.type] && S._data(cb, "handle");
                if (b8) {
                    b8.apply(cb, b7)
                }
                b8 = b4 && cb[b4];
                if (b8 && S.acceptData(cb) && b8.apply && b8.apply(cb, b7) === false) {
                    b5.preventDefault()
                }
            }
            b5.type = cd;
            if (!b1 && !b5.isDefaultPrevented()) {
                if ((!b0._default || b0._default.apply(b2.ownerDocument, b7) === false) && !(cd === "click" && S.nodeName(b2, "a")) && S.acceptData(b2)) {
                    if (b4 && b2[cd] && ((cd !== "focus" && cd !== "blur") || b5.target.offsetWidth !== 0) && !S.isWindow(b2)) {
                        b9 = b2[b4];
                        if (b9) {
                            b2[b4] = null
                        }
                        S.event.triggered = cd;
                        b2[cd]();
                        S.event.triggered = bD;
                        if (b9) {
                            b2[b4] = b9
                        }
                    }
                }
            }
            return b5.result
        },
        dispatch: function (b6) {
            b6 = S.event.fix(b6 || Y.event);
            var b7, b8, cd, cb, b0, ce, b5, cc, b2, b9, ca = ((S._data(this, "events") || {})[b6.type] || []),
                b4 = ca.delegateCount,
                b3 = aE.call(arguments),
                e = !b6.exclusive && !b6.namespace,
                bZ = S.event.special[b6.type] || {},
                b1 = [];
            b3[0] = b6;
            b6.delegateTarget = this;
            if (bZ.preDispatch && bZ.preDispatch.call(this, b6) === false) {
                return
            }
            if (b4 && !(b6.button && b6.type === "click")) {
                for (cd = b6.target; cd != this; cd = cd.parentNode || this) {
                    if (cd.disabled !== true || b6.type !== "click") {
                        b0 = {};
                        b5 = [];
                        for (b7 = 0; b7 < b4; b7++) {
                            cc = ca[b7];
                            b2 = cc.selector;
                            if (b0[b2] === bD) {
                                b0[b2] = cc.needsContext ? S(b2, this).index(cd) >= 0 : S.find(b2, this, null, [cd]).length
                            }
                            if (b0[b2]) {
                                b5.push(cc)
                            }
                        }
                        if (b5.length) {
                            b1.push({
                                elem: cd,
                                matches: b5
                            })
                        }
                    }
                }
            }
            if (ca.length > b4) {
                b1.push({
                    elem: this,
                    matches: ca.slice(b4)
                })
            }
            for (b7 = 0; b7 < b1.length && !b6.isPropagationStopped(); b7++) {
                ce = b1[b7];
                b6.currentTarget = ce.elem;
                for (b8 = 0; b8 < ce.matches.length && !b6.isImmediatePropagationStopped(); b8++) {
                    cc = ce.matches[b8];
                    if (e || (!b6.namespace && !cc.namespace) || b6.namespace_re && b6.namespace_re.test(cc.namespace)) {
                        b6.data = cc.data;
                        b6.handleObj = cc;
                        cb = ((S.event.special[cc.origType] || {}).handle || cc.handler).apply(ce.elem, b3);
                        if (cb !== bD) {
                            b6.result = cb;
                            if (cb === false) {
                                b6.preventDefault();
                                b6.stopPropagation()
                            }
                        }
                    }
                }
            }
            if (bZ.postDispatch) {
                bZ.postDispatch.call(this, b6)
            }
            return b6.result
        },
        props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function (e, bZ) {
                if (e.which == null) {
                    e.which = bZ.charCode != null ? bZ.charCode : bZ.keyCode
                }
                return e
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function (b3, b1) {
                var b2, b4, bZ, e = b1.button,
                    b0 = b1.fromElement;
                if (b3.pageX == null && b1.clientX != null) {
                    b2 = b3.target.ownerDocument || bQ;
                    b4 = b2.documentElement;
                    bZ = b2.body;
                    b3.pageX = b1.clientX + (b4 && b4.scrollLeft || bZ && bZ.scrollLeft || 0) - (b4 && b4.clientLeft || bZ && bZ.clientLeft || 0);
                    b3.pageY = b1.clientY + (b4 && b4.scrollTop || bZ && bZ.scrollTop || 0) - (b4 && b4.clientTop || bZ && bZ.clientTop || 0)
                }
                if (!b3.relatedTarget && b0) {
                    b3.relatedTarget = b0 === b3.target ? b1.toElement : b0
                }
                if (!b3.which && e !== bD) {
                    b3.which = (e & 1 ? 1 : (e & 2 ? 3 : (e & 4 ? 2 : 0)))
                }
                return b3
            }
        },
        fix: function (b1) {
            if (b1[S.expando]) {
                return b1
            }
            var e, b0, b2 = b1,
                bZ = S.event.fixHooks[b1.type] || {},
                b3 = bZ.props ? this.props.concat(bZ.props) : this.props;
            b1 = S.Event(b2);
            for (e = b3.length; e;) {
                b0 = b3[--e];
                b1[b0] = b2[b0]
            }
            if (!b1.target) {
                b1.target = b2.srcElement || bQ
            }
            if (b1.target.nodeType === 3) {
                b1.target = b1.target.parentNode
            }
            b1.metaKey = !!b1.metaKey;
            return bZ.filter ? bZ.filter(b1, b2) : b1
        },
        special: {
            load: {
                noBubble: true
            },
            focus: {
                delegateType: "focusin"
            },
            blur: {
                delegateType: "focusout"
            },
            beforeunload: {
                setup: function (bZ, b0, e) {
                    if (S.isWindow(this)) {
                        this.onbeforeunload = e
                    }
                },
                teardown: function (bZ, e) {
                    if (this.onbeforeunload === e) {
                        this.onbeforeunload = null
                    }
                }
            }
        },
        simulate: function (b0, b1, b2, bZ) {
            var b3 = S.extend(new S.Event(), b2, {
                type: b0,
                isSimulated: true,
                originalEvent: {}
            });
            if (bZ) {
                S.event.trigger(b3, null, b1)
            } else {
                S.event.dispatch.call(b1, b3)
            }
            if (b3.isDefaultPrevented()) {
                b2.preventDefault()
            }
        }
    };
    S.event.handle = S.event.dispatch;
    S.removeEvent = bQ.removeEventListener ?
        function (b0, bZ, e) {
            if (b0.removeEventListener) {
                b0.removeEventListener(bZ, e, false)
            }
        } : function (b0, bZ, e) {
            var b1 = "on" + bZ;
            if (b0.detachEvent) {
                if (typeof b0[b1] === "undefined") {
                    b0[b1] = null
                }
                b0.detachEvent(b1, e)
            }
        };
    S.Event = function (e, bZ) {
        if (!(this instanceof S.Event)) {
            return new S.Event(e, bZ)
        }
        if (e && e.type) {
            this.originalEvent = e;
            this.type = e.type;
            this.isDefaultPrevented = (e.defaultPrevented || e.returnValue === false || e.getPreventDefault && e.getPreventDefault()) ? aF : aM
        } else {
            this.type = e
        }
        if (bZ) {
            S.extend(this, bZ)
        }
        this.timeStamp = e && e.timeStamp || S.now();
        this[S.expando] = true
    };

    function aM() {
        return false
    }
    function aF() {
        return true
    }
    S.Event.prototype = {
        preventDefault: function () {
            this.isDefaultPrevented = aF;
            var bZ = this.originalEvent;
            if (!bZ) {
                return
            }
            if (bZ.preventDefault) {
                bZ.preventDefault()
            } else {
                bZ.returnValue = false
            }
        },
        stopPropagation: function () {
            this.isPropagationStopped = aF;
            var bZ = this.originalEvent;
            if (!bZ) {
                return
            }
            if (bZ.stopPropagation) {
                bZ.stopPropagation()
            }
            bZ.cancelBubble = true
        },
        stopImmediatePropagation: function () {
            this.isImmediatePropagationStopped = aF;
            this.stopPropagation()
        },
        isDefaultPrevented: aM,
        isPropagationStopped: aM,
        isImmediatePropagationStopped: aM
    };
    S.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function (bZ, e) {
        S.event.special[bZ] = {
            delegateType: e,
            bindType: e,
            handle: function (b4) {
                var b3, b5 = this,
                    b1 = b4.relatedTarget,
                    b0 = b4.handleObj,
                    b2 = b0.selector;
                if (!b1 || (b1 !== b5 && !S.contains(b5, b1))) {
                    b4.type = b0.origType;
                    b3 = b0.handler.apply(this, arguments);
                    b4.type = e
                }
                return b3
            }
        }
    });
    if (!S.support.submitBubbles) {
        S.event.special.submit = {
            setup: function () {
                if (S.nodeName(this, "form")) {
                    return false
                }
                S.event.add(this, "click._submit keypress._submit", function (b1) {
                    var b0 = b1.target,
                        bZ = S.nodeName(b0, "input") || S.nodeName(b0, "button") ? b0.form : bD;
                    if (bZ && !S._data(bZ, "_submit_attached")) {
                        S.event.add(bZ, "submit._submit", function (e) {
                            e._submit_bubble = true
                        });
                        S._data(bZ, "_submit_attached", true)
                    }
                })
            },
            postDispatch: function (e) {
                if (e._submit_bubble) {
                    delete e._submit_bubble;
                    if (this.parentNode && !e.isTrigger) {
                        S.event.simulate("submit", this.parentNode, e, true)
                    }
                }
            },
            teardown: function () {
                if (S.nodeName(this, "form")) {
                    return false
                }
                S.event.remove(this, "._submit")
            }
        }
    }
    if (!S.support.changeBubbles) {
        S.event.special.change = {
            setup: function () {
                if (bP.test(this.nodeName)) {
                    if (this.type === "checkbox" || this.type === "radio") {
                        S.event.add(this, "propertychange._change", function (e) {
                            if (e.originalEvent.propertyName === "checked") {
                                this._just_changed = true
                            }
                        });
                        S.event.add(this, "click._change", function (e) {
                            if (this._just_changed && !e.isTrigger) {
                                this._just_changed = false
                            }
                            S.event.simulate("change", this, e, true)
                        })
                    }
                    return false
                }
                S.event.add(this, "beforeactivate._change", function (b0) {
                    var bZ = b0.target;
                    if (bP.test(bZ.nodeName) && !S._data(bZ, "_change_attached")) {
                        S.event.add(bZ, "change._change", function (e) {
                            if (this.parentNode && !e.isSimulated && !e.isTrigger) {
                                S.event.simulate("change", this.parentNode, e, true)
                            }
                        });
                        S._data(bZ, "_change_attached", true)
                    }
                })
            },
            handle: function (bZ) {
                var e = bZ.target;
                if (this !== e || bZ.isSimulated || bZ.isTrigger || (e.type !== "radio" && e.type !== "checkbox")) {
                    return bZ.handleObj.handler.apply(this, arguments)
                }
            },
            teardown: function () {
                S.event.remove(this, "._change");
                return !bP.test(this.nodeName)
            }
        }
    }
    if (!S.support.focusinBubbles) {
        S.each({
            focus: "focusin",
            blur: "focusout"
        }, function (e, b0) {
            var b1 = 0,
                bZ = function (b2) {
                    S.event.simulate(b0, b2.target, S.event.fix(b2), true)
                };
            S.event.special[b0] = {
                setup: function () {
                    if (b1++ === 0) {
                        bQ.addEventListener(e, bZ, true)
                    }
                },
                teardown: function () {
                    if (--b1 === 0) {
                        bQ.removeEventListener(e, bZ, true)
                    }
                }
            }
        })
    }
    S.fn.extend({
        pasteEvents: function (e) {
            if (e === bD) {
                e = 20
            }
            return S(this).each(function () {
                var bZ = S(this);
                bZ.off("paste.hidden").on("paste.hidden", function (b0) {
                    bZ.trigger("prepaste");
                    setTimeout(function () {
                        Y.event = b0;
                        bZ.trigger("postpaste", b0)
                    }, e)
                })
            })
        },
        on: function (b2, e, bZ, b4, b5) {
            var b3, b1;
            if (typeof b2 === "object") {
                if (typeof e !== "string") {
                    bZ = bZ || e;
                    e = bD
                }
                for (b1 in b2) {
                    this.on(b1, e, bZ, b2[b1], b5)
                }
                return this
            }
            var b0 = (!!b2 && typeof b2 === "string" && b2.indexOf("paste") == -1 && b2.indexOf("keyup") >= 0);
            b2 = b0 ? b2.replace(/((keyup)(\.*\S*))/, "$2$3 postpaste$3") : b2;
            if (bZ == null && b4 == null) {
                b4 = e;
                bZ = e = bD
            } else {
                if (b4 == null) {
                    if (typeof e === "string") {
                        b4 = bZ;
                        bZ = bD
                    } else {
                        b4 = bZ;
                        bZ = e;
                        e = bD
                    }
                }
            }
            if (b4 === false) {
                b4 = aM
            } else {
                if (!b4) {
                    return this
                }
            }
            if (b5 === 1) {
                b3 = b4;
                b4 = function (b6) {
                    S().off(b6);
                    return b3.apply(this, arguments)
                };
                b4.guid = b3.guid || (b3.guid = S.guid++)
            }
            return this.each(function () {
                S.event.add(this, b2, b4, bZ, e);
                if (b0) {
                    S(this).pasteEvents()
                }
            })
        },
        one: function (bZ, b0, e, b1) {
            return this.on(bZ, b0, e, b1, 1)
        },
        off: function (bZ, b1, b2) {
            var e, b0;
            if (bZ && bZ.preventDefault && bZ.handleObj) {
                e = bZ.handleObj;
                S(bZ.delegateTarget).off(e.namespace ? e.origType + "." + e.namespace : e.origType, e.selector, e.handler);
                return this
            }
            if (typeof bZ === "object") {
                for (b0 in bZ) {
                    this.off(b0, b1, bZ[b0])
                }
                return this
            }
            if (b1 === false || typeof b1 === "function") {
                b2 = b1;
                b1 = bD
            }
            if (b2 === false) {
                b2 = aM
            }
            return this.each(function () {
                S.event.remove(this, bZ, b2, b1)
            })
        },
        bind: function (bZ, e, b0) {
            return this.on(bZ, null, e, b0)
        },
        unbind: function (bZ, e) {
            return this.off(bZ, null, e)
        },
        live: function (bZ, e, b0) {
            S(this.context).on(bZ, this.selector, e, b0);
            return this
        },
        die: function (bZ, e) {
            S(this.context).off(bZ, this.selector || "**", e);
            return this
        },
        delegate: function (b0, bZ, e, b1) {
            return this.on(bZ, b0, e, b1)
        },
        undelegate: function (bZ, e, b0) {
            return arguments.length === 1 ? this.off(bZ, "**") : this.off(e, bZ || "**", b0)
        },
        trigger: function (bZ, e) {
            return this.each(function () {
                S.event.trigger(bZ, e, this)
            })
        },
        triggerHandler: function (bZ, e) {
            if (this[0]) {
                return S.event.trigger(bZ, e, this[0], true)
            }
        },
        toggle: function (b0) {
            var b1 = arguments,
                e = b0.guid || S.guid++,
                bZ = 0,
                b2 = function (b3) {
                    var b4 = (S._data(this, "lastToggle" + b0.guid) || 0) % bZ;
                    S._data(this, "lastToggle" + b0.guid, b4 + 1);
                    b3.preventDefault();
                    return b1[b4].apply(this, arguments) || false
                };
            b2.guid = e;
            while (bZ < b1.length) {
                b1[bZ++].guid = e
            }
            return this.click(b2)
        },
        hover: function (e, bZ) {
            return this.mouseenter(e).mouseleave(bZ || e)
        }
    });
    S.each(("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu").split(" "), function (e, bZ) {
        S.fn[bZ] = function (b0, b1) {
            if (b1 == null) {
                b1 = b0;
                b0 = null
            }
            return arguments.length > 0 ? this.on(bZ, null, b0, b1) : this.trigger(bZ)
        };
        if (aV.test(bZ)) {
            S.event.fixHooks[bZ] = S.event.keyHooks
        }
        if (w.test(bZ)) {
            S.event.fixHooks[bZ] = S.event.mouseHooks
        }
    });
	/*
	 * Sizzle CSS Selector Engine
	 * Copyright 2012 jQuery Foundation and other contributors
	 * Released under the MIT license
	 * http://sizzlejs.com/
	 */
    (function (cT, cs) {
        var cg, b1, cn, b0, cm, cC, cl, cH, c6, cP, cL = true,
            c2 = "undefined",
            b8 = ("sizcache" + Math.random()).replace(".", ""),
            cQ = String,
            ci = cT.document,
            cB = ci.documentElement,
            c1 = 0,
            cZ = 0,
            cc = [].pop,
            cJ = [].push,
            cK = [].slice,
            ct = [].indexOf ||
                function (c8) {
                    var e = 0,
                        c7 = this.length;
                    for (; e < c7; e++) {
                        if (this[e] === c8) {
                            return e
                        }
                    }
                    return -1
                }, cS = function (e, c7) {
                    e[b8] = c7 == null || c7;
                    return e
                }, cO = function () {
                    var c7 = {},
                        e = [];
                    return cS(function (c8, c9) {
                        if (e.push(c8) > cn.cacheLength) {
                            delete c7[e.shift()]
                        }
                        return (c7[c8] = c9)
                    }, c7)
                }, ch = cO(), cY = cO(), cx = cO(), cq = "[\\x20\\t\\r\\n\\f]", cf = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+", bZ = cf.replace("w", "w#"), c4 = "([*^$|!~]?=)", c3 = "\\[" + cq + "*(" + cf + ")" + cq + "*(?:" + c4 + cq + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + bZ + ")|)|)" + cq + "*\\]", cw = ":(" + cf + ")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + c3 + ")|[^:]|\\\\.)*|.*))\\)|)", b9 = ":(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + cq + "*((?:-\\d)?\\d*)" + cq + "*\\)|)(?=[^-]|$)", cd = new RegExp("^" + cq + "+|((?:^|[^\\\\])(?:\\\\.)*)" + cq + "+$", "g"), cI = new RegExp("^" + cq + "*," + cq + "*"), cR = new RegExp("^" + cq + "*([\\x20\\t\\r\\n\\f>+~])" + cq + "*"), cF = new RegExp(cw), cG = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/, cX = /^:not/, cv = /[\x20\t\r\n\f]*[+~]/, cV = /:not\($/, b6 = /h\d/i, b5 = /input|select|textarea|button/i, cM = /\\(?!\\)/g, cj = {
                    ID: new RegExp("^#(" + cf + ")"),
                    CLASS: new RegExp("^\\.(" + cf + ")"),
                    NAME: new RegExp("^\\[name=['\"]?(" + cf + ")['\"]?\\]"),
                    TAG: new RegExp("^(" + cf.replace("w", "w*") + ")"),
                    ATTR: new RegExp("^" + c3),
                    PSEUDO: new RegExp("^" + cw),
                    POS: new RegExp(b9, "i"),
                    CHILD: new RegExp("^:(only|nth|first|last)-child(?:\\(" + cq + "*(even|odd|(([+-]|)(\\d*)n|)" + cq + "*(?:([+-]|)" + cq + "*(\\d+)|))" + cq + "*\\)|)", "i"),
                    needsContext: new RegExp("^" + cq + "*[>+~]|" + b9, "i")
                }, ce = function (c7) {
                    var c8 = ci.createElement("div");
                    try {
                        return c7(c8)
                    } catch (c9) {
                        return false
                    } finally {
                        c8 = null
                    }
                }, c5 = ce(function (e) {
                    e.appendChild(ci.createComment(""));
                    return !e.getElementsByTagName("*").length
                }), b4 = ce(function (e) {
                    e.innerHTML = "<a href='#'></a>";
                    return e.firstChild && typeof e.firstChild.getAttribute !== c2 && e.firstChild.getAttribute("href") === "#"
                }), b2 = ce(function (c7) {
                    c7.innerHTML = "<select></select>";
                    var e = typeof c7.lastChild.getAttribute("multiple");
                    return e !== "boolean" && e !== "string"
                }), b7 = ce(function (e) {
                    e.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>";
                    if (!e.getElementsByClassName || !e.getElementsByClassName("e").length) {
                        return false
                    }
                    e.lastChild.className = "e";
                    return e.getElementsByClassName("e").length === 2
                }), ca = ce(function (c7) {
                    c7.id = b8 + 0;
                    c7.innerHTML = "<a name='" + b8 + "'></a><div name='" + b8 + "'></div>";
                    cB.insertBefore(c7, cB.firstChild);
                    var e = ci.getElementsByName && ci.getElementsByName(b8).length === 2 + ci.getElementsByName(b8 + 0).length;
                    b1 = !ci.getElementById(b8);
                    cB.removeChild(c7);
                    return e
                });
        try {
            cK.call(cB.childNodes, 0)[0].nodeType
        } catch (cU) {
            cK = function (e) {
                var c8, c7 = [];
                for (;
                    (c8 = this[e]); e++) {
                    c7.push(c8)
                }
                return c7
            }
        }
        function cz(e, c8, dc, de) {
            dc = dc || [];
            c8 = c8 || ci;
            var c9, c7, db, da, dd = c8.nodeType;
            if (!e || typeof e !== "string") {
                return dc
            }
            if (dd !== 1 && dd !== 9) {
                return []
            }
            db = cm(c8);
            if (!db && !de) {
                if ((c9 = cG.exec(e))) {
                    if ((da = c9[1])) {
                        if (dd === 9) {
                            c7 = c8.getElementById(da);
                            if (c7 && c7.parentNode) {
                                if (c7.id === da) {
                                    dc.push(c7);
                                    return dc
                                }
                            } else {
                                return dc
                            }
                        } else {
                            if (c8.ownerDocument && (c7 = c8.ownerDocument.getElementById(da)) && cC(c8, c7) && c7.id === da) {
                                dc.push(c7);
                                return dc
                            }
                        }
                    } else {
                        if (c9[2]) {
                            cJ.apply(dc, cK.call(c8.getElementsByTagName(e), 0));
                            return dc
                        } else {
                            if ((da = c9[3]) && b7 && c8.getElementsByClassName) {
                                cJ.apply(dc, cK.call(c8.getElementsByClassName(da), 0));
                                return dc
                            }
                        }
                    }
                }
            }
            return ck(e.replace(cd, "$1"), c8, dc, de, db)
        }
        cz.matches = function (e, c7) {
            return cz(e, null, null, c7)
        };
        cz.matchesSelector = function (e, c7) {
            return cz(c7, null, null, [e]).length > 0
        };

        function cN(e) {
            return function (c7) {
                var c8 = c7.nodeName.toLowerCase();
                return c8 === "input" && c7.type === e
            }
        }
        function cp(e) {
            return function (c7) {
                var c8 = c7.nodeName.toLowerCase();
                return (c8 === "input" || c8 === "button") && c7.type === e
            }
        }
        function cu(e) {
            return cS(function (c7) {
                c7 = +c7;
                return cS(function (dc, c9) {
                    var da, c8 = e([], dc.length, c7),
                        db = c8.length;
                    while (db--) {
                        if (dc[(da = c8[db])]) {
                            dc[da] = !(c9[da] = dc[da])
                        }
                    }
                })
            })
        }
        b0 = cz.getText = function (da) {
            var c9, c8 = "",
                e = 0,
                c7 = da.nodeType;
            if (c7) {
                if (c7 === 1 || c7 === 9 || c7 === 11) {
                    if (typeof da.textContent === "string") {
                        return da.textContent
                    } else {
                        for (da = da.firstChild; da; da = da.nextSibling) {
                            c8 += b0(da)
                        }
                    }
                } else {
                    if (c7 === 3 || c7 === 4) {
                        return da.nodeValue
                    }
                }
            } else {
                for (;
                    (c9 = da[e]); e++) {
                    c8 += b0(c9)
                }
            }
            return c8
        };
        cm = cz.isXML = function (e) {
            var c7 = e && (e.ownerDocument || e).documentElement;
            return c7 ? c7.nodeName !== "HTML" : false
        };
        cC = cz.contains = cB.contains ?
            function (c7, c8) {
                var e = c7.nodeType === 9 ? c7.documentElement : c7,
                    c9 = c8 && c8.parentNode;
                return c7 === c9 || !!(c9 && c9.nodeType === 1 && e.contains && e.contains(c9))
            } : cB.compareDocumentPosition ?
                function (e, c7) {
                    return c7 && !!(e.compareDocumentPosition(c7) & 16)
                } : function (e, c7) {
                    while ((c7 = c7.parentNode)) {
                        if (c7 === e) {
                            return true
                        }
                    }
                    return false
                };
        cz.attr = function (c8, c9) {
            var c7, e = cm(c8);
            if (!e) {
                c9 = c9.toLowerCase()
            }
            if ((c7 = cn.attrHandle[c9])) {
                return c7(c8)
            }
            if (e || b2) {
                return c8.getAttribute(c9)
            }
            c7 = c8.getAttributeNode(c9);
            return c7 ? typeof c8[c9] === "boolean" ? c8[c9] ? c9 : null : c7.specified ? c7.value : null : null
        };
        cn = cz.selectors = {
            cacheLength: 50,
            createPseudo: cS,
            match: cj,
            attrHandle: b4 ? {} : {
                href: function (e) {
                    return e.getAttribute("href", 2)
                },
                type: function (e) {
                    return e.getAttribute("type")
                }
            },
            find: {
                ID: b1 ?
                    function (c7, e, c8) {
                        if (typeof e.getElementById !== c2 && !c8) {
                            var c9 = e.getElementById(c7);
                            return c9 && c9.parentNode ? [c9] : []
                        }
                    } : function (c7, e, c8) {
                        if (typeof e.getElementById !== c2 && !c8) {
                            var c9 = e.getElementById(c7);
                            return c9 ? c9.id === c7 || typeof c9.getAttributeNode !== c2 && c9.getAttributeNode("id").value === c7 ? [c9] : cs : []
                        }
                    },
                TAG: c5 ?
                    function (c7, e) {
                        if (typeof e.getElementsByTagName !== c2) {
                            return e.getElementsByTagName(c7)
                        }
                    } : function (c9, c8) {
                        var db = c8.getElementsByTagName(c9);
                        if (c9 === "*") {
                            var c7, da = [],
                                e = 0;
                            for (;
                                (c7 = db[e]); e++) {
                                if (c7.nodeType === 1) {
                                    da.push(c7)
                                }
                            }
                            return da
                        }
                        return db
                    },
                NAME: ca &&
                    function (c7, e) {
                        if (typeof e.getElementsByName !== c2) {
                            return e.getElementsByName(name)
                        }
                    },
                CLASS: b7 &&
                    function (c8, e, c7) {
                        if (typeof e.getElementsByClassName !== c2 && !c7) {
                            return e.getElementsByClassName(c8)
                        }
                    }
            },
            relative: {
                ">": {
                    dir: "parentNode",
                    first: true
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: true
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function (e) {
                    e[1] = e[1].replace(cM, "");
                    e[3] = (e[4] || e[5] || "").replace(cM, "");
                    if (e[2] === "~=") {
                        e[3] = " " + e[3] + " "
                    }
                    return e.slice(0, 4)
                },
                CHILD: function (e) {
                    e[1] = e[1].toLowerCase();
                    if (e[1] === "nth") {
                        if (!e[2]) {
                            cz.error(e[0])
                        }
                        e[3] = +(e[3] ? e[4] + (e[5] || 1) : 2 * (e[2] === "even" || e[2] === "odd"));
                        e[4] = +((e[6] + e[7]) || e[2] === "odd")
                    } else {
                        if (e[2]) {
                            cz.error(e[0])
                        }
                    }
                    return e
                },
                PSEUDO: function (c8) {
                    var c7, e;
                    if (cj.CHILD.test(c8[0])) {
                        return null
                    }
                    if (c8[3]) {
                        c8[2] = c8[3]
                    } else {
                        if ((c7 = c8[4])) {
                            if (cF.test(c7) && (e = cA(c7, true)) && (e = c7.indexOf(")", c7.length - e) - c7.length)) {
                                c7 = c7.slice(0, e);
                                c8[0] = c8[0].slice(0, e)
                            }
                            c8[2] = c7
                        }
                    }
                    return c8.slice(0, 3)
                }
            },
            filter: {
                ID: b1 ?
                    function (e) {
                        e = e.replace(cM, "");
                        return function (c7) {
                            return c7.getAttribute("id") === e
                        }
                    } : function (e) {
                        e = e.replace(cM, "");
                        return function (c7) {
                            var c8 = typeof c7.getAttributeNode !== c2 && c7.getAttributeNode("id");
                            return c8 && c8.value === e
                        }
                    },
                TAG: function (e) {
                    if (e === "*") {
                        return function () {
                            return true
                        }
                    }
                    e = e.replace(cM, "").toLowerCase();
                    return function (c7) {
                        return c7.nodeName && c7.nodeName.toLowerCase() === e
                    }
                },
                CLASS: function (e) {
                    var c7 = ch[b8][e];
                    if (!c7) {
                        c7 = ch(e, new RegExp("(^|" + cq + ")" + e + "(" + cq + "|$)"))
                    }
                    return function (c8) {
                        return c7.test(c8.className || (typeof c8.getAttribute !== c2 && c8.getAttribute("class")) || "")
                    }
                },
                ATTR: function (c8, c7, e) {
                    return function (db, c9) {
                        var da = cz.attr(db, c8);
                        if (da == null) {
                            return c7 === "!="
                        }
                        if (!c7) {
                            return true
                        }
                        da += "";
                        return c7 === "=" ? da === e : c7 === "!=" ? da !== e : c7 === "^=" ? e && da.indexOf(e) === 0 : c7 === "*=" ? e && da.indexOf(e) > -1 : c7 === "$=" ? e && da.substr(da.length - e.length) === e : c7 === "~=" ? (" " + da + " ").indexOf(e) > -1 : c7 === "|=" ? da === e || da.substr(0, e.length + 1) === e + "-" : false
                    }
                },
                CHILD: function (c7, c9, c8, e) {
                    if (c7 === "nth") {
                        return function (dd) {
                            var dc, db, da = dd.parentNode;
                            if (c8 === 1 && e === 0) {
                                return true
                            }
                            if (da) {
                                db = 0;
                                for (dc = da.firstChild; dc; dc = dc.nextSibling) {
                                    if (dc.nodeType === 1) {
                                        db++;
                                        if (dd === dc) {
                                            break
                                        }
                                    }
                                }
                            }
                            db -= e;
                            return db === c8 || (db % c8 === 0 && db / c8 >= 0)
                        }
                    }
                    return function (da) {
                        var db = da;
                        switch (c7) {
                            case "only":
                            case "first":
                                while ((db = db.previousSibling)) {
                                    if (db.nodeType === 1) {
                                        return false
                                    }
                                }
                                if (c7 === "first") {
                                    return true
                                }
                                db = da;
                            case "last":
                                while ((db = db.nextSibling)) {
                                    if (db.nodeType === 1) {
                                        return false
                                    }
                                }
                                return true
                        }
                    }
                },
                PSEUDO: function (c8, c9) {
                    var c7, e = cn.pseudos[c8] || cn.setFilters[c8.toLowerCase()] || cz.error("unsupported pseudo: " + c8);
                    if (e[b8]) {
                        return e(c9)
                    }
                    if (e.length > 1) {
                        c7 = [c8, c8, "", c9];
                        return cn.setFilters.hasOwnProperty(c8.toLowerCase()) ? cS(function (de, db) {
                            var da, dc = e(de, c9),
                                dd = dc.length;
                            while (dd--) {
                                da = ct.call(de, dc[dd]);
                                de[da] = !(db[da] = dc[dd])
                            }
                        }) : function (da) {
                            return e(da, 0, c7)
                        }
                    }
                    return e
                }
            },
            pseudos: {
                not: cS(function (c9) {
                    var c7 = [],
                        c8 = [],
                        e = cl(c9.replace(cd, "$1"));
                    return e[b8] ? cS(function (dg, de, dc, dd) {
                        var db, df = e(dg, null, dd, []),
                            da = dg.length;
                        while (da--) {
                            if ((db = df[da])) {
                                dg[da] = !(de[da] = db)
                            }
                        }
                    }) : function (dc, da, db) {
                        c7[0] = dc;
                        e(c7, null, db, c8);
                        return !c8.pop()
                    }
                }),
                has: cS(function (e) {
                    return function (c7) {
                        return cz(e, c7).length > 0
                    }
                }),
                contains: cS(function (e) {
                    return function (c7) {
                        return (c7.textContent || c7.innerText || b0(c7)).indexOf(e) > -1
                    }
                }),
                enabled: function (e) {
                    return e.disabled === false
                },
                disabled: function (e) {
                    return e.disabled === true
                },
                checked: function (e) {
                    var c7 = e.nodeName.toLowerCase();
                    return (c7 === "input" && !!e.checked) || (c7 === "option" && !!e.selected)
                },
                selected: function (e) {
                    if (e.parentNode) {
                        e.parentNode.selectedIndex
                    }
                    return e.selected === true
                },
                parent: function (e) {
                    return !cn.pseudos.empty(e)
                },
                empty: function (e) {
                    var c7;
                    e = e.firstChild;
                    while (e) {
                        if (e.nodeName > "@" || (c7 = e.nodeType) === 3 || c7 === 4) {
                            return false
                        }
                        e = e.nextSibling
                    }
                    return true
                },
                header: function (e) {
                    return b6.test(e.nodeName)
                },
                text: function (c8) {
                    var c7, e;
                    return c8.nodeName.toLowerCase() === "input" && (c7 = c8.type) === "text" && ((e = c8.getAttribute("type")) == null || e.toLowerCase() === c7)
                },
                radio: cN("radio"),
                checkbox: cN("checkbox"),
                file: cN("file"),
                password: cN("password"),
                image: cN("image"),
                submit: cp("submit"),
                reset: cp("reset"),
                button: function (e) {
                    var c7 = e.nodeName.toLowerCase();
                    return c7 === "input" && e.type === "button" || c7 === "button"
                },
                input: function (e) {
                    return b5.test(e.nodeName)
                },
                focus: function (e) {
                    var c7 = e.ownerDocument;
                    return e === c7.activeElement && (!c7.hasFocus || c7.hasFocus()) && !!(e.type || e.href)
                },
                active: function (e) {
                    return e === e.ownerDocument.activeElement
                },
                first: cu(function (e, c7, c8) {
                    return [0]
                }),
                last: cu(function (e, c7, c8) {
                    return [c7 - 1]
                }),
                eq: cu(function (e, c7, c8) {
                    return [c8 < 0 ? c8 + c7 : c8]
                }),
                even: cu(function (e, c8, c9) {
                    for (var c7 = 0; c7 < c8; c7 += 2) {
                        e.push(c7)
                    }
                    return e
                }),
                odd: cu(function (e, c8, c9) {
                    for (var c7 = 1; c7 < c8; c7 += 2) {
                        e.push(c7)
                    }
                    return e
                }),
                lt: cu(function (e, c8, c9) {
                    for (var c7 = c9 < 0 ? c9 + c8 : c9; --c7 >= 0;) {
                        e.push(c7)
                    }
                    return e
                }),
                gt: cu(function (e, c8, c9) {
                    for (var c7 = c9 < 0 ? c9 + c8 : c9; ++c7 < c8;) {
                        e.push(c7)
                    }
                    return e
                })
            }
        };

        function b3(c7, c8, e) {
            if (c7 === c8) {
                return e
            }
            var c9 = c7.nextSibling;
            while (c9) {
                if (c9 === c8) {
                    return -1
                }
                c9 = c9.nextSibling
            }
            return 1
        }
        cH = cB.compareDocumentPosition ?
            function (e, c7) {
                if (e === c7) {
                    c6 = true;
                    return 0
                }
                return (!e.compareDocumentPosition || !c7.compareDocumentPosition ? e.compareDocumentPosition : e.compareDocumentPosition(c7) & 4) ? -1 : 1
            } : function (da, db) {
                if (da === db) {
                    c6 = true;
                    return 0
                } else {
                    if (da.sourceIndex && db.sourceIndex) {
                        return da.sourceIndex - db.sourceIndex
                    }
                }
                var c8, c9, dc = [],
                    dd = [],
                    de = da.parentNode,
                    df = db.parentNode,
                    c7 = de;
                if (de === df) {
                    return b3(da, db)
                } else {
                    if (!de) {
                        return -1
                    } else {
                        if (!df) {
                            return 1
                        }
                    }
                }
                while (c7) {
                    dc.unshift(c7);
                    c7 = c7.parentNode
                }
                c7 = df;
                while (c7) {
                    dd.unshift(c7);
                    c7 = c7.parentNode
                }
                c8 = dc.length;
                c9 = dd.length;
                for (var e = 0; e < c8 && e < c9; e++) {
                    if (dc[e] !== dd[e]) {
                        return b3(dc[e], dd[e])
                    }
                }
                return e === c8 ? b3(da, dd[e], -1) : b3(dc[e], db, 1)
            };
        [0, 0].sort(cH);
        cL = !c6;
        cz.uniqueSort = function (c7) {
            var c8, e = 1;
            c6 = cL;
            c7.sort(cH);
            if (c6) {
                for (;
                    (c8 = c7[e]); e++) {
                    if (c8 === c7[e - 1]) {
                        c7.splice(e--, 1)
                    }
                }
            }
            return c7
        };
        cz.error = function (e) {
            throw new Error("Syntax error, unrecognized expression: " + e)
        };

        function cA(e, de) {
            var dc, c9, dd, df, da, c8, db, c7 = cY[b8][e];
            if (c7) {
                return de ? 0 : c7.slice(0)
            }
            da = e;
            c8 = [];
            db = cn.preFilter;
            while (da) {
                if (!dc || (c9 = cI.exec(da))) {
                    if (c9) {
                        da = da.slice(c9[0].length)
                    }
                    c8.push(dd = [])
                }
                dc = false;
                if ((c9 = cR.exec(da))) {
                    dd.push(dc = new cQ(c9.shift()));
                    da = da.slice(dc.length);
                    dc.type = c9[0].replace(cd, " ")
                }
                for (df in cn.filter) {
                    if ((c9 = cj[df].exec(da)) && (!db[df] || (c9 = db[df](c9, ci, true)))) {
                        dd.push(dc = new cQ(c9.shift()));
                        da = da.slice(dc.length);
                        dc.type = df;
                        dc.matches = c9
                    }
                }
                if (!dc) {
                    break
                }
            }
            return de ? da.length : da ? cz.error(e) : cY(e, c8).slice(0)
        }
        function cE(c7, c9, e) {
            var db = c9.dir,
                c8 = e && c9.dir === "parentNode",
                da = cZ++;
            return c9.first ?
                function (de, dc, dd) {
                    while ((de = de[db])) {
                        if (c8 || de.nodeType === 1) {
                            return c7(de, dc, dd)
                        }
                    }
                } : function (dc, dg, df) {
                    if (!df) {
                        var dh, de = c1 + " " + da + " ",
                            dd = de + cg;
                        while ((dc = dc[db])) {
                            if (c8 || dc.nodeType === 1) {
                                if ((dh = dc[b8]) === dd) {
                                    return dc.sizset
                                } else {
                                    if (typeof dh === "string" && dh.indexOf(de) === 0) {
                                        if (dc.sizset) {
                                            return dc
                                        }
                                    } else {
                                        dc[b8] = dd;
                                        if (c7(dc, dg, df)) {
                                            dc.sizset = true;
                                            return dc
                                        }
                                        dc.sizset = false
                                    }
                                }
                            }
                        }
                    } else {
                        while ((dc = dc[db])) {
                            if (c8 || dc.nodeType === 1) {
                                if (c7(dc, dg, df)) {
                                    return dc
                                }
                            }
                        }
                    }
                }
        }
        function cr(e) {
            return e.length > 1 ?
                function (da, c7, c9) {
                    var c8 = e.length;
                    while (c8--) {
                        if (!e[c8](da, c7, c9)) {
                            return false
                        }
                    }
                    return true
                } : e[0]
        }
        function cy(dd, db, c9, de, da) {
            var c8, e = [],
                c7 = 0,
                dc = dd.length,
                df = db != null;
            for (; c7 < dc; c7++) {
                if ((c8 = dd[c7])) {
                    if (!c9 || c9(c8, de, da)) {
                        e.push(c8);
                        if (df) {
                            db.push(c7)
                        }
                    }
                }
            }
            return e
        }
        function c0(c9, e, c7, db, c8, da) {
            if (db && !db[b8]) {
                db = c0(db)
            }
            if (c8 && !c8[b8]) {
                c8 = c0(c8, da)
            }
            return cS(function (dl, dg, dc, dp) {
                if (dl && c8) {
                    return
                }
                var dj, dm, de, dk = [],
                    df = [],
                    dn = dg.length,
                    dd = dl || cb(e || "*", dc.nodeType ? [dc] : dc, [], dl),
                    di = c9 && (dl || !e) ? cy(dd, dk, c9, dc, dp) : dd,
                    dh = c7 ? c8 || (dl ? c9 : dn || db) ? [] : dg : di;
                if (c7) {
                    c7(di, dh, dc, dp)
                }
                if (db) {
                    de = cy(dh, df);
                    db(de, [], dc, dp);
                    dj = de.length;
                    while (dj--) {
                        if ((dm = de[dj])) {
                            dh[df[dj]] = !(di[df[dj]] = dm)
                        }
                    }
                }
                if (dl) {
                    dj = c9 && dh.length;
                    while (dj--) {
                        if ((dm = dh[dj])) {
                            dl[dk[dj]] = !(dg[dk[dj]] = dm)
                        }
                    }
                } else {
                    dh = cy(dh === dg ? dh.splice(dn, dh.length) : dh);
                    if (c8) {
                        c8(null, dg, dh, dp)
                    } else {
                        cJ.apply(dg, dh)
                    }
                }
            })
        }
        function co(de) {
            var df, c8, c7, da = de.length,
                dg = cn.relative[de[0].type],
                dd = dg || cn.relative[" "],
                e = dg ? 1 : 0,
                db = cE(function (dh) {
                    return dh === df
                }, dd, true),
                dc = cE(function (dh) {
                    return ct.call(df, dh) > -1
                }, dd, true),
                c9 = [function (dj, dh, di) {
                    return (!dg && (di || dh !== cP)) || ((df = dh).nodeType ? db(dj, dh, di) : dc(dj, dh, di))
                }];
            for (; e < da; e++) {
                if ((c8 = cn.relative[de[e].type])) {
                    c9 = [cE(cr(c9), c8)]
                } else {
                    c8 = cn.filter[de[e].type].apply(null, de[e].matches);
                    if (c8[b8]) {
                        c7 = ++e;
                        for (; c7 < da; c7++) {
                            if (cn.relative[de[c7].type]) {
                                break
                            }
                        }
                        return c0(e > 1 && cr(c9), e > 1 && de.slice(0, e - 1).join("").replace(cd, "$1"), c8, e < c7 && co(de.slice(e, c7)), c7 < da && co((de = de.slice(c7))), c7 < da && de.join(""))
                    }
                    c9.push(c8)
                }
            }
            return cr(c9)
        }
        function cW(c7, e) {
            var c9 = e.length > 0,
                c8 = c7.length > 0,
                da = function (dl, dc, dr, df, dn) {
                    var dm, dj, dq, de = [],
                        dg = 0,
                        di = "0",
                        db = dl && [],
                        dh = dn != null,
                        dp = cP,
                        dd = dl || c8 && cn.find.TAG("*", dn && dc.parentNode || dc),
                        dk = (c1 += dp == null ? 1 : Math.E);
                    if (dh) {
                        cP = dc !== ci && dc;
                        cg = da.el
                    }
                    for (;
                        (dm = dd[di]) != null; di++) {
                        if (c8 && dm) {
                            for (dj = 0;
                                (dq = c7[dj]); dj++) {
                                if (dq(dm, dc, dr)) {
                                    df.push(dm);
                                    break
                                }
                            }
                            if (dh) {
                                c1 = dk;
                                cg = ++da.el
                            }
                        }
                        if (c9) {
                            if ((dm = !dq && dm)) {
                                dg--
                            }
                            if (dl) {
                                db.push(dm)
                            }
                        }
                    }
                    dg += di;
                    if (c9 && di !== dg) {
                        for (dj = 0;
                            (dq = e[dj]); dj++) {
                            dq(db, de, dc, dr)
                        }
                        if (dl) {
                            if (dg > 0) {
                                while (di--) {
                                    if (!(db[di] || de[di])) {
                                        de[di] = cc.call(df)
                                    }
                                }
                            }
                            de = cy(de)
                        }
                        cJ.apply(df, de);
                        if (dh && !dl && de.length > 0 && (dg + e.length) > 1) {
                            cz.uniqueSort(df)
                        }
                    }
                    if (dh) {
                        c1 = dk;
                        cP = dp
                    }
                    return db
                };
            da.el = 0;
            return c9 ? cS(da) : da
        }
        cl = cz.compile = function (e, c8) {
            var da, db = [],
                c7 = [],
                c9 = cx[b8][e];
            if (!c9) {
                if (!c8) {
                    c8 = cA(e)
                }
                da = c8.length;
                while (da--) {
                    c9 = co(c8[da]);
                    if (c9[b8]) {
                        db.push(c9)
                    } else {
                        c7.push(c9)
                    }
                }
                c9 = cx(e, cW(c7, db))
            }
            return c9
        };

        function cb(e, db, c9, c7) {
            var da = 0,
                c8 = db.length;
            for (; da < c8; da++) {
                cz(e, db[da], c9, c7)
            }
            return c9
        }
        function ck(e, c8, de, dh, c9) {
            var dg, dd, df, dc, db, da = cA(e),
                c7 = da.length;
            if (!dh) {
                if (da.length === 1) {
                    dd = da[0] = da[0].slice(0);
                    if (dd.length > 2 && (df = dd[0]).type === "ID" && c8.nodeType === 9 && !c9 && cn.relative[dd[1].type]) {
                        c8 = cn.find.ID(df.matches[0].replace(cM, ""), c8, c9)[0];
                        if (!c8) {
                            return de
                        }
                        e = e.slice(dd.shift().length)
                    }
                    for (dg = cj.POS.test(e) ? -1 : dd.length - 1; dg >= 0; dg--) {
                        df = dd[dg];
                        if (cn.relative[(dc = df.type)]) {
                            break
                        }
                        if ((db = cn.find[dc])) {
                            if ((dh = db(df.matches[0].replace(cM, ""), cv.test(dd[0].type) && c8.parentNode || c8, c9))) {
                                dd.splice(dg, 1);
                                e = dh.length && dd.join("");
                                if (!e) {
                                    cJ.apply(de, cK.call(dh, 0));
                                    return de
                                }
                                break
                            }
                        }
                    }
                }
            }
            cl(e, da)(dh, c8, c9, de, cv.test(e));
            return de
        }
        if (ci.querySelectorAll) {
            (function () {
                var c8, db = ck,
                    dc = /'|\\/g,
                    e = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g,
                    c7 = [":focus"],
                    c9 = [":active", ":focus"],
                    da = cB.matchesSelector || cB.mozMatchesSelector || cB.webkitMatchesSelector || cB.oMatchesSelector || cB.msMatchesSelector;
                ce(function (dd) {
                    dd.innerHTML = "<select><option selected=''></option></select>";
                    if (!dd.querySelectorAll("[selected]").length) {
                        c7.push("\\[" + cq + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)")
                    }
                    if (!dd.querySelectorAll(":checked").length) {
                        c7.push(":checked")
                    }
                });
                ce(function (dd) {
                    dd.innerHTML = "<p test=''></p>";
                    if (dd.querySelectorAll("[test^='']").length) {
                        c7.push("[*^$]=" + cq + "*(?:\"\"|'')")
                    }
                    dd.innerHTML = "<input type='hidden'/>";
                    if (!dd.querySelectorAll(":enabled").length) {
                        c7.push(":enabled", ":disabled")
                    }
                });
                c7 = new RegExp(c7.join("|"));
                ck = function (dd, de, dk, dn, df) {
                    if (!dn && !df && (!c7 || !c7.test(dd))) {
                        var dh, dm, di = true,
                            dl = b8,
                            dg = de,
                            dj = de.nodeType === 9 && dd;
                        if (de.nodeType === 1 && de.nodeName.toLowerCase() !== "object") {
                            dh = cA(dd);
                            if ((di = de.getAttribute("id"))) {
                                dl = di.replace(dc, "\\$&")
                            } else {
                                de.setAttribute("id", dl)
                            }
                            dl = "[id='" + dl + "'] ";
                            dm = dh.length;
                            while (dm--) {
                                dh[dm] = dl + dh[dm].join("")
                            }
                            dg = cv.test(dd) && de.parentNode || de;
                            dj = dh.join(",")
                        }
                        if (dj) {
                            try {
                                cJ.apply(dk, cK.call(dg.querySelectorAll(dj), 0));
                                return dk
                            } catch (dp) { } finally {
                                if (!di) {
                                    de.removeAttribute("id")
                                }
                            }
                        }
                    }
                    return db(dd, de, dk, dn, df)
                };
                if (da) {
                    ce(function (de) {
                        c8 = da.call(de, "div");
                        try {
                            da.call(de, "[test!='']:sizzle");
                            c9.push("!=", cw)
                        } catch (dd) { }
                    });
                    c9 = new RegExp(c9.join("|"));
                    cz.matchesSelector = function (df, dd) {
                        dd = dd.replace(e, "='$1']");
                        if (!cm(df) && !c9.test(dd) && (!c7 || !c7.test(dd))) {
                            try {
                                var de = da.call(df, dd);
                                if (de || c8 || df.document && df.document.nodeType !== 11) {
                                    return de
                                }
                            } catch (dg) { }
                        }
                        return cz(dd, null, null, [df]).length > 0
                    }
                }
            })()
        }
        cn.pseudos.nth = cn.pseudos.eq;

        function cD() { }
        cn.filters = cD.prototype = cn.pseudos;
        cn.setFilters = new cD();
        cz.attr = S.attr;
        S.find = cz;
        S.expr = cz.selectors;
        S.expr[":"] = S.expr.pseudos;
        S.unique = cz.uniqueSort;
        S.text = cz.getText;
        S.isXMLDoc = cz.isXML;
        S.contains = cz.contains
    })(Y);
    var p = /Until$/,
        B = /^(?:parents|prev(?:Until|All))/,
        aW = /^.[^:#\[\.,]*$/,
        aX = S.expr.match.needsContext,
        ba = {
            children: true,
            contents: true,
            next: true,
            prev: true
        };
    S.fn.extend({
        find: function (e) {
            var b5, b0, b4, b1, b3, b2, bZ = this;
            if (typeof e !== "string") {
                return S(e).filter(function () {
                    for (b5 = 0, b0 = bZ.length; b5 < b0; b5++) {
                        if (S.contains(bZ[b5], this)) {
                            return true
                        }
                    }
                })
            }
            b2 = this.pushStack("", "find", e);
            for (b5 = 0, b0 = this.length; b5 < b0; b5++) {
                b4 = b2.length;
                S.find(e, this[b5], b2);
                if (b5 > 0) {
                    for (b1 = b4; b1 < b2.length; b1++) {
                        for (b3 = 0; b3 < b4; b3++) {
                            if (b2[b3] === b2[b1]) {
                                b2.splice(b1--, 1);
                                break
                            }
                        }
                    }
                }
            }
            return b2
        },
        has: function (e) {
            var bZ, b1 = S(e, this),
                b0 = b1.length;
            return this.filter(function () {
                for (bZ = 0; bZ < b0; bZ++) {
                    if (S.contains(this, b1[bZ])) {
                        return true
                    }
                }
            })
        },
        not: function (e) {
            return this.pushStack(aj(this, e, false), "not", e)
        },
        filter: function (e) {
            return this.pushStack(aj(this, e, true), "filter", e)
        },
        is: function (e) {
            return !!e && (typeof e === "string" ? aX.test(e) ? S(e, this.context).index(this[0]) >= 0 : S.filter(e, this).length > 0 : this.filter(e).length > 0)
        },
        closest: function (b4, b1) {
            var b3, e = 0,
                b0 = this.length,
                b2 = [],
                bZ = aX.test(b4) || typeof b4 !== "string" ? S(b4, b1 || this.context) : 0;
            for (; e < b0; e++) {
                b3 = this[e];
                while (b3 && b3.ownerDocument && b3 !== b1 && b3.nodeType !== 11) {
                    if (bZ ? bZ.index(b3) > -1 : S.find.matchesSelector(b3, b4)) {
                        b2.push(b3);
                        break
                    }
                    b3 = b3.parentNode
                }
            }
            b2 = b2.length > 1 ? S.unique(b2) : b2;
            return this.pushStack(b2, "closest", b4)
        },
        index: function (e) {
            if (!e) {
                return (this[0] && this[0].parentNode) ? this.prevAll().length : -1
            }
            if (typeof e === "string") {
                return S.inArray(this[0], S(e))
            }
            return S.inArray(e.jquery ? e[0] : e, this)
        },
        add: function (b0, e) {
            var bZ = typeof b0 === "string" ? S(b0, e) : S.makeArray(b0 && b0.nodeType ? [b0] : b0),
                b1 = S.merge(this.get(), bZ);
            return this.pushStack(bF(bZ[0]) || bF(b1[0]) ? b1 : S.unique(b1))
        },
        addBack: function (e) {
            return this.add(e == null ? this.prevObject : this.prevObject.filter(e))
        }
    });
    S.fn.andSelf = S.fn.addBack;

    function bF(e) {
        return !e || !e.parentNode || e.parentNode.nodeType === 11
    }
    function u(bZ, e) {
        do {
            bZ = bZ[e]
        } while (bZ && bZ.nodeType !== 1);
        return bZ
    }
    S.each({
        parent: function (e) {
            var bZ = e.parentNode;
            return bZ && bZ.nodeType !== 11 ? bZ : null
        },
        parents: function (e) {
            return S.dir(e, "parentNode")
        },
        parentsUntil: function (bZ, e, b0) {
            return S.dir(bZ, "parentNode", b0)
        },
        next: function (e) {
            return u(e, "nextSibling")
        },
        prev: function (e) {
            return u(e, "previousSibling")
        },
        nextAll: function (e) {
            return S.dir(e, "nextSibling")
        },
        prevAll: function (e) {
            return S.dir(e, "previousSibling")
        },
        nextUntil: function (bZ, e, b0) {
            return S.dir(bZ, "nextSibling", b0)
        },
        prevUntil: function (bZ, e, b0) {
            return S.dir(bZ, "previousSibling", b0)
        },
        siblings: function (e) {
            return S.sibling((e.parentNode || {}).firstChild, e)
        },
        children: function (e) {
            return S.sibling(e.firstChild)
        },
        contents: function (bZ) {
            try {
                return S.nodeName(bZ, "iframe") ? bZ.contentDocument || bZ.contentWindow.document : S.merge([], bZ.childNodes)
            } catch (b0) {
                return ""
            }
        }
    }, function (bZ, e) {
        S.fn[bZ] = function (b2, b1) {
            var b0 = S.map(this, e, b2);
            if (!p.test(bZ)) {
                b1 = b2
            }
            if (b1 && typeof b1 === "string") {
                b0 = S.filter(b1, b0)
            }
            b0 = this.length > 1 && !ba[bZ] ? S.unique(b0) : b0;
            if (this.length > 1 && B.test(bZ)) {
                b0 = b0.reverse()
            }
            return this.pushStack(b0, bZ, aE.call(arguments).join(","))
        }
    });
    S.extend({
        filter: function (e, b0, bZ) {
            if (bZ) {
                e = ":not(" + e + ")"
            }
            return b0.length === 1 ? S.find.matchesSelector(b0[0], e) ? [b0[0]] : [] : S.find.matches(e, b0)
        },
        dir: function (b1, bZ, b2) {
            var b0 = [],
                e = b1[bZ];
            while (e && e.nodeType !== 9 && (b2 === bD || e.nodeType !== 1 || !S(e).is(b2))) {
                if (e.nodeType === 1) {
                    b0.push(e)
                }
                e = e[bZ]
            }
            return b0
        },
        sibling: function (b0, bZ) {
            var e = [];
            for (; b0; b0 = b0.nextSibling) {
                if (b0.nodeType === 1 && b0 !== bZ) {
                    e.push(b0)
                }
            }
            return e
        }
    });

    function aj(e, b0, b1) {
        b0 = b0 || 0;
        if (S.isFunction(b0)) {
            return S.grep(e, function (b4, b3) {
                var b2 = !!b0.call(b4, b3, b4);
                return b2 === b1
            })
        } else {
            if (b0.nodeType) {
                return S.grep(e, function (b2, b3) {
                    return (b2 === b0) === b1
                })
            } else {
                if (typeof b0 === "string") {
                    var bZ = S.grep(e, function (b2) {
                        return b2.nodeType === 1
                    });
                    if (aW.test(b0)) {
                        return S.filter(b0, bZ, !b1)
                    } else {
                        b0 = S.filter(b0, bZ)
                    }
                }
            }
        }
        return S.grep(e, function (b2, b3) {
            return (S.inArray(b2, b0) >= 0) === b1
        })
    }
    function aL(bZ) {
        var e = bJ.split("|"),
            b0 = bZ.createDocumentFragment();
        if (b0.createElement) {
            while (e.length) {
                b0.createElement(e.pop())
            }
        }
        return b0
    }
    var bJ = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
        a6 = / jQuery\d+="(?:null|\d+)"/g,
        ai = /^\s+/,
        bY = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
        J = /<([\w:]+)/,
        bG = /<tbody/i,
        bh = /<|&#?\w+;/,
        m = /<(?:script|style|link)/i,
        L = /<(?:script|object|embed|option|style)/i,
        aC = new RegExp("<(?:" + bJ + ")[\\s/>]", "i"),
        bm = /^(?:checkbox|radio)$/,
        bj = /checked\s*(?:[^=]|=\s*.checked.)/i,
        al = /\/(java|ecma)script/i,
        ah = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g,
        C = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            area: [1, "<map>", "</map>"],
            _default: [0, "", ""]
        },
        A = aL(bQ),
        aA = A.appendChild(bQ.createElement("div"));
    C.optgroup = C.option;
    C.tbody = C.tfoot = C.colgroup = C.caption = C.thead;
    C.th = C.td;
    if (!S.support.htmlSerialize) {
        C._default = [1, "X<div>", "</div>"]
    }
    S.fn.extend({
        text: function (e) {
            e = _.decode(e);
            return S.access(this, function (bZ) {
                return bZ === bD ? S.text(this) : this.empty().append((this[0] && this[0].ownerDocument || bQ).createTextNode(bZ))
            }, null, e, arguments.length)
        },
        wrapAll: function (e) {
            if (S.isFunction(e)) {
                return this.each(function (b0) {
                    S(this).wrapAll(e.call(this, b0))
                })
            }
            if (this[0]) {
                var bZ = S(e, this[0].ownerDocument).eq(0).clone(true);
                if (this[0].parentNode) {
                    bZ.insertBefore(this[0])
                }
                bZ.map(function () {
                    var b0 = this;
                    while (b0.firstChild && b0.firstChild.nodeType === 1) {
                        b0 = b0.firstChild
                    }
                    return b0
                }).append(this)
            }
            return this
        },
        wrapInner: function (e) {
            if (S.isFunction(e)) {
                return this.each(function (bZ) {
                    S(this).wrapInner(e.call(this, bZ))
                })
            }
            return this.each(function () {
                var bZ = S(this),
                    b0 = bZ.contents();
                if (b0.length) {
                    b0.wrapAll(e)
                } else {
                    bZ.append(e)
                }
            })
        },
        wrap: function (e) {
            var bZ = S.isFunction(e);
            return this.each(function (b0) {
                S(this).wrapAll(bZ ? e.call(this, b0) : e)
            })
        },
        unwrap: function () {
            return this.parent().each(function () {
                if (!S.nodeName(this, "body")) {
                    S(this).replaceWith(this.childNodes)
                }
            }).end()
        },
        append: function () {
            return this.domManip(arguments, true, function (e) {
                if (this.nodeType === 1 || this.nodeType === 11) {
                    e = _.decode(e);
                    this.appendChild(e)
                }
            })
        },
        prepend: function () {
            return this.domManip(arguments, true, function (e) {
                if (this.nodeType === 1 || this.nodeType === 11) {
                    e = _.decode(e);
                    this.insertBefore(e, this.firstChild)
                }
            })
        },
        before: function () {
            if (!bF(this[0])) {
                return this.domManip(arguments, false, function (bZ) {
                    bZ = _.decode(bZ);
                    this.parentNode.insertBefore(bZ, this)
                })
            }
            if (arguments.length) {
                var e = S.clean(arguments);
                return this.pushStack(S.merge(e, this), "before", this.selector)
            }
        },
        after: function () {
            if (!bF(this[0])) {
                return this.domManip(arguments, false, function (bZ) {
                    bZ = _.decode(bZ);
                    this.parentNode.insertBefore(bZ, this.nextSibling)
                })
            }
            if (arguments.length) {
                var e = S.clean(arguments);
                return this.pushStack(S.merge(this, e), "after", this.selector)
            }
        },
        remove: function (b0, e) {
            var b1, bZ = 0;
            for (;
                (b1 = this[bZ]) != null; bZ++) {
                if (!b0 || S.filter(b0, [b1]).length) {
                    if (!e && b1.nodeType === 1) {
                        S.cleanData(b1.getElementsByTagName("*"));
                        S.cleanData([b1])
                    }
                    if (b1.parentNode) {
                        b1.parentNode.removeChild(b1)
                    }
                }
            }
            return this
        },
        empty: function () {
            var e, bZ = 0;
            for (;
                (e = this[bZ]) != null; bZ++) {
                if (e.nodeType === 1) {
                    S.cleanData(e.getElementsByTagName("*"))
                }
                while (e.firstChild) {
                    e.removeChild(e.firstChild)
                }
            }
            return this
        },
        clone: function (e, bZ) {
            e = e == null ? false : e;
            bZ = bZ == null ? e : bZ;
            return this.map(function () {
                return S.clone(this, e, bZ)
            })
        },
        html: function (e) {
            return S.access(this, function (bZ) {
                var b1 = this[0] || {},
                    b0 = 0,
                    b2 = this.length;
                if (bZ === bD) {
                    return b1.nodeType === 1 ? b1.innerHTML.replace(a6, "") : bD
                }
                if (typeof bZ === "string" && !m.test(bZ) && (S.support.htmlSerialize || !aC.test(bZ)) && (S.support.leadingWhitespace || !ai.test(bZ)) && !C[(J.exec(bZ) || ["", ""])[1].toLowerCase()]) {
                    bZ = bZ.replace(bY, "<$1></$2>");
                    try {
                        for (; b0 < b2; b0++) {
                            b1 = this[b0] || {};
                            if (b1.nodeType === 1) {
                                S.cleanData(b1.getElementsByTagName("*"));
                                b1.innerHTML = bZ
                            }
                        }
                        b1 = 0
                    } catch (b3) { }
                }
                if (b1) {
                    this.empty().append(bZ)
                }
            }, null, e, arguments.length)
        },
        replaceWith: function (e) {
            if (!bF(this[0])) {
                if (S.isFunction(e)) {
                    return this.each(function (bZ) {
                        var b0 = S(this),
                            b1 = b0.html();
                        b0.replaceWith(e.call(this, bZ, b1))
                    })
                }
                if (typeof e !== "string") {
                    e = S(e).detach()
                }
                return this.each(function () {
                    var b0 = this.nextSibling,
                        bZ = this.parentNode;
                    S(this).remove();
                    if (b0) {
                        S(b0).before(e)
                    } else {
                        S(bZ).append(e)
                    }
                })
            }
            return this.length ? this.pushStack(S(S.isFunction(e) ? e() : e), "replaceWith", e) : this
        },
        detach: function (e) {
            return this.remove(e, true)
        },
        domManip: function (b8, b4, b0) {
            b8 = [].concat.apply([], b8);
            var b5, bZ, b2, b3, b7 = 0,
                e = b8[0],
                b6 = [],
                b1 = this.length;
            if (!S.support.checkClone && b1 > 1 && typeof e === "string" && bj.test(e)) {
                return this.each(function () {
                    S(this).domManip(b8, b4, b0)
                })
            }
            if (S.isFunction(e)) {
                return this.each(function (ca) {
                    var b9 = S(this);
                    b8[0] = e.call(this, ca, b4 ? b9.html() : bD);
                    b9.domManip(b8, b4, b0)
                })
            }
            if (this[0]) {
                b5 = S.buildFragment(b8, this, b6);
                b2 = b5.fragment;
                bZ = b2.firstChild;
                if (b2.childNodes.length === 1) {
                    b2 = bZ
                }
                if (bZ) {
                    b4 = b4 && S.nodeName(bZ, "tr");
                    for (b3 = b5.cacheable || b1 - 1; b7 < b1; b7++) {
                        b0.call(b4 && S.nodeName(this[b7], "table") ? s(this[b7], "tbody") : this[b7], b7 === b3 ? b2 : S.clone(b2, true, true))
                    }
                }
                b2 = bZ = null;
                if (b6.length) {
                    S.each(b6, function (ca, b9) {
                        if (b9.src) {
                            if (S.ajax) {
                                S.ajax({
                                    url: b9.src,
                                    type: "GET",
                                    dataType: "script",
                                    async: false,
                                    global: false,
                                    "throws": true
                                })
                            } else {
                                S.error("no ajax")
                            }
                        } else {
                            S.globalEval((b9.text || b9.textContent || b9.innerHTML || "").replace(ah, ""))
                        }
                        if (b9.parentNode) {
                            b9.parentNode.removeChild(b9)
                        }
                    })
                }
            }
            return this
        }
    });

    function s(e, bZ) {
        return e.getElementsByTagName(bZ)[0] || e.appendChild(e.ownerDocument.createElement(bZ))
    }
    function X(e, b5) {
        if (b5.nodeType !== 1 || !S.hasData(e)) {
            return
        }
        var b2, bZ, b1, b3 = S._data(e),
            b0 = S._data(b5, b3),
            b4 = b3.events;
        if (b4) {
            delete b0.handle;
            b0.events = {};
            for (b2 in b4) {
                for (bZ = 0, b1 = b4[b2].length; bZ < b1; bZ++) {
                    S.event.add(b5, b2, b4[b2][bZ])
                }
            }
        }
        if (b0.data) {
            b0.data = S.extend({}, b0.data)
        }
    }
    function bz(bZ, e) {
        var b0;
        if (e.nodeType !== 1) {
            return
        }
        if (e.clearAttributes) {
            e.clearAttributes()
        }
        if (e.mergeAttributes) {
            e.mergeAttributes(bZ)
        }
        b0 = e.nodeName.toLowerCase();
        if (b0 === "object") {
            if (e.parentNode) {
                e.outerHTML = bZ.outerHTML
            }
            if (S.support.html5Clone && (bZ.innerHTML && !S.trim(e.innerHTML))) {
                e.innerHTML = bZ.innerHTML
            }
        } else {
            if (b0 === "input" && bm.test(bZ.type)) {
                e.defaultChecked = e.checked = bZ.checked;
                if (e.value !== bZ.value) {
                    e.value = bZ.value
                }
            } else {
                if (b0 === "option") {
                    e.selected = bZ.defaultSelected
                } else {
                    if (b0 === "input" || b0 === "textarea") {
                        e.defaultValue = bZ.defaultValue
                    } else {
                        if (b0 === "script" && e.text !== bZ.text) {
                            e.text = bZ.text
                        }
                    }
                }
            }
        }
        e.removeAttribute(S.expando)
    }
    S.buildFragment = function (b4, bZ, b3) {
        var b0, b2, e, b1 = b4[0];
        bZ = bZ || bQ;
        bZ = !bZ.nodeType && bZ[0] || bZ;
        bZ = bZ.ownerDocument || bZ;
        if (b4.length === 1 && typeof b1 === "string" && b1.length < 512 && bZ === bQ && b1.charAt(0) === "<" && !L.test(b1) && (S.support.checkClone || !bj.test(b1)) && (S.support.html5Clone || !aC.test(b1))) {
            b2 = true;
            b0 = S.fragments[b1];
            e = b0 !== bD
        }
        if (!b0) {
            b0 = bZ.createDocumentFragment();
            S.clean(b4, bZ, b0, b3);
            if (b2) {
                S.fragments[b1] = e && b0
            }
        }
        return {
            fragment: b0,
            cacheable: b2
        }
    };
    S.fragments = {};
    S.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function (e, bZ) {
        S.fn[e] = function (b0) {
            var b5, b6 = 0,
                b2 = [],
                b4 = S(b0),
                b1 = b4.length,
                b3 = this.length === 1 && this[0].parentNode;
            if ((b3 == null || b3 && b3.nodeType === 11 && b3.childNodes.length === 1) && b1 === 1) {
                b4[bZ](this[0]);
                return this
            } else {
                for (; b6 < b1; b6++) {
                    b5 = (b6 > 0 ? this.clone(true) : this).get();
                    S(b4[b6])[bZ](b5);
                    b2 = b2.concat(b5)
                }
                return this.pushStack(b2, e, b4.selector)
            }
        }
    });

    function bg(e) {
        if (typeof e.getElementsByTagName !== "undefined") {
            return e.getElementsByTagName("*")
        } else {
            if (typeof e.querySelectorAll !== "undefined") {
                return e.querySelectorAll("*")
            } else {
                return []
            }
        }
    }
    function bo(e) {
        if (bm.test(e.type)) {
            e.defaultChecked = e.checked
        }
    }
    S.extend({
        clone: function (b0, e, b2) {
            var b3, b4, bZ, b1;
            if (S.support.html5Clone || S.isXMLDoc(b0) || !aC.test("<" + b0.nodeName + ">")) {
                b1 = b0.cloneNode(true)
            } else {
                aA.innerHTML = b0.outerHTML;
                aA.removeChild(b1 = aA.firstChild)
            }
            if ((!S.support.noCloneEvent || !S.support.noCloneChecked) && (b0.nodeType === 1 || b0.nodeType === 11) && !S.isXMLDoc(b0)) {
                bz(b0, b1);
                b3 = bg(b0);
                b4 = bg(b1);
                for (bZ = 0; b3[bZ]; ++bZ) {
                    if (b4[bZ]) {
                        bz(b3[bZ], b4[bZ])
                    }
                }
            }
            if (e) {
                X(b0, b1);
                if (b2) {
                    b3 = bg(b0);
                    b4 = bg(b1);
                    for (bZ = 0; b3[bZ]; ++bZ) {
                        X(b3[bZ], b4[bZ])
                    }
                }
            }
            b3 = b4 = null;
            return b1
        },
        clean: function (bZ, e, b9, b5) {
            var b6, b4, b1, b7, ca, cb, b0, cc, b2, cf, b3, cd, b8 = e === bQ && A,
                ce = [];
            if (!e || typeof e.createDocumentFragment === "undefined") {
                e = bQ
            }
            for (b6 = 0;
                (b1 = bZ[b6]) != null; b6++) {
                if (typeof b1 === "number") {
                    b1 += ""
                }
                if (!b1) {
                    continue
                }
                if (typeof b1 === "string") {
                    if (!bh.test(b1)) {
                        b1 = e.createTextNode(b1)
                    } else {
                        b8 = b8 || aL(e);
                        b0 = e.createElement("div");
                        b8.appendChild(b0);
                        b1 = b1.replace(bY, "<$1></$2>");
                        b7 = (J.exec(b1) || ["", ""])[1].toLowerCase();
                        ca = C[b7] || C._default;
                        cb = ca[0];
                        b0.innerHTML = ca[1] + b1 + ca[2];
                        while (cb--) {
                            b0 = b0.lastChild
                        }
                        if (!S.support.tbody) {
                            cc = bG.test(b1);
                            b2 = b7 === "table" && !cc ? b0.firstChild && b0.firstChild.childNodes : ca[1] === "<table>" && !cc ? b0.childNodes : [];
                            for (b4 = b2.length - 1; b4 >= 0; --b4) {
                                if (S.nodeName(b2[b4], "tbody") && !b2[b4].childNodes.length) {
                                    b2[b4].parentNode.removeChild(b2[b4])
                                }
                            }
                        }
                        if (!S.support.leadingWhitespace && ai.test(b1)) {
                            b0.insertBefore(e.createTextNode(ai.exec(b1)[0]), b0.firstChild)
                        }
                        b1 = b0.childNodes;
                        b0.parentNode.removeChild(b0)
                    }
                }
                if (b1.nodeType) {
                    ce.push(b1)
                } else {
                    S.merge(ce, b1)
                }
            }
            if (b0) {
                b1 = b0 = b8 = null
            }
            if (!S.support.appendChecked) {
                for (b6 = 0;
                    (b1 = ce[b6]) != null; b6++) {
                    if (S.nodeName(b1, "input")) {
                        bo(b1)
                    } else {
                        if (typeof b1.getElementsByTagName !== "undefined") {
                            S.grep(b1.getElementsByTagName("input"), bo)
                        }
                    }
                }
            }
            if (b9) {
                b3 = function (cg) {
                    if (!cg.type || al.test(cg.type)) {
                        return b5 ? b5.push(cg.parentNode ? cg.parentNode.removeChild(cg) : cg) : b9.appendChild(cg)
                    }
                };
                for (b6 = 0;
                    (b1 = ce[b6]) != null; b6++) {
                    if (!(S.nodeName(b1, "script") && b3(b1))) {
                        b9.appendChild(b1);
                        if (typeof b1.getElementsByTagName !== "undefined") {
                            cd = S.grep(S.merge([], b1.getElementsByTagName("script")), b3);
                            ce.splice.apply(ce, [b6 + 1, 0].concat(cd));
                            b6 += cd.length
                        }
                    }
                }
            }
            return ce
        },
        cleanData: function (b5, b1) {
            var e, b2, bZ, b3, b6 = 0,
                b8 = S.expando,
                b4 = S.cache,
                b0 = S.support.deleteExpando,
                b7 = S.event.special;
            for (;
                (bZ = b5[b6]) != null; b6++) {
                if (b1 || S.acceptData(bZ)) {
                    b2 = bZ[b8];
                    e = b2 && b4[b2];
                    if (e) {
                        if (e.events) {
                            for (b3 in e.events) {
                                if (b7[b3]) {
                                    S.event.remove(bZ, b3)
                                } else {
                                    S.removeEvent(bZ, b3, e.handle)
                                }
                            }
                        }
                        if (b4[b2]) {
                            delete b4[b2];
                            if (b0) {
                                delete bZ[b8]
                            } else {
                                if (bZ.removeAttribute) {
                                    bZ.removeAttribute(b8)
                                } else {
                                    bZ[b8] = null
                                }
                            }
                            S.deletedIds.push(b2)
                        }
                    }
                }
            }
        }
    });
    (function () {
        var bZ, e;
        S.uaMatch = function (b1) {
            b1 = b1.toLowerCase();
            var b0 = /(chrome)[ \/]([\w.]+)/.exec(b1) || /(webkit)[ \/]([\w.]+)/.exec(b1) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(b1) || /(msie) ([\w.]+)/.exec(b1) || b1.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(b1) || [];
            return {
                browser: b0[1] || "",
                version: b0[2] || "0"
            }
        };
        bZ = S.uaMatch(bi.userAgent);
        e = {};
        if (bZ.browser) {
            e[bZ.browser] = true;
            e.version = bZ.version
        }
        if (e.chrome) {
            e.webkit = true
        } else {
            if (e.webkit) {
                e.safari = true
            }
        }
        S.browser = e;
        S.sub = function () {
            function b1(b3, b4) {
                return new b1.fn.init(b3, b4)
            }
            S.extend(true, b1, this);
            b1.superclass = this;
            b1.fn = b1.prototype = this();
            b1.fn.constructor = b1;
            b1.sub = this.sub;
            b1.fn.init = function b0(b3, b4) {
                if (b4 && b4 instanceof S && !(b4 instanceof b1)) {
                    b4 = b1(b4)
                }
                return S.fn.init.call(this, b3, b4, b2)
            };
            b1.fn.init.prototype = b1.fn;
            var b2 = b1(bQ);
            return b1
        }
    })();
    var V, r, bB, aT = /alpha\([^)]*\)/i,
        aU = /opacity=([^)]*)/,
        bx = /^(top|right|bottom|left)$/,
        a1 = /^(none|table(?!-c[ea]).+)/,
        av = /^margin/,
        a3 = new RegExp("^(" + bL + ")(.*)$", "i"),
        aR = new RegExp("^(" + bL + ")(?!px)[a-z%]+$", "i"),
        at = new RegExp("^([-+])=(" + bL + ")", "i"),
        Q = {},
        G = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        aJ = {
            letterSpacing: 0,
            fontWeight: 400
        },
        a8 = ["Top", "Right", "Bottom", "Left"],
        an = ["Webkit", "O", "Moz", "ms"],
        au = S.fn.toggle;

    function bk(e, b2) {
        if (b2 in e) {
            return b2
        }
        var bZ = b2.charAt(0).toUpperCase() + b2.slice(1),
            b0 = b2,
            b1 = an.length;
        while (b1--) {
            b2 = an[b1] + bZ;
            if (b2 in e) {
                return b2
            }
        }
        return b0
    }
    function o(e, bZ) {
        e = bZ || e;
        return S.css(e, "display") === "none" || !S.contains(e.ownerDocument, e)
    }
    function bA(b4, b0) {
        var e, b1, bZ = [],
            b3 = 0,
            b2 = b4.length;
        for (; b3 < b2; b3++) {
            e = b4[b3];
            if (!e.style) {
                continue
            }
            bZ[b3] = S._data(e, "olddisplay");
            if (b0) {
                if (!bZ[b3] && e.style.display === "none") {
                    e.style.display = ""
                }
                if (e.style.display === "" && o(e)) {
                    bZ[b3] = S._data(e, "olddisplay", T(e.nodeName))
                }
            } else {
                b1 = V(e, "display");
                if (!bZ[b3] && b1 !== "none") {
                    S._data(e, "olddisplay", b1)
                }
            }
        }
        for (b3 = 0; b3 < b2; b3++) {
            e = b4[b3];
            if (!e.style) {
                continue
            }
            if (!b0 || e.style.display === "none" || e.style.display === "") {
                e.style.display = b0 ? bZ[b3] || "" : "none"
            }
        }
        return b4
    }
    S.fn.extend({
        css: function (e, bZ) {
            return S.access(this, function (b1, b2, b0) {
                return b0 !== bD ? S.style(b1, b2, b0) : S.css(b1, b2)
            }, e, bZ, arguments.length > 1)
        },
        show: function () {
            return bA(this, true)
        },
        hide: function () {
            return bA(this)
        },
        toggle: function (bZ, b0) {
            var e = typeof bZ === "boolean";
            if (S.isFunction(bZ) && S.isFunction(b0)) {
                return au.apply(this, arguments)
            }
            return this.each(function () {
                if (e ? bZ : o(this)) {
                    S(this).show()
                } else {
                    S(this).hide()
                }
            })
        }
    });
    S.extend({
        cssHooks: {
            opacity: {
                get: function (b0, e) {
                    if (e) {
                        var bZ = V(b0, "opacity");
                        return bZ === "" ? "1" : bZ
                    }
                }
            }
        },
        cssNumber: {
            fillOpacity: true,
            fontWeight: true,
            lineHeight: true,
            opacity: true,
            orphans: true,
            widows: true,
            zIndex: true,
            zoom: true
        },
        cssProps: {
            "float": S.support.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function (b1, b8, bZ, b6) {
            if (!b1 || b1.nodeType === 3 || b1.nodeType === 8 || !b1.style) {
                return
            }
            var b4, b7, b2, b5 = S.camelCase(b8),
                b0 = b1.style;
            b8 = S.cssProps[b5] || (S.cssProps[b5] = bk(b0, b5));
            b2 = S.cssHooks[b8] || S.cssHooks[b5];
            if (bZ !== bD) {
                b7 = typeof bZ;
                if (b7 === "string" && (b4 = at.exec(bZ))) {
                    bZ = (b4[1] + 1) * b4[2] + parseFloat(S.css(b1, b8));
                    b7 = "number"
                }
                if (bZ == null || b7 === "number" && isNaN(bZ)) {
                    return
                }
                if (b7 === "number" && !S.cssNumber[b5]) {
                    bZ += "px"
                }
                if (!b2 || !("set" in b2) || (bZ = b2.set(b1, bZ, b6)) !== bD) {
                    try {
                        b0[b8] = bZ
                    } catch (b3) { }
                }
            } else {
                if (b2 && "get" in b2 && (b4 = b2.get(b1, false, b6)) !== bD) {
                    return b4
                }
                return b0[b8]
            }
        },
        css: function (e, b4, b3, b2) {
            var bZ, b5, b0, b1 = S.camelCase(b4);
            b4 = S.cssProps[b1] || (S.cssProps[b1] = bk(e.style, b1));
            b0 = S.cssHooks[b4] || S.cssHooks[b1];
            if (b0 && "get" in b0) {
                bZ = b0.get(e, true, b2)
            }
            if (bZ === bD) {
                bZ = V(e, b4)
            }
            if (bZ === "normal" && b4 in aJ) {
                bZ = aJ[b4]
            }
            if (b3 || b2 !== bD) {
                b5 = parseFloat(bZ);
                return b3 || S.isNumeric(b5) ? b5 || 0 : bZ
            }
            return bZ
        },
        swap: function (b0, e, bZ) {
            var b1, b3, b2 = {};
            for (b3 in e) {
                b2[b3] = b0.style[b3];
                b0.style[b3] = e[b3]
            }
            b1 = bZ.call(b0);
            for (b3 in e) {
                b0.style[b3] = b2[b3]
            }
            return b1
        }
    });
    if (Y.getComputedStyle) {
        V = function (bZ, b5) {
            var b3, b1, b0, b2, b4 = Y.getComputedStyle(bZ, null),
                e = bZ.style;
            if (b4) {
                b3 = b4[b5];
                if (b3 === "" && !S.contains(bZ.ownerDocument, bZ)) {
                    b3 = S.style(bZ, b5)
                }
                if (aR.test(b3) && av.test(b5)) {
                    b1 = e.width;
                    b0 = e.minWidth;
                    b2 = e.maxWidth;
                    e.minWidth = e.maxWidth = e.width = b3;
                    b3 = b4.width;
                    e.width = b1;
                    e.minWidth = b0;
                    e.maxWidth = b2
                }
            }
            return b3
        }
    } else {
        if (bQ.documentElement.currentStyle) {
            V = function (bZ, b3) {
                var b1, b2, b0 = bZ.currentStyle && bZ.currentStyle[b3],
                    e = bZ.style;
                if (b0 == null && e && e[b3]) {
                    b0 = e[b3]
                }
                if (aR.test(b0) && !bx.test(b3)) {
                    b1 = e.left;
                    b2 = bZ.runtimeStyle && bZ.runtimeStyle.left;
                    if (b2) {
                        bZ.runtimeStyle.left = bZ.currentStyle.left
                    }
                    e.left = b3 === "fontSize" ? "1em" : b0;
                    b0 = e.pixelLeft + "px";
                    e.left = b1;
                    if (b2) {
                        bZ.runtimeStyle.left = b2
                    }
                }
                return b0 === "" ? "auto" : b0
            }
        }
    }
    function aS(b0, e, b1) {
        var bZ = a3.exec(e);
        return bZ ? Math.max(0, bZ[1] - (b1 || 0)) + (bZ[2] || "px") : e
    }
    function ad(bZ, b2, b1, b0) {
        var e = b1 === (b0 ? "border" : "content") ? 4 : b2 === "width" ? 1 : 0,
            b3 = 0;
        for (; e < 4; e += 2) {
            if (b1 === "margin") {
                b3 += S.css(bZ, b1 + a8[e], true)
            }
            if (b0) {
                if (b1 === "content") {
                    b3 -= parseFloat(V(bZ, "padding" + a8[e])) || 0
                }
                if (b1 !== "margin") {
                    b3 -= parseFloat(V(bZ, "border" + a8[e] + "Width")) || 0
                }
            } else {
                b3 += parseFloat(V(bZ, "padding" + a8[e])) || 0;
                if (b1 !== "padding") {
                    b3 += parseFloat(V(bZ, "border" + a8[e] + "Width")) || 0
                }
            }
        }
        return b3
    }
    function bw(bZ, b3, e) {
        var b1 = b3 === "width" ? bZ.offsetWidth : bZ.offsetHeight,
            b2 = true,
            b0 = S.support.boxSizing && S.css(bZ, "boxSizing") === "border-box";
        if (b1 <= 0 || b1 == null) {
            b1 = V(bZ, b3);
            if (b1 < 0 || b1 == null) {
                b1 = bZ.style[b3]
            }
            if (aR.test(b1)) {
                return b1
            }
            b2 = b0 && (S.support.boxSizingReliable || b1 === bZ.style[b3]);
            b1 = parseFloat(b1) || 0
        }
        return (b1 + ad(bZ, b3, e || (b0 ? "border" : "content"), b2)) + "px"
    }
    function T(b0) {
        if (Q[b0]) {
            return Q[b0]
        }
        var bZ = S("<" + b0 + ">").appendTo(bQ.body),
            e = bZ.css("display");
        bZ.remove();
        if (e === "none" || e === "") {
            r = bQ.body.appendChild(r || S.extend(bQ.createElement("iframe"), {
                frameBorder: 0,
                width: 0,
                height: 0
            }));
            if (!bB || !r.createElement) {
                bB = (r.contentWindow || r.contentDocument).document;
                bB.write("<!doctype html><html><body>");
                bB.close()
            }
            bZ = bB.body.appendChild(bB.createElement(b0));
            e = V(bZ, "display");
            bQ.body.removeChild(r)
        }
        Q[b0] = e;
        return e
    }
    S.each(["height", "width"], function (e, bZ) {
        S.cssHooks[bZ] = {
            get: function (b2, b0, b1) {
                if (b0) {
                    if (b2.offsetWidth === 0 && a1.test(V(b2, "display"))) {
                        return S.swap(b2, G, function () {
                            return bw(b2, bZ, b1)
                        })
                    } else {
                        return bw(b2, bZ, b1)
                    }
                }
            },
            set: function (b2, b0, b1) {
                return aS(b2, b0, b1 ? ad(b2, bZ, b1, S.support.boxSizing && S.css(b2, "boxSizing") === "border-box") : 0)
            }
        }
    });
    if (!S.support.opacity) {
        S.cssHooks.opacity = {
            get: function (e, bZ) {
                return aU.test((bZ && e.currentStyle ? e.currentStyle.filter : e.style.filter) || "") ? (0.01 * parseFloat(RegExp.$1)) + "" : bZ ? "1" : ""
            },
            set: function (b0, e) {
                var bZ = b0.style,
                    b2 = b0.currentStyle,
                    b3 = S.isNumeric(e) ? "alpha(opacity=" + e * 100 + ")" : "",
                    b1 = b2 && b2.filter || bZ.filter || "";
                bZ.zoom = 1;
                if (e >= 1 && S.trim(b1.replace(aT, "")) === "" && bZ.removeAttribute) {
                    bZ.removeAttribute("filter");
                    if (b2 && !b2.filter) {
                        return
                    }
                }
                bZ.filter = aT.test(b1) ? b1.replace(aT, b3) : b1 + " " + b3
            }
        }
    }
    S(function () {
        if (!S.support.reliableMarginRight) {
            S.cssHooks.marginRight = {
                get: function (e, bZ) {
                    return S.swap(e, {
                        display: "inline-block"
                    }, function () {
                        if (bZ) {
                            return V(e, "marginRight")
                        }
                    })
                }
            }
        }
        if (!S.support.pixelPosition && S.fn.position) {
            S.each(["top", "left"], function (e, bZ) {
                S.cssHooks[bZ] = {
                    get: function (b2, b0) {
                        if (b0) {
                            var b1 = V(b2, bZ);
                            return aR.test(b1) ? S(b2).position()[bZ] + "px" : b1
                        }
                    }
                }
            })
        }
    });
    if (S.expr && S.expr.filters) {
        S.expr.filters.hidden = function (e) {
            return (e.offsetWidth === 0 && e.offsetHeight === 0) || (!S.support.reliableHiddenOffsets && ((e.style && e.style.display) || V(e, "display")) === "none")
        };
        S.expr.filters.visible = function (e) {
            return !S.expr.filters.hidden(e)
        }
    }
    S.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function (e, bZ) {
        S.cssHooks[e + bZ] = {
            expand: function (b0) {
                var b1, b2 = typeof b0 === "string" ? b0.split(" ") : [b0],
                    b3 = {};
                for (b1 = 0; b1 < 4; b1++) {
                    b3[e + a8[b1] + bZ] = b2[b1] || b2[b1 - 2] || b2[0]
                }
                return b3
            }
        };
        if (!av.test(e)) {
            S.cssHooks[e + bZ].set = aS
        }
    });
    var ap = /%20/g,
        a5 = /\[\]$/,
        bE = /\r?\n/g,
        bl = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
        t = /^(?:select|textarea)/i;
    S.fn.extend({
        serialize: function () {
            return S.param(this.serializeArray())
        },
        serializeArray: function () {
            return this.map(function () {
                return this.elements ? S.makeArray(this.elements) : this
            }).filter(function () {
                return this.name && !this.disabled && (this.checked || t.test(this.nodeName) || bl.test(this.type))
            }).map(function (e, b0) {
                var bZ = S(this).val();
                return bZ == null ? null : S.isArray(bZ) ? S.map(bZ, function (b1, b2) {
                    return {
                        name: b0.name,
                        value: b1.replace(bE, "\r\n")
                    }
                }) : {
                        name: b0.name,
                        value: bZ.replace(bE, "\r\n")
                    }
            }).get()
        }
    });
    S.param = function (bZ, e) {
        var b0, b1 = [],
            b2 = function (b3, b4) {
                b4 = S.isFunction(b4) ? b4() : (b4 == null ? "" : b4);
                b1[b1.length] = encodeURIComponent(b3) + "=" + encodeURIComponent(b4)
            };
        if (e === bD) {
            e = S.ajaxSettings && S.ajaxSettings.traditional
        }
        if (S.isArray(bZ) || (bZ.jquery && !S.isPlainObject(bZ))) {
            S.each(bZ, function () {
                b2(this.name, this.value)
            })
        } else {
            for (b0 in bZ) {
                n(b0, bZ[b0], e, b2)
            }
        }
        return b1.join("&").replace(ap, "+")
    };

    function n(bZ, b1, e, b2) {
        var b0;
        if (S.isArray(b1)) {
            S.each(b1, function (b4, b3) {
                if (e || a5.test(bZ)) {
                    b2(bZ, b3)
                } else {
                    n(bZ + "[" + (typeof b3 === "object" ? b4 : "") + "]", b3, e, b2)
                }
            })
        } else {
            if (!e && S.type(b1) === "object") {
                for (b0 in b1) {
                    n(bZ + "[" + b0 + "]", b1[b0], e, b2)
                }
            } else {
                b2(bZ, b1)
            }
        }
    }
    var bM, y, aH = /#.*$/,
        bU = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,
        R = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/,
        a0 = /^(?:GET|HEAD)$/,
        be = /^\/\//,
        bI = /\?/,
        a9 = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
        c = /([?&])_=[^&]*/,
        am = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,
        aK = S.fn.load,
        D = {},
        bv = {},
        bK = ["*/"] + ["*"];
    try {
        y = bf.href
    } catch (bS) {
        y = bQ.createElement("a");
        y.href = "";
        y = y.href
    }
    bM = am.exec(y.toLowerCase()) || [];

    function M(e) {
        return function (b6, b4) {
            if (typeof b6 !== "string") {
                b4 = b6;
                b6 = "*"
            }
            var b0, b5, b2, bZ = b6.toLowerCase().split(bV),
                b3 = 0,
                b1 = bZ.length;
            if (S.isFunction(b4)) {
                for (; b3 < b1; b3++) {
                    b0 = bZ[b3];
                    b2 = /^\+/.test(b0);
                    if (b2) {
                        b0 = b0.substr(1) || "*"
                    }
                    b5 = e[b0] = e[b0] || [];
                    b5[b2 ? "unshift" : "push"](b4)
                }
            }
        }
    }
    function bt(b1, bZ, b6, b5, e, b4) {
        e = e || bZ.dataTypes[0];
        b4 = b4 || {};
        b4[e] = true;
        var b0, b2 = b1[e],
            b7 = 0,
            b3 = b2 ? b2.length : 0,
            b8 = (b1 === D);
        for (; b7 < b3 && (b8 || !b0); b7++) {
            b0 = b2[b7](bZ, b6, b5);
            if (typeof b0 === "string") {
                if (!b8 || b4[b0]) {
                    b0 = bD
                } else {
                    bZ.dataTypes.unshift(b0);
                    b0 = bt(b1, bZ, b6, b5, b0, b4)
                }
            }
        }
        if ((b8 || !b0) && !b4["*"]) {
            b0 = bt(b1, bZ, b6, b5, "*", b4)
        }
        return b0
    }
    function ao(e, b0) {
        var b2, b1, bZ = S.ajaxSettings.flatOptions || {};
        for (b2 in b0) {
            if (b0[b2] !== bD) {
                (bZ[b2] ? e : (b1 || (b1 = {})))[b2] = b0[b2]
            }
        }
        if (b1) {
            S.extend(true, e, b1)
        }
    }
    S.fn.load = function (b2, b0, b1) {
        if (typeof b2 !== "string" && aK) {
            return aK.apply(this, arguments)
        }
        if (!this.length) {
            return this
        }
        var bZ, b3, b5, b4 = this,
            e = b2.indexOf(" ");
        if (e >= 0) {
            bZ = b2.slice(e, b2.length);
            b2 = b2.slice(0, e)
        }
        if (S.isFunction(b0)) {
            b1 = b0;
            b0 = bD
        } else {
            if (b0 && typeof b0 === "object") {
                b3 = "POST"
            }
        }
        S.ajax({
            url: b2,
            type: b3,
            dataType: "html",
            data: b0,
            complete: function (b6, b7) {
                if (b1) {
                    b4.each(b1, b5 || [b6.responseText, b7, b6])
                }
            }
        }).done(function (b6) {
            b5 = arguments;
            b4.html(bZ ? S("<div>").append(b6.replace(a9, "")).find(bZ) : b6)
        });
        return this
    };
    S.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function (e, bZ) {
        S.fn[bZ] = function (b0) {
            return this.on(bZ, b0)
        }
    });
    S.each(["get", "post"], function (bZ, e) {
        S[e] = function (b0, b1, b3, b2) {
            if (S.isFunction(b1)) {
                b2 = b2 || b3;
                b3 = b1;
                b1 = bD
            }
            return S.ajax({
                type: e,
                url: b0,
                data: b1,
                success: b3,
                dataType: b2
            })
        }
    });
    S.extend({
        getScript: function (bZ, e) {
            return S.get(bZ, bD, e, "script")
        },
        getJSON: function (e, bZ, b0) {
            return S.get(e, bZ, b0, "json")
        },
        ajaxSetup: function (bZ, e) {
            if (e) {
                ao(bZ, S.ajaxSettings)
            } else {
                e = bZ;
                bZ = S.ajaxSettings
            }
            ao(bZ, e);
            return bZ
        },
        ajaxSettings: {
            url: y,
            isLocal: R.test(bM[1]),
            global: true,
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            processData: true,
            async: true,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": bK
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": Y.String,
                "text html": true,
                "text json": S.parseJSON,
                "text xml": S.parseXML
            },
            flatOptions: {
                context: true,
                url: true
            }
        },
        ajaxPrefilter: M(D),
        ajaxTransport: M(bv),
        ajax: function (cg, ch) {
            if (typeof cg === "object") {
                ch = cg;
                cg = bD
            }
            ch = ch || {};
            var b3, ce, cj, b1, cb, b7, bZ, cd, b8 = S.ajaxSetup({}, ch),
                ca = b8.context || b8,
                b6 = ca !== b8 && (ca.nodeType || ca instanceof S) ? S(ca) : S.event,
                cn = S.Deferred(),
                b2 = S.Callbacks("once memory"),
                cc = b8.statusCode || {},
                cf = {},
                b4 = {},
                ci = 0,
                b0 = "canceled",
                cm = {
                    readyState: 0,
                    setRequestHeader: function (cp, e) {
                        if (!ci) {
                            var co = cp.toLowerCase();
                            cp = b4[co] = b4[co] || cp;
                            cf[cp] = e
                        }
                        return this
                    },
                    getAllResponseHeaders: function () {
                        return ci === 2 ? ce : null
                    },
                    getResponseHeader: function (e) {
                        var co;
                        if (ci === 2) {
                            if (!cj) {
                                cj = {};
                                while ((co = bU.exec(ce))) {
                                    cj[co[1].toLowerCase()] = co[2]
                                }
                            }
                            co = cj[e.toLowerCase()]
                        }
                        return co === bD ? null : co
                    },
                    overrideMimeType: function (e) {
                        if (!ci) {
                            b8.mimeType = e
                        }
                        return this
                    },
                    abort: function (e) {
                        e = e || b0;
                        if (b1) {
                            b1.abort(e)
                        }
                        b5(0, e);
                        return this
                    }
                };

            function b5(cp, cw, e, cv) {
                var cs, cu, ct, co, cr, cq = cw;
                if (ci === 2) {
                    return
                }
                ci = 2;
                if (cb) {
                    clearTimeout(cb)
                }
                b1 = bD;
                ce = cv || "";
                cm.readyState = cp > 0 ? 4 : 0;
                if (e) {
                    co = aD(b8, cm, e)
                }
                if (cp >= 200 && cp < 300 || cp === 304) {
                    if (b8.ifModified) {
                        cr = cm.getResponseHeader("Last-Modified");
                        if (cr) {
                            S.lastModified[b3] = cr
                        }
                        cr = cm.getResponseHeader("Etag");
                        if (cr) {
                            S.etag[b3] = cr
                        }
                    }
                    if (cp === 304) {
                        cq = "notmodified";
                        cs = true
                    } else {
                        cs = i(b8, co);
                        cq = cs.state;
                        cu = cs.data;
                        ct = cs.error;
                        cs = !ct
                    }
                } else {
                    ct = cq;
                    if (!cq || cp) {
                        cq = "error";
                        if (cp < 0) {
                            cp = 0
                        }
                    }
                }
                cm.status = cp;
                cm.statusText = (cw || cq) + "";
                if (cs) {
                    cn.resolveWith(ca, [cu, cq, cm])
                } else {
                    cn.rejectWith(ca, [cm, cq, ct])
                }
                cm.statusCode(cc);
                cc = bD;
                if (bZ) {
                    b6.trigger("ajax" + (cs ? "Success" : "Error"), [cm, b8, cs ? cu : ct])
                }
                b2.fireWith(ca, [cm, cq]);
                if (bZ) {
                    b6.trigger("ajaxComplete", [cm, b8]);
                    if (!(--S.active)) {
                        S.event.trigger("ajaxStop")
                    }
                }
            }
            cn.promise(cm);
            cm.success = cm.done;
            cm.error = cm.fail;
            cm.complete = b2.add;
            cm.statusCode = function (co) {
                if (co) {
                    var e;
                    if (ci < 2) {
                        for (e in co) {
                            cc[e] = [cc[e], co[e]]
                        }
                    } else {
                        e = co[cm.status];
                        cm.always(e)
                    }
                }
                return this
            };
            b8.url = ((cg || b8.url) + "").replace(aH, "").replace(be, bM[1] + "//");
            b8.dataTypes = S.trim(b8.dataType || "*").toLowerCase().split(bV);
            if (b8.crossDomain == null) {
                b7 = am.exec(b8.url.toLowerCase()) || false;
                b8.crossDomain = b7 && (b7.join(":") + (b7[3] ? "" : b7[1] === "http:" ? 80 : 443)) !== (bM.join(":") + (bM[3] ? "" : bM[1] === "http:" ? 80 : 443))
            }
            if (b8.data && b8.processData && typeof b8.data !== "string") {
                b8.data = S.param(b8.data, b8.traditional)
            }
            bt(D, b8, ch, cm);
            if (ci === 2) {
                return cm
            }
            bZ = b8.global;
            b8.type = b8.type.toUpperCase();
            b8.hasContent = !a0.test(b8.type);
            if (bZ && S.active++ === 0) {
                S.event.trigger("ajaxStart")
            }
            if (!b8.hasContent) {
                if (b8.data) {
                    b8.url += (bI.test(b8.url) ? "&" : "?") + b8.data;
                    delete b8.data
                }
                b3 = b8.url;
                if (b8.cache === false) {
                    var b9 = S.now(),
                        cl = b8.url.replace(c, "$1_=" + b9);
                    b8.url = cl + ((cl === b8.url) ? (bI.test(b8.url) ? "&" : "?") + "_=" + b9 : "")
                }
            }
            if (b8.data && b8.hasContent && b8.contentType !== false || ch.contentType) {
                cm.setRequestHeader("Content-Type", b8.contentType)
            }
            if (b8.ifModified) {
                b3 = b3 || b8.url;
                if (S.lastModified[b3]) {
                    cm.setRequestHeader("If-Modified-Since", S.lastModified[b3])
                }
                if (S.etag[b3]) {
                    cm.setRequestHeader("If-None-Match", S.etag[b3])
                }
            }
            cm.setRequestHeader("Accept", b8.dataTypes[0] && b8.accepts[b8.dataTypes[0]] ? b8.accepts[b8.dataTypes[0]] + (b8.dataTypes[0] !== "*" ? ", " + bK + "; q=0.01" : "") : b8.accepts["*"]);
            for (cd in b8.headers) {
                cm.setRequestHeader(cd, b8.headers[cd])
            }
            if (b8.beforeSend && (b8.beforeSend.call(ca, cm, b8) === false || ci === 2)) {
                return cm.abort()
            }
            b0 = "abort";
            for (cd in {
                success: 1,
                error: 1,
                complete: 1
            }) {
                cm[cd](b8[cd])
            }
            b1 = bt(bv, b8, ch, cm);
            if (!b1) {
                b5(-1, "No Transport")
            } else {
                cm.readyState = 1;
                if (bZ) {
                    b6.trigger("ajaxSend", [cm, b8])
                }
                if (b8.async && b8.timeout > 0) {
                    cb = setTimeout(function () {
                        cm.abort("timeout")
                    }, b8.timeout)
                }
                try {
                    ci = 1;
                    b1.send(cf, b5)
                } catch (ck) {
                    if (ci < 2) {
                        b5(-1, ck)
                    } else {
                        throw ck
                    }
                }
            }
            return cm
        },
        active: 0,
        lastModified: {},
        etag: {}
    });

    function aD(b5, b6, bZ) {
        var b7, b3, b1, b4, b0 = b5.contents,
            e = b5.dataTypes,
            b2 = b5.responseFields;
        for (b3 in b2) {
            if (b3 in bZ) {
                b6[b2[b3]] = bZ[b3]
            }
        }
        while (e[0] === "*") {
            e.shift();
            if (b7 === bD) {
                b7 = b5.mimeType || b6.getResponseHeader("content-type")
            }
        }
        if (b7) {
            for (b3 in b0) {
                if (b0[b3] && b0[b3].test(b7)) {
                    e.unshift(b3);
                    break
                }
            }
        }
        if (e[0] in bZ) {
            b1 = e[0]
        } else {
            for (b3 in bZ) {
                if (!e[0] || b5.converters[b3 + " " + e[0]]) {
                    b1 = b3;
                    break
                }
                if (!b4) {
                    b4 = b3
                }
            }
            b1 = b1 || b4
        }
        if (b1) {
            if (b1 !== e[0]) {
                e.unshift(b1)
            }
            return bZ[b1]
        }
    }
    function i(b6, b2) {
        var b8, b9, b1, b5, bZ = b6.dataTypes.slice(),
            b3 = bZ[0],
            b4 = {},
            b0 = 0;
        if (b6.dataFilter) {
            b2 = b6.dataFilter(b2, b6.dataType)
        }
        if (bZ[1]) {
            for (b8 in b6.converters) {
                b4[b8.toLowerCase()] = b6.converters[b8]
            }
        }
        for (;
            (b1 = bZ[++b0]);) {
            if (b1 !== "*") {
                if (b3 !== "*" && b3 !== b1) {
                    b8 = b4[b3 + " " + b1] || b4["* " + b1];
                    if (!b8) {
                        for (b9 in b4) {
                            b5 = b9.split(" ");
                            if (b5[1] === b1) {
                                b8 = b4[b3 + " " + b5[0]] || b4["* " + b5[0]];
                                if (b8) {
                                    if (b8 === true) {
                                        b8 = b4[b9]
                                    } else {
                                        if (b4[b9] !== true) {
                                            b1 = b5[0];
                                            bZ.splice(b0--, 0, b1)
                                        }
                                    }
                                    break
                                }
                            }
                        }
                    }
                    if (b8 !== true) {
                        if (b8 && b6["throws"]) {
                            b2 = b8(b2)
                        } else {
                            try {
                                b2 = b8(b2)
                            } catch (b7) {
                                return {
                                    state: "parsererror",
                                    error: b8 ? b7 : "No conversion from " + b3 + " to " + b1
                                }
                            }
                        }
                    }
                }
                b3 = b1
            }
        }
        return {
            state: "success",
            data: b2
        }
    }
    var O = [],
        z = /\?/,
        Z = /(=)\?(?=&|$)|\?\?/,
        bR = S.now();
    S.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function () {
            var e = O.pop() || (S.expando + "_" + (bR++));
            this[e] = true;
            return e
        }
    });
    S.ajaxPrefilter("json jsonp", function (b5, b6, b4) {
        var b3, b2, b0, bZ = b5.data,
            b8 = b5.url,
            e = b5.jsonp !== false,
            b1 = e && Z.test(b8),
            b7 = e && !b1 && typeof bZ === "string" && !(b5.contentType || "").indexOf("application/x-www-form-urlencoded") && Z.test(bZ);
        if (b5.dataTypes[0] === "jsonp" || b1 || b7) {
            b3 = b5.jsonpCallback = S.isFunction(b5.jsonpCallback) ? b5.jsonpCallback() : b5.jsonpCallback;
            b2 = Y[b3];
            if (b1) {
                b5.url = b8.replace(Z, "$1" + b3)
            } else {
                if (b7) {
                    b5.data = bZ.replace(Z, "$1" + b3)
                } else {
                    if (e) {
                        b5.url += (z.test(b8) ? "&" : "?") + b5.jsonp + "=" + b3
                    }
                }
            }
            b5.converters["script json"] = function () {
                if (!b0) {
                    S.error(b3 + " was not called")
                }
                return b0[0]
            };
            b5.dataTypes[0] = "json";
            Y[b3] = function () {
                b0 = arguments
            };
            b4.always(function () {
                Y[b3] = b2;
                if (b5[b3]) {
                    b5.jsonpCallback = b6.jsonpCallback;
                    O.push(b3)
                }
                if (b0 && S.isFunction(b2)) {
                    b2(b0[0])
                }
                b0 = b2 = bD
            });
            return "script"
        }
    });
    S.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /javascript|ecmascript/
        },
        converters: {
            "text script": function (e) {
                S.globalEval(e);
                return e
            }
        }
    });
    S.ajaxPrefilter("script", function (e) {
        if (e.cache === bD) {
            e.cache = false
        }
        if (e.crossDomain) {
            e.type = "GET";
            e.global = false
        }
    });
    S.ajaxTransport("script", function (b0) {
        if (b0.crossDomain) {
            var e, bZ = bQ.head || bQ.getElementsByTagName("head")[0] || bQ.documentElement;
            return {
                send: function (b2, b1) {
                    e = bQ.createElement("script");
                    e.async = "async";
                    if (b0.scriptCharset) {
                        e.charset = b0.scriptCharset
                    }
                    e.src = b0.url;
                    e.onload = e.onreadystatechange = function (b3, b4) {
                        if (b4 || !e.readyState || /loaded|complete/.test(e.readyState)) {
                            e.onload = e.onreadystatechange = null;
                            if (bZ && e.parentNode) {
                                bZ.removeChild(e)
                            }
                            e = bD;
                            if (!b4) {
                                b1(200, "success")
                            }
                        }
                    };
                    bZ.insertBefore(e, bZ.firstChild)
                },
                abort: function () {
                    if (e) {
                        e.onload(0, 1)
                    }
                }
            }
        }
    });
    var bW, ac = Y.ActiveXObject ?
        function () {
            for (var e in bW) {
                bW[e](0, 1)
            }
        } : false, a2 = 0;

    function ab() {
        try {
            return new Y.XMLHttpRequest()
        } catch (bZ) { }
    }
    function a7() {
        try {
            return new Y.ActiveXObject("Microsoft.XMLHTTP")
        } catch (bZ) { }
    }
    S.ajaxSettings.xhr = Y.ActiveXObject ?
        function () {
            return !this.isLocal && ab() || a7()
        } : ab;
    (function (e) {
        S.extend(S.support, {
            ajax: !!e,
            cors: !!e && ("withCredentials" in e)
        })
    })(S.ajaxSettings.xhr());
    if (S.support.ajax) {
        S.ajaxTransport(function (bZ) {
            if (!bZ.crossDomain || S.support.cors) {
                var e;
                return {
                    send: function (b3, b5) {
                        var b1, b4, b0 = bZ.xhr();
                        if (bZ.url && bZ.url.indexOf("bti") < 0) {
                            bZ.url = bZ.url.split("?").length > 1 ? bZ.url + "&bti=" + Y.sessionStorage.getItem("browser-tab-index") + "&lang=" + Y.sessionStorage.getItem("browser-tab-lang") : bZ.url + "?bti=" + Y.sessionStorage.getItem("browser-tab-index") + "&lang=" + Y.sessionStorage.getItem("browser-tab-lang")
                        }
                        if (bZ.username) {
                            b0.open(bZ.type, bZ.url, bZ.async, bZ.username, bZ.password)
                        } else {
                            b0.open(bZ.type, bZ.url, bZ.async)
                        }
                        if (bZ.xhrFields) {
                            for (b4 in bZ.xhrFields) {
                                b0[b4] = bZ.xhrFields[b4]
                            }
                        }
                        if (bZ.mimeType && b0.overrideMimeType) {
                            b0.overrideMimeType(bZ.mimeType)
                        }
                        if (!bZ.crossDomain && !b3["X-Requested-With"]) {
                            b3["X-Requested-With"] = "XMLHttpRequest"
                        }
                        try {
                            for (b4 in b3) {
                                b0.setRequestHeader(b4, b3[b4])
                            }
                        } catch (b2) { }
                        b0.send((bZ.hasContent && bZ.data) || null);
                        e = function (b7, b9) {
                            var b8, cb, b6, cc, ca;
                            try {
                                if (e && (b9 || b0.readyState === 4)) {
                                    e = bD;
                                    if (b1) {
                                        b0.onreadystatechange = S.noop;
                                        if (ac) {
                                            delete bW[b1]
                                        }
                                    }
                                    if (b9) {
                                        if (b0.readyState !== 4) {
                                            b0.abort()
                                        }
                                    } else {
                                        b8 = b0.status;
                                        b6 = b0.getAllResponseHeaders();
                                        cc = {};
                                        ca = b0.responseXML;
                                        if (ca && ca.documentElement) {
                                            cc.xml = ca
                                        }
                                        try {
                                            cc.text = b0.responseText
                                        } catch (b7) { }
                                        try {
                                            cb = b0.statusText
                                        } catch (cd) {
                                            cb = ""
                                        }
                                        if (!b8 && bZ.isLocal && !bZ.crossDomain) {
                                            b8 = cc.text ? 200 : 404
                                        } else {
                                            if (b8 === 1223) {
                                                b8 = 204
                                            }
                                        }
                                    }
                                }
                            } catch (ce) {
                                if (!b9) {
                                    b5(-1, ce)
                                }
                            }
                            if (cc) {
                                b5(b8, cb, cc, b6)
                            }
                        };
                        if (!bZ.async) {
                            e()
                        } else {
                            if (b0.readyState === 4) {
                                setTimeout(e, 0)
                            } else {
                                b1 = ++a2;
                                if (ac) {
                                    if (!bW) {
                                        bW = {};
                                        S(Y).unload(ac)
                                    }
                                    bW[b1] = e
                                }
                                b0.onreadystatechange = e
                            }
                        }
                    },
                    abort: function () {
                        if (e) {
                            e(0, 1)
                        }
                    }
                }
            }
        })
    }
    var by, I, aZ = /^(?:toggle|show|hide)$/,
        ar = new RegExp("^(?:([-+])=|)(" + bL + ")([a-z%]*)$", "i"),
        ay = /queueHooks$/,
        bp = [bu],
        bT = {
            "*": [function (b2, b1) {
                var e, b0, bZ = this.createTween(b2, b1),
                    b6 = ar.exec(b1),
                    b7 = bZ.cur(),
                    b4 = +b7 || 0,
                    b3 = 1,
                    b5 = 20;
                if (b6) {
                    e = +b6[2];
                    b0 = b6[3] || (S.cssNumber[b2] ? "" : "px");
                    if (b0 !== "px" && b4) {
                        b4 = S.css(bZ.elem, b2, true) || e || 1;
                        do {
                            b3 = b3 || ".5";
                            b4 = b4 / b3;
                            S.style(bZ.elem, b2, b4 + b0)
                        } while (b3 !== (b3 = bZ.cur() / b7) && b3 !== 1 && --b5)
                    }
                    bZ.unit = b0;
                    bZ.start = b4;
                    bZ.end = b6[1] ? b4 + (b6[1] + 1) * e : e
                }
                return bZ
            }]
        };

    function aI() {
        setTimeout(function () {
            by = bD
        }, 0);
        return (by = S.now())
    }
    function aN(e, bZ) {
        S.each(bZ, function (b1, b0) {
            var b4 = (bT[b1] || []).concat(bT["*"]),
                b3 = 0,
                b2 = b4.length;
            for (; b3 < b2; b3++) {
                if (b4[b3].call(e, b1, b0)) {
                    return
                }
            }
        })
    }
    function K(b2, b1, bZ) {
        var b8, b7 = 0,
            b0 = 0,
            b6 = bp.length,
            b3 = S.Deferred().always(function () {
                delete e.elem
            }),
            e = function () {
                var cb = by || aI(),
                    ca = Math.max(0, b4.startTime + b4.duration - cb),
                    b9 = 1 - (ca / b4.duration || 0),
                    cc = 0,
                    cd = b4.tweens.length;
                for (; cc < cd; cc++) {
                    b4.tweens[cc].run(b9)
                }
                b3.notifyWith(b2, [b4, b9, ca]);
                if (b9 < 1 && cd) {
                    return ca
                } else {
                    b3.resolveWith(b2, [b4]);
                    return false
                }
            },
            b4 = b3.promise({
                elem: b2,
                props: S.extend({}, b1),
                opts: S.extend(true, {
                    specialEasing: {}
                }, bZ),
                originalProperties: b1,
                originalOptions: bZ,
                startTime: by || aI(),
                duration: bZ.duration,
                tweens: [],
                createTween: function (b9, ca, cb) {
                    var cc = S.Tween(b2, b4.opts, b9, ca, b4.opts.specialEasing[b9] || b4.opts.easing);
                    b4.tweens.push(cc);
                    return cc
                },
                stop: function (cb) {
                    var ca = 0,
                        b9 = cb ? b4.tweens.length : 0;
                    for (; ca < b9; ca++) {
                        b4.tweens[ca].run(1)
                    }
                    if (cb) {
                        b3.resolveWith(b2, [b4, cb])
                    } else {
                        b3.rejectWith(b2, [b4, cb])
                    }
                    return this
                }
            }),
            b5 = b4.props;
        q(b5, b4.opts.specialEasing);
        for (; b7 < b6; b7++) {
            b8 = bp[b7].call(b4, b2, b5, b4.opts);
            if (b8) {
                return b8
            }
        }
        aN(b4, b5);
        if (S.isFunction(b4.opts.start)) {
            b4.opts.start.call(b2, b4)
        }
        S.fx.timer(S.extend(e, {
            anim: b4,
            queue: b4.opts.queue,
            elem: b2
        }));
        return b4.progress(b4.opts.progress).done(b4.opts.done, b4.opts.complete).fail(b4.opts.fail).always(b4.opts.always)
    }
    function q(b2, bZ) {
        var b4, b3, b0, e, b1;
        for (b4 in b2) {
            b3 = S.camelCase(b4);
            b0 = bZ[b3];
            e = b2[b4];
            if (S.isArray(e)) {
                b0 = e[1];
                e = b2[b4] = e[0]
            }
            if (b4 !== b3) {
                b2[b3] = e;
                delete b2[b4]
            }
            b1 = S.cssHooks[b3];
            if (b1 && "expand" in b1) {
                e = b1.expand(e);
                delete b2[b3];
                for (b4 in e) {
                    if (!(b4 in b2)) {
                        b2[b4] = e[b4];
                        bZ[b4] = b0
                    }
                }
            } else {
                bZ[b3] = b0
            }
        }
    }
    S.Animation = S.extend(K, {
        tweener: function (e, b2) {
            if (S.isFunction(e)) {
                b2 = e;
                e = ["*"]
            } else {
                e = e.split(" ")
            }
            var bZ, b1 = 0,
                b0 = e.length;
            for (; b1 < b0; b1++) {
                bZ = e[b1];
                bT[bZ] = bT[bZ] || [];
                bT[bZ].unshift(b2)
            }
        },
        prefilter: function (e, bZ) {
            if (bZ) {
                bp.unshift(e)
            } else {
                bp.push(e)
            }
        }
    });

    function bu(b1, b9, e) {
        var b6, b8, b4, b3, cb, b2, b7, ca, cc = this,
            cd = b1.style,
            bZ = {},
            b0 = [],
            b5 = b1.nodeType && o(b1);
        if (!e.queue) {
            b7 = S._queueHooks(b1, "fx");
            if (b7.unqueued == null) {
                b7.unqueued = 0;
                ca = b7.empty.fire;
                b7.empty.fire = function () {
                    if (!b7.unqueued) {
                        ca()
                    }
                }
            }
            b7.unqueued++;
            cc.always(function () {
                cc.always(function () {
                    b7.unqueued--;
                    if (!S.queue(b1, "fx").length) {
                        b7.empty.fire()
                    }
                })
            })
        }
        if (b1.nodeType === 1 && ("height" in b9 || "width" in b9)) {
            e.overflow = [cd.overflow, cd.overflowX, cd.overflowY];
            if (S.css(b1, "display") === "inline" && S.css(b1, "float") === "none") {
                if (!S.support.inlineBlockNeedsLayout || T(b1.nodeName) === "inline") {
                    cd.display = "inline-block"
                } else {
                    cd.zoom = 1
                }
            }
        }
        if (e.overflow) {
            cd.overflow = "hidden";
            if (!S.support.shrinkWrapBlocks) {
                cc.done(function () {
                    cd.overflow = e.overflow[0];
                    cd.overflowX = e.overflow[1];
                    cd.overflowY = e.overflow[2]
                })
            }
        }
        for (b6 in b9) {
            b4 = b9[b6];
            if (aZ.exec(b4)) {
                delete b9[b6];
                if (b4 === (b5 ? "hide" : "show")) {
                    continue
                }
                b0.push(b6)
            }
        }
        b3 = b0.length;
        if (b3) {
            cb = S._data(b1, "fxshow") || S._data(b1, "fxshow", {});
            if (b5) {
                S(b1).show()
            } else {
                cc.done(function () {
                    S(b1).hide()
                })
            }
            cc.done(function () {
                var ce;
                S.removeData(b1, "fxshow", true);
                for (ce in bZ) {
                    S.style(b1, ce, bZ[ce])
                }
            });
            for (b6 = 0; b6 < b3; b6++) {
                b8 = b0[b6];
                b2 = cc.createTween(b8, b5 ? cb[b8] : 0);
                bZ[b8] = cb[b8] || S.style(b1, b8);
                if (!(b8 in cb)) {
                    cb[b8] = b2.start;
                    if (b5) {
                        b2.end = b2.start;
                        b2.start = b8 === "width" || b8 === "height" ? 1 : 0
                    }
                }
            }
        }
    }
    function bd(b0, b1, e, bZ, b2) {
        return new bd.prototype.init(b0, b1, e, bZ, b2)
    }
    S.Tween = bd;
    bd.prototype = {
        constructor: bd,
        init: function (b2, b0, b1, e, bZ, b3) {
            this.elem = b2;
            this.prop = b1;
            this.easing = bZ || "swing";
            this.options = b0;
            this.start = this.now = this.cur();
            this.end = e;
            this.unit = b3 || (S.cssNumber[b1] ? "" : "px")
        },
        cur: function () {
            var e = bd.propHooks[this.prop];
            return e && e.get ? e.get(this) : bd.propHooks._default.get(this)
        },
        run: function (bZ) {
            var e, b0 = bd.propHooks[this.prop];
            if (this.options.duration) {
                this.pos = e = S.easing[this.easing](bZ, this.options.duration * bZ, 0, 1, this.options.duration)
            } else {
                this.pos = e = bZ
            }
            this.now = (this.end - this.start) * e + this.start;
            if (this.options.step) {
                this.options.step.call(this.elem, this.now, this)
            }
            if (b0 && b0.set) {
                b0.set(this)
            } else {
                bd.propHooks._default.set(this)
            }
            return this
        }
    };
    bd.prototype.init.prototype = bd.prototype;
    bd.propHooks = {
        _default: {
            get: function (e) {
                var bZ;
                if (e.elem[e.prop] != null && (!e.elem.style || e.elem.style[e.prop] == null)) {
                    return e.elem[e.prop]
                }
                bZ = S.css(e.elem, e.prop, false, "");
                return !bZ || bZ === "auto" ? 0 : bZ
            },
            set: function (e) {
                if (S.fx.step[e.prop]) {
                    S.fx.step[e.prop](e)
                } else {
                    if (e.elem.style && (e.elem.style[S.cssProps[e.prop]] != null || S.cssHooks[e.prop])) {
                        S.style(e.elem, e.prop, e.now + e.unit)
                    } else {
                        e.elem[e.prop] = e.now
                    }
                }
            }
        }
    };
    bd.propHooks.scrollTop = bd.propHooks.scrollLeft = {
        set: function (e) {
            if (e.elem.nodeType && e.elem.parentNode) {
                e.elem[e.prop] = e.now
            }
        }
    };
    S.each(["toggle", "show", "hide"], function (e, b0) {
        var bZ = S.fn[b0];
        S.fn[b0] = function (b1, b2, b3) {
            return b1 == null || typeof b1 === "boolean" || (!e && S.isFunction(b1) && S.isFunction(b2)) ? bZ.apply(this, arguments) : this.animate(a(b0, true), b1, b2, b3)
        }
    });
    S.fn.extend({
        fadeTo: function (bZ, e, b0, b1) {
            return this.filter(o).css("opacity", 0).show().end().animate({
                opacity: e
            }, bZ, b0, b1)
        },
        animate: function (b1, b4, bZ, b0) {
            var b2 = S.isEmptyObject(b1),
                b3 = S.speed(b4, bZ, b0),
                e = function () {
                    var b5 = K(this, S.extend({}, b1), b3);
                    if (b2) {
                        b5.stop(true)
                    }
                };
            return b2 || b3.queue === false ? this.each(e) : this.queue(b3.queue, e)
        },
        stop: function (bZ, b0, b1) {
            var e = function (b3) {
                var b2 = b3.stop;
                delete b3.stop;
                b2(b1)
            };
            if (typeof bZ !== "string") {
                b1 = b0;
                b0 = bZ;
                bZ = bD
            }
            if (b0 && bZ !== false) {
                this.queue(bZ || "fx", [])
            }
            return this.each(function () {
                var b5 = true,
                    b4 = bZ != null && bZ + "queueHooks",
                    b2 = S.timers,
                    b3 = S._data(this);
                if (b4) {
                    if (b3[b4] && b3[b4].stop) {
                        e(b3[b4])
                    }
                } else {
                    for (b4 in b3) {
                        if (b3[b4] && b3[b4].stop && ay.test(b4)) {
                            e(b3[b4])
                        }
                    }
                }
                for (b4 = b2.length; b4--;) {
                    if (b2[b4].elem === this && (bZ == null || b2[b4].queue === bZ)) {
                        b2[b4].anim.stop(b1);
                        b5 = false;
                        b2.splice(b4, 1)
                    }
                }
                if (b5 || !b1) {
                    S.dequeue(this, bZ)
                }
            })
        }
    });

    function a(b0, b2) {
        var bZ, b1 = {
            height: b0
        },
            e = 0;
        b2 = b2 ? 1 : 0;
        for (; e < 4; e += 2 - b2) {
            bZ = a8[e];
            b1["margin" + bZ] = b1["padding" + bZ] = b0
        }
        if (b2) {
            b1.opacity = b1.width = b0
        }
        return b1
    }
    S.each({
        slideDown: a("show"),
        slideUp: a("hide"),
        slideToggle: a("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function (e, bZ) {
        S.fn[e] = function (b0, b1, b2) {
            return this.animate(bZ, b0, b1, b2)
        }
    });
    S.speed = function (e, bZ, b1) {
        var b0 = e && typeof e === "object" ? S.extend({}, e) : {
            complete: b1 || !b1 && bZ || S.isFunction(e) && e,
            duration: e,
            easing: b1 && bZ || bZ && !S.isFunction(bZ) && bZ
        };
        b0.duration = S.fx.off ? 0 : typeof b0.duration === "number" ? b0.duration : b0.duration in S.fx.speeds ? S.fx.speeds[b0.duration] : S.fx.speeds._default;
        if (b0.queue == null || b0.queue === true) {
            b0.queue = "fx"
        }
        b0.old = b0.complete;
        b0.complete = function () {
            if (S.isFunction(b0.old)) {
                b0.old.call(this)
            }
            if (b0.queue) {
                S.dequeue(this, b0.queue)
            }
        };
        return b0
    };
    S.easing = {
        linear: function (e) {
            return e
        },
        swing: function (e) {
            return 0.5 - Math.cos(e * Math.PI) / 2
        }
    };
    S.timers = [];
    S.fx = bd.prototype.init;
    S.fx.tick = function () {
        var e, bZ = S.timers,
            b0 = 0;
        for (; b0 < bZ.length; b0++) {
            e = bZ[b0];
            if (!e() && bZ[b0] === e) {
                bZ.splice(b0--, 1)
            }
        }
        if (!bZ.length) {
            S.fx.stop()
        }
    };
    S.fx.timer = function (e) {
        if (e() && S.timers.push(e) && !I) {
            I = setInterval(S.fx.tick, S.fx.interval)
        }
    };
    S.fx.interval = 13;
    S.fx.stop = function () {
        clearInterval(I);
        I = null
    };
    S.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    };
    S.fx.step = {};
    if (S.expr && S.expr.filters) {
        S.expr.filters.animated = function (e) {
            return S.grep(S.timers, function (bZ) {
                return e === bZ.elem
            }).length
        }
    }
    var j = /^(?:body|html)$/i;
    S.fn.offset = function (bZ) {
        if (arguments.length) {
            return bZ === bD ? this : this.each(function (b9) {
                S.offset.setOffset(this, bZ, b9)
            })
        }
        var b7, b0, b2, b5, b8, b4, b1, e = {
            top: 0,
            left: 0
        },
            b6 = this[0],
            b3 = b6 && b6.ownerDocument;
        if (!b3) {
            return
        }
        if ((b0 = b3.body) === b6) {
            return S.offset.bodyOffset(b6)
        }
        b7 = b3.documentElement;
        if (!S.contains(b7, b6)) {
            return e
        }
        if (typeof b6.getBoundingClientRect !== "undefined") {
            e = b6.getBoundingClientRect()
        }
        b2 = bn(b3);
        b5 = b7.clientTop || b0.clientTop || 0;
        b8 = b7.clientLeft || b0.clientLeft || 0;
        b4 = b2.pageYOffset || b7.scrollTop;
        b1 = b2.pageXOffset || b7.scrollLeft;
        return {
            top: e.top + b4 - b5,
            left: e.left + b1 - b8
        }
    };
    S.offset = {
        bodyOffset: function (e) {
            var b0 = e.offsetTop,
                bZ = e.offsetLeft;
            if (S.support.doesNotIncludeMarginInBodyOffset) {
                b0 += parseFloat(S.css(e, "marginTop")) || 0;
                bZ += parseFloat(S.css(e, "marginLeft")) || 0
            }
            return {
                top: b0,
                left: bZ
            }
        },
        setOffset: function (b1, b6, b3) {
            var b9 = S.css(b1, "position");
            if (b9 === "static") {
                b1.style.position = "relative"
            }
            var b5 = S(b1),
                b2 = b5.offset(),
                b8 = S.css(b1, "top"),
                e = S.css(b1, "left"),
                ca = (b9 === "absolute" || b9 === "fixed") && S.inArray("auto", [b8, e]) > -1,
                b7 = {},
                b4 = {},
                bZ, b0;
            if (ca) {
                b4 = b5.position();
                bZ = b4.top;
                b0 = b4.left
            } else {
                bZ = parseFloat(b8) || 0;
                b0 = parseFloat(e) || 0
            }
            if (S.isFunction(b6)) {
                b6 = b6.call(b1, b3, b2)
            }
            if (b6.top != null) {
                b7.top = (b6.top - b2.top) + bZ
            }
            if (b6.left != null) {
                b7.left = (b6.left - b2.left) + b0
            }
            if ("using" in b6) {
                b6.using.call(b1, b7)
            } else {
                b5.css(b7)
            }
        }
    };
    S.fn.extend({
        position: function () {
            if (!this[0]) {
                return
            }
            var b1 = this[0],
                bZ = this.offsetParent(),
                e = this.offset(),
                b0 = j.test(bZ[0].nodeName) ? {
                    top: 0,
                    left: 0
                } : bZ.offset();
            e.top -= parseFloat(S.css(b1, "marginTop")) || 0;
            e.left -= parseFloat(S.css(b1, "marginLeft")) || 0;
            b0.top += parseFloat(S.css(bZ[0], "borderTopWidth")) || 0;
            b0.left += parseFloat(S.css(bZ[0], "borderLeftWidth")) || 0;
            return {
                top: e.top - b0.top,
                left: e.left - b0.left
            }
        },
        offsetParent: function () {
            return this.map(function () {
                var e = this.offsetParent || bQ.body;
                while (e && (!j.test(e.nodeName) && S.css(e, "position") === "static")) {
                    e = e.offsetParent
                }
                return e || bQ.body
            })
        }
    });
    S.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function (bZ, e) {
        var b0 = /Y/.test(e);
        S.fn[bZ] = function (b1) {
            return S.access(this, function (b5, b4, b3) {
                var b2 = bn(b5);
                if (b3 === bD) {
                    return b2 ? (e in b2) ? b2[e] : b2.document.documentElement[b4] : b5[b4]
                }
                if (b2) {
                    b2.scrollTo(!b0 ? b3 : S(b2).scrollLeft(), b0 ? b3 : S(b2).scrollTop())
                } else {
                    b5[b4] = b3
                }
            }, bZ, b1, arguments.length, null)
        }
    });

    function bn(e) {
        return S.isWindow(e) ? e : e.nodeType === 9 ? e.defaultView || e.parentWindow : false
    }
    S.each({
        Height: "height",
        Width: "width"
    }, function (e, bZ) {
        S.each({
            padding: "inner" + e,
            content: bZ,
            "": "outer" + e
        }, function (b0, b1) {
            S.fn[b1] = function (b5, b2) {
                var b3 = arguments.length && (b0 || typeof b5 !== "boolean"),
                    b4 = b0 || (b5 === true || b2 === true ? "margin" : "border");
                return S.access(this, function (b9, b8, b6) {
                    var b7;
                    if (S.isWindow(b9)) {
                        return b9.document.documentElement["client" + e]
                    }
                    if (b9.nodeType === 9) {
                        b7 = b9.documentElement;
                        return Math.max(b9.body["scroll" + e], b7["scroll" + e], b9.body["offset" + e], b7["offset" + e], b7["client" + e])
                    }
                    return b6 === bD ? S.css(b9, b8, b6, b4) : S.style(b9, b8, b6, b4)
                }, bZ, b3 ? b5 : bD, b3, null)
            }
        })
    });
    Y.jQuery = Y.$ = S;
    if (typeof define === "function" && define.amd && define.amd.jQuery) {
        define("jquery", [], function () {
            return S
        })
    }
})(window);
(function () {
    var a = (function () {
        var b = function () { };
        return b
    })();
    window.mFilter = a;
    window.mFilter.filters = [{
        type: "track",
        method: function (d, e, f) {
            if (top.window.mFootprint && top.window.mFootprint.track) {
                top.window.mFootprint.track(d, e, f)
            } else {
                window.console && window.console.log("function not loaded.")
            }
        }
    }];
    window.mFilter.add = function (b) {
        a.filters.push(b);
        return this
    };
    window.mFilter.initDomFilter = function () {
        $("[filter]").each(function () {
            $(this).off("click.filter").on("click.filter", function () {
                var c = $(this).attr("filter");
                if (!c) {
                    return
                }
                var b = c.split(";");
                if (b.length < 2) {
                    return
                }
                var d = b[0].split(",");
                var e = b[1].split(",");
                a.doFilter(d, e)
            })
        })
    };
    window.mFilter.doFilter = function (c, d) {
        try {
            if (typeof c === "string") {
                c = [c]
            }
            if (!Array.isArray(d)) {
                d = [d]
            }
            window.mFilter.filters = window.mFilter.filters || [];
            for (var b = 0; b < window.mFilter.filters.length; b++) {
                if (c.contains(window.mFilter.filters[b].type)) {
                    if (typeof a.filters[b].method !== "function") {
                        continue
                    }
                    if (!d || d.length === 1) {
                        a.filters[b].method(d[0])
                    } else {
                        if (d.length === 2) {
                            a.filters[b].method(d[0], d[1])
                        } else {
                            if (d.length === 3) {
                                a.filters[b].method(d[0], d[1], d[2])
                            } else {
                                if (d.length === 4) {
                                    a.filters[b].method(d[0], d[1], d[2], d[3])
                                } else {
                                    if (d.length >= 5) {
                                        a.filters[b].method(d[0], d[1], d[2], d[3], d[4])
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } catch (f) {
            window.console && window.console.log("filter exception" + f)
        }
    }
})();
$(function () {
    mFilter.initDomFilter()
});
(function () {
    var a = (function () {
        var b = function () {
            var c = this;
            this.zip = function (d, e) {
                if (d === undefined || d == null) {
                    return null
                }
                e = e || "gzip";
                var g = c.getZipUintArray(d);
                var f;
                switch (e) {
                    case "gzip":
                        f = window.pako.gzip(g);
                        break;
                    case "deflate":
                        f = window.pako.deflate(g);
                        break;
                    case "deflate-raw":
                        f = window.pako.deflateRaw(g);
                        break
                }
                return c.toBase64(f)
            };
            this.toBase64 = function (f) {
                var h = "";
                var d = 102400;
                for (var e = 0; e * d < f.length; e++) {
                    var g = String.fromCharCode.apply(null, f.slice(d * e, (e + 1) * d));
                    h += g
                }
                var j = btoa(h);
                return j
            };
            this.getZipUintArray = function (d) {
                var g = d;
                if (typeof d !== "string") {
                    g = JSON.stringify(d)
                }
                g = encodeURIComponent(g);
                var f = new Uint8Array(g.length);
                for (var e = 0; e < g.length; e++) {
                    f[e] = g.charCodeAt(e)
                }
                return f
            }
        };
        return b
    })();
    $.extend(a, {
        zip: function (b, c) {
            return new a().zip(b, c)
        }
    });
    $.mZip = window.mZip = a
})();
BrowserTabSwitch = (function () {
    function a(b) {
        this.urlKey = "bti";
        this.currentLangKey = "lang";
        this.sessionStrorageKey = "browser-tab-index";
        this.sessionStrorageLangKey = "browser-tab-lang"
    }
    a.prototype.bindSwitchEvent = function (b) {
        $(window.self).off("focus.tabswitch").on("focus.tabswitch", function () {
            top.accessRequest(function () { }, true)
        })
    };
    a.prototype.visibilityChangeEvent = function () {
        var c = "hidden";
        if (c in document) {
            document.addEventListener("visibilitychange", b)
        } else {
            if ((c = "mozHidden") in document) {
                document.addEventListener("mozvisibilitychange", b)
            } else {
                if ((c = "webkitHidden") in document) {
                    document.addEventListener("webkitvisibilitychange", b)
                } else {
                    if ((c = "msHidden") in document) {
                        document.addEventListener("msvisibilitychange", b)
                    }
                }
            }
        }
        function b(i) {
            var g = "visible",
                d = "hidden",
                e = {
                    focus: g,
                    focusin: g,
                    pageshow: g,
                    blur: d,
                    focusout: d,
                    pagehide: d
                };
            i = i || window.event;
            var f;
            if (i.type in e) {
                f = e[i.type]
            } else {
                f = this[c] ? "hidden" : "visible"
            }
            if (f) {
                top.accessRequest(function () { }, false)
            }
        }
        if (document[c] !== undefined) {
            b({
                type: document[c] ? "blur" : "focus"
            })
        }
    };
    a.prototype.initSessionStorage = function () {
        var c = this;
        var b = Megi.getQueryString(c.urlKey);
        var e = c.getBrowserTabIndex();
        var d = Megi.getQueryString(c.currentLangKey);
        if (b) {
            c.setBrowserTabIndex(b)
        }
        if (d) {
            c.setBrowserTabLang(d)
        }
    };
    a.prototype.intercept = function (c) {
        var b = this;
        if (!c || (c.indexOf(b.urlKey) >= 0 && c.indexOf(b.currentLangKey) > 0)) {
            return c
        }
        if (c.split("?").length > 1) {
            c = c + "&" + b.urlKey + "=" + b.getBrowserTabIndex() + "&" + b.currentLangKey + "=" + b.getBrowserTabLang()
        } else {
            c = c + "?" + b.urlKey + "=" + b.getBrowserTabIndex() + "&" + b.currentLangKey + "=" + b.getBrowserTabLang()
        }
        return c
    };
    a.prototype.getBrowserTabIndex = function () {
        var b = this;
        return window.sessionStorage.getItem(b.sessionStrorageKey)
    };
    a.prototype.setBrowserTabIndex = function (b) {
        var c = this;
        window.sessionStorage.setItem(c.sessionStrorageKey, b)
    };
    a.prototype.setBrowserTabLang = function (b) {
        var c = this;
        window.sessionStorage.setItem(c.sessionStrorageLangKey, b)
    };
    a.prototype.getBrowserTabLang = function () {
        var b = this;
        return window.sessionStorage.getItem(b.sessionStrorageLangKey)
    };
    a.prototype.setBrowserTabOrgId = function (b) {
        top.$("#aOrgList").attr("orgid", b)
    };
    return a
}());
/* Copyright (c) 2013 Brandon Aaron (http://brandon.aaron.sh)
 * Licensed under the MIT License (LICENSE.txt).
 *
 * Version: 3.1.9
 *
 * Requires: jQuery 1.2.2+
 */
(function (a) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], a)
    } else {
        if (typeof exports === "object") {
            module.exports = a
        } else {
            a(jQuery)
        }
    }
}(function (f) {
    var l = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"],
        b = ("onwheel" in document || document.documentMode >= 9) ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"],
        h = Array.prototype.slice,
        d, k;
    if (f.event.fixHooks) {
        for (var a = l.length; a;) {
            f.event.fixHooks[l[--a]] = f.event.mouseHooks
        }
    }
    var j = f.event.special.mousewheel = {
        version: "3.1.9",
        setup: function () {
            if (this.addEventListener) {
                for (var m = b.length; m;) {
                    this.addEventListener(b[--m], e, false)
                }
            } else {
                this.onmousewheel = e
            }
            f.data(this, "mousewheel-line-height", j.getLineHeight(this));
            f.data(this, "mousewheel-page-height", j.getPageHeight(this))
        },
        teardown: function () {
            if (this.removeEventListener) {
                for (var m = b.length; m;) {
                    this.removeEventListener(b[--m], e, false)
                }
            } else {
                this.onmousewheel = null
            }
        },
        getLineHeight: function (i) {
            return parseInt(f(i)["offsetParent" in f.fn ? "offsetParent" : "parent"]().css("fontSize"), 10)
        },
        getPageHeight: function (i) {
            return f(i).height()
        },
        settings: {
            adjustOldDeltas: true
        }
    };
    f.fn.extend({
        mousewheel: function (i) {
            return i ? this.bind("mousewheel", i) : this.trigger("mousewheel")
        },
        unmousewheel: function (i) {
            return this.unbind("mousewheel", i)
        }
    });

    function e(q) {
        var n = q || window.event,
            t = h.call(arguments, 1),
            s = 0,
            o = 0,
            p = 0,
            m = 0;
        q = f.event.fix(n);
        q.type = "mousewheel";
        if ("detail" in n) {
            p = n.detail * -1
        }
        if ("wheelDelta" in n) {
            p = n.wheelDelta
        }
        if ("wheelDeltaY" in n) {
            p = n.wheelDeltaY
        }
        if ("wheelDeltaX" in n) {
            o = n.wheelDeltaX * -1
        }
        if ("axis" in n && n.axis === n.HORIZONTAL_AXIS) {
            o = p * -1;
            p = 0
        }
        s = p === 0 ? o : p;
        if ("deltaY" in n) {
            p = n.deltaY * -1;
            s = p
        }
        if ("deltaX" in n) {
            o = n.deltaX;
            if (p === 0) {
                s = o * -1
            }
        }
        if (p === 0 && o === 0) {
            return
        }
        if (n.deltaMode === 1) {
            var i = f.data(this, "mousewheel-line-height");
            s *= i;
            p *= i;
            o *= i
        } else {
            if (n.deltaMode === 2) {
                var r = f.data(this, "mousewheel-page-height");
                s *= r;
                p *= r;
                o *= r
            }
        }
        m = Math.max(Math.abs(p), Math.abs(o));
        if (!k || m < k) {
            k = m;
            if (c(n, m)) {
                k /= 40
            }
        }
        if (c(n, m)) {
            s /= 40;
            o /= 40;
            p /= 40
        }
        s = Math[s >= 1 ? "floor" : "ceil"](s / k);
        o = Math[o >= 1 ? "floor" : "ceil"](o / k);
        p = Math[p >= 1 ? "floor" : "ceil"](p / k);
        q.deltaX = o;
        q.deltaY = p;
        q.deltaFactor = k;
        q.deltaMode = 0;
        t.unshift(q, s, o, p);
        if (d) {
            clearTimeout(d)
        }
        d = setTimeout(g, 200);
        return (f.event.dispatch || f.event.handle).apply(this, t)
    }
    function g() {
        k = null
    }
    function c(i, m) {
        return j.settings.adjustOldDeltas && i.type === "mousewheel" && m % 120 === 0
    }
}));
var clearMsgTimeoutId = null;
var isTopWindowInited = false;
var FW = {
    getWinWidth: function () {
        return $(".m-wrapper").outerWidth()
    },
    getWinHeight: function () {
        return $(window).outerHeight()
    },
    getLeftWidth: function () {
        if ($(".m-nav").is(":hidden")) {
            return 0
        } else {
            return $(".m-nav").outerWidth()
        }
    },
    getMainWidth: function () {
        var a = FW.getWinWidth() - FW.getLeftWidth() - 1;
        return a
    },
    getMainHeight: function () {
        var a = FW.getWinHeight() - $(".m-header").height();
        if (a < 320) {
            return 320
        }
        return a
    },
    initLeft: function () {
        var d = FW.getLeftWidth();
        var a = FW.getMainHeight();
        $(".m-nav").css({
            height: a + "px"
        });
        $(".m-nav>ul>li>.m-sub-nav-container").css({
            height: (a - 20) + "px",
            left: d + "px"
        });
        hideBtnH = $(".m-nav>.bottom").height();
        var b = $(".m-nav>.top>li").length;
        var c = a - b * 55 - hideBtnH;
        if (c < 0) {
            c = 0
        }
        $(".m-nav>.bottom").css("margin-top", c + "px");
        $(".m-sub-nav-container").hide()
    },
    initLeftEvent: function () {
        $(".m-nav-shrink").unbind().click(function () {
            $(".m-nav").hide();
            $(".m-menu-show>.btn-show").css("display", "block");
            FW.resize()
        })
    },
    initMain: function () {
        var b = FW.getMainWidth();
        var a = FW.getMainHeight();
        $(".m-main").css({
            width: b + "px"
        });
        $(".m-main").css({
            height: a + "px"
        });
        $(".m-main").find("iframe").attr({
            width: b + "px",
            height: a + "px"
        })
    },
    initInnerMain: function () {
        var a = FW.getMainHeight();
        $(".m-imain").css({
            height: a + "px"
        })
    },
    initShrinkMenu: function () {
        $(".m-nav-pop>.nav-main>.item>.item-link").mouseover(function () {
            $(".m-nav-pop>.nav-main>li").removeClass("current").removeClass("arrow");
            $(".n-sub-nav-pop").hide();
            var c = $(this).attr("data-module");
            $(this).closest("li").addClass("current");
            if (c != undefined && c.length > 0) {
                $(this).closest("li").addClass("arrow");
                var b = $(".n-sub-nav-pop[data-module='" + c + "']");
                $(b).show();
                var d = $(b).height();
                var a = $(".m-nav-pop").height();
                if (d < a) {
                    d = a;
                    $(b).css("height", d + "px")
                }
            }
        })
    },
    initShrinkMenuEvent: function () {
        $(".m-menu-show>.btn-show").unbind().mouseover(function () {
            $(".m-nav-pop").show(300)
        }).mouseout(function () {
            $(".m-nav-pop").hide()
        });
        $(".m-nav-pop").unbind().mouseover(function () {
            $(".m-nav-pop").show()
        }).mouseout(function () {
            $(".m-nav-pop").hide()
        })
    },
    resize: function () {
        FW.initLeft();
        FW.initMain()
    },
    addTab: function (c, b) {
        FW.resize();
        var a = FW.getMainHeight();
        b.find("iframe").attr("height", a).addClass("m-page-loading");
        $(".m-tab-loading", c).addClass("m-img-loading")
    },
    initFW: function () {
        FW.resize();
        FW.initInnerMain();
        FW.initLeftEvent();
        FW.initShrinkMenu();
        FW.initShrinkMenuEvent();
        FW.initMenu();
        isTopWindowInited = true
    },
    msgEvent: function () {
        if (clearMsgTimeoutId != null) {
            clearTimeout(clearMsgTimeoutId)
        }
        clearMsgTimeoutId = setTimeout(FW.removeMsg, 15000)
    },
    initMenu: function () {
        var a = "current";
        var g = "m-sub-nav-container";
        var d = "iframe-top-bg";
        var b = $("." + d);
        var c = function () {
            var h = $(".m-main");
            b.show().css({
                width: h.outerWidth(),
                height: h.outerHeight(),
                left: h.offset().left,
                top: h.offset().top
            })
        };
        var f = function () {
            b.hide()
        };
        var e = function () {
            $(document).off("click.menu").on("click.menu", function () {
                $(".m-nav ul li." + a).trigger("click")
            })
        };
        $(".m-nav>ul>li").off("click").on("click", function () {
            var l = this;
            var o = $("." + g, $(l));
            if (o.is(":visible")) {
                o.hide();
                $(l).removeClass(a);
                f()
            } else {
                c();
                e();
                $(l).addClass(a);
                $(".m-nav>ul>li").not(l).each(function () {
                    $(this).removeClass(a);
                    $("." + g, $(this)).hide()
                });
                $("." + g, $(l)).show();
                var n = 13;
                var k = $(this).offset().left;
                var p = $(this).width();
                var i = $(window).height() - 75;
                if (o.length > 0) {
                    var m = o.find("p,tr").length * 32;
                    m = m - o.find("p[myattr='right']").length * 32;
                    if ($(".arrow-content-cell-title", o).is(":visible")) {
                        m += 28
                    }
                    var j = $(l).offset().top;
                    if ($(l).offset().top + m > $(window).height()) {
                        j = $(l).offset().top - m + $(l).height();
                        n = n + m - $(l).height()
                    }
                    o.find(".arrow-left,.arrow-left-border").css("margin-top", (n) + "px");
                    o.css({
                        left: (k + p) + "px",
                        top: j,
                        height: m
                    }).show();
                    return false
                }
            }
        });
        document.onkeydown = function (h) {
            if (window.event && window.event.keyCode == 13) {
                var i = h.srcElement;
                if ($(i).attr("id") == "aNewTab") {
                    window.event.returnValue = false
                }
            }
        };
        $("#aUser").click(function () {
            Megi.popup("#aUser", {
                selector: "#divUserInfo",
                paddingBottom: 10,
                position: "right-bottom",
                showCallBack: function () {
                    $("#aUser").addClass("current")
                },
                hideCallBack: function () {
                    $("#aUser").removeClass("current")
                }
            })
        });
        $("#aNewTab").click(function (h) {
            Megi.popup("#aNewTab", {
                selector: "#divNewTabList",
                event: h
            })
        });
        $("#divNewTabList a").click(function () {
            $("#divNewTabList").hide()
        });
        $("#aOrgList").click(function () {
            Megi.popup("#aOrgList", {
                selector: "#divOrgList",
                paddingBottom: 5,
                left: -20
            })
        })
    }
};
$(document).ready(function () {
    FW.initFW();
    $(window).resize(function () {
        FW.resize();
        setTimeout(FW.resize, 300)
    })
});
(function (a) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], a)
    } else {
        a(jQuery)
    }
}(function (e, a) {
    var b = 0,
        c = Array.prototype.slice,
        d = e.cleanData;
    e.cleanData = function (h) {
        for (var f = 0, g;
            (g = h[f]) != null; f++) {
            try {
                e(g).triggerHandler("remove")
            } catch (j) { }
        }
        d(h)
    };
    e.widget = function (l, f, m) {
        var g, k, j, i, n = {},
            h = l.split(".")[0];
        l = l.split(".")[1];
        g = h + "-" + l;
        if (!m) {
            m = f;
            f = e.Widget
        }
        e.expr[":"][g.toLowerCase()] = function (o) {
            return !!e.data(o, g)
        };
        e[h] = e[h] || {};
        k = e[h][l];
        j = e[h][l] = function (p, o) {
            if (!this._createWidget) {
                return new j(p, o)
            }
            if (arguments.length) {
                this._createWidget(p, o)
            }
        };
        e.extend(j, k, {
            version: m.version,
            _proto: e.extend({}, m),
            _childConstructors: []
        });
        i = new f();
        i.options = e.widget.extend({}, i.options);
        e.each(m, function (o, p) {
            if (!e.isFunction(p)) {
                n[o] = p;
                return
            }
            n[o] = (function () {
                var q = function () {
                    return f.prototype[o].apply(this, arguments)
                },
                    r = function (s) {
                        return f.prototype[o].apply(this, s)
                    };
                return function () {
                    var t = this._super,
                        u = this._superApply,
                        s;
                    this._super = q;
                    this._superApply = r;
                    s = p.apply(this, arguments);
                    this._super = t;
                    this._superApply = u;
                    return s
                }
            })()
        });
        j.prototype = e.widget.extend(i, {
            widgetEventPrefix: k ? i.widgetEventPrefix : l
        }, n, {
                constructor: j,
                namespace: h,
                widgetName: l,
                widgetFullName: g
            });
        if (k) {
            e.each(k._childConstructors, function (o, q) {
                var p = q.prototype;
                e.widget(p.namespace + "." + p.widgetName, j, q._proto)
            });
            delete k._childConstructors
        } else {
            f._childConstructors.push(j)
        }
        e.widget.bridge(l, j)
    };
    e.widget.extend = function (g) {
        var i = c.call(arguments, 1),
            j = 0,
            h = i.length,
            k, f;
        for (; j < h; j++) {
            for (k in i[j]) {
                f = i[j][k];
                if (i[j].hasOwnProperty(k) && f !== a) {
                    if (e.isPlainObject(f)) {
                        g[k] = e.isPlainObject(g[k]) ? e.widget.extend({}, g[k], f) : e.widget.extend({}, f)
                    } else {
                        g[k] = f
                    }
                }
            }
        }
        return g
    };
    e.widget.bridge = function (h, g) {
        var f = g.prototype.widgetFullName || h;
        e.fn[h] = function (l) {
            var k = typeof l === "string",
                i = c.call(arguments, 1),
                j = this;
            l = !k && i.length ? e.widget.extend.apply(null, [l].concat(i)) : l;
            if (k) {
                this.each(function () {
                    var m, n = e.data(this, f);
                    if (!n) {
                        return e.error("cannot call methods on " + h + " prior to initialization; attempted to call method '" + l + "'")
                    }
                    if (!e.isFunction(n[l]) || l.charAt(0) === "_") {
                        return e.error("no such method '" + l + "' for " + h + " widget instance")
                    }
                    m = n[l].apply(n, i);
                    if (m !== n && m !== a) {
                        j = m && m.jquery ? j.pushStack(m.get()) : m;
                        return false
                    }
                })
            } else {
                this.each(function () {
                    var m = e.data(this, f);
                    if (m) {
                        m.option(l || {})._init()
                    } else {
                        e.data(this, f, new g(l, this))
                    }
                })
            }
            return j
        }
    };
    e.Widget = function () { };
    e.Widget._childConstructors = [];
    e.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: false,
            create: null
        },
        _createWidget: function (g, f) {
            f = e(f || this.defaultElement || this)[0];
            this.element = e(f);
            this.uuid = b++;
            this.eventNamespace = "." + this.widgetName + this.uuid;
            this.options = e.widget.extend({}, this.options, this._getCreateOptions(), g);
            this.bindings = e();
            this.hoverable = e();
            this.focusable = e();
            if (f !== this) {
                e.data(f, this.widgetFullName, this);
                this._on(true, this.element, {
                    remove: function (h) {
                        if (h.target === f) {
                            this.destroy()
                        }
                    }
                });
                this.document = e(f.style ? f.ownerDocument : f.document || f);
                this.window = e(this.document[0].defaultView || this.document[0].parentWindow)
            }
            this._create();
            this._trigger("create", null, this._getCreateEventData());
            this._init()
        },
        _getCreateOptions: e.noop,
        _getCreateEventData: e.noop,
        _create: e.noop,
        _init: e.noop,
        destroy: function () {
            this._destroy();
            this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName));
            this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled");
            this.bindings.unbind(this.eventNamespace);
            this.hoverable.removeClass("ui-state-hover");
            this.focusable.removeClass("ui-state-focus")
        },
        _destroy: e.noop,
        widget: function () {
            return this.element
        },
        option: function (l, f) {
            var h = l,
                k, j, g;
            if (arguments.length === 0) {
                return e.widget.extend({}, this.options)
            }
            if (typeof l === "string") {
                h = {};
                k = l.split(".");
                l = k.shift();
                if (k.length) {
                    j = h[l] = e.widget.extend({}, this.options[l]);
                    for (g = 0; g < k.length - 1; g++) {
                        j[k[g]] = j[k[g]] || {};
                        j = j[k[g]]
                    }
                    l = k.pop();
                    if (f === a) {
                        return j[l] === a ? null : j[l]
                    }
                    j[l] = f
                } else {
                    if (f === a) {
                        return this.options[l] === a ? null : this.options[l]
                    }
                    h[l] = f
                }
            }
            this._setOptions(h);
            return this
        },
        _setOptions: function (g) {
            var f;
            for (f in g) {
                this._setOption(f, g[f])
            }
            return this
        },
        _setOption: function (f, g) {
            this.options[f] = g;
            if (f === "disabled") {
                this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!g).attr("aria-disabled", g);
                this.hoverable.removeClass("ui-state-hover");
                this.focusable.removeClass("ui-state-focus")
            }
            return this
        },
        enable: function () {
            return this._setOption("disabled", false)
        },
        disable: function () {
            return this._setOption("disabled", true)
        },
        _on: function (f, h, j) {
            var g, i = this;
            if (typeof f !== "boolean") {
                j = h;
                h = f;
                f = false
            }
            if (!j) {
                j = h;
                h = this.element;
                g = this.widget()
            } else {
                h = g = e(h);
                this.bindings = this.bindings.add(h)
            }
            e.each(j, function (p, n) {
                function l() {
                    if (!f && (i.options.disabled === true || e(this).hasClass("ui-state-disabled"))) {
                        return
                    }
                    return (typeof n === "string" ? i[n] : n).apply(i, arguments)
                }
                if (typeof n !== "string") {
                    l.guid = n.guid = n.guid || l.guid || e.guid++
                }
                var m = p.match(/^(\w+)\s*(.*)$/),
                    o = m[1] + i.eventNamespace,
                    k = m[2];
                if (k) {
                    g.delegate(k, o, l)
                } else {
                    h.bind(o, l)
                }
            })
        },
        _off: function (f, g) {
            g = (g || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace;
            f.unbind(g).undelegate(g)
        },
        _delay: function (i, f) {
            function g() {
                return (typeof i === "string" ? h[i] : i).apply(h, arguments)
            }
            var h = this;
            return setTimeout(g, f || 0)
        },
        _hoverable: function (f) {
            this.hoverable = this.hoverable.add(f);
            this._on(f, {
                mouseenter: function (g) {
                    e(g.currentTarget).addClass("ui-state-hover")
                },
                mouseleave: function (g) {
                    e(g.currentTarget).removeClass("ui-state-hover")
                }
            })
        },
        _focusable: function (f) {
            this.focusable = this.focusable.add(f);
            this._on(f, {
                focusin: function (g) {
                    e(g.currentTarget).addClass("ui-state-focus")
                },
                focusout: function (g) {
                    e(g.currentTarget).removeClass("ui-state-focus")
                }
            })
        },
        _trigger: function (j, k, f) {
            var i, g, h = this.options[j];
            f = f || {};
            k = e.Event(k);
            k.type = (j === this.widgetEventPrefix ? j : this.widgetEventPrefix + j).toLowerCase();
            k.target = this.element[0];
            g = k.originalEvent;
            if (g) {
                for (i in g) {
                    if (!(i in k)) {
                        k[i] = g[i]
                    }
                }
            }
            this.element.trigger(k, f);
            return !(e.isFunction(h) && h.apply(this.element[0], [k].concat(f)) === false || k.isDefaultPrevented())
        }
    };
    e.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function (f, g) {
        e.Widget.prototype["_" + f] = function (k, l, h) {
            if (typeof l === "string") {
                l = {
                    effect: l
                }
            }
            var j, i = !l ? f : l === true || typeof l === "number" ? g : l.effect || g;
            l = l || {};
            if (typeof l === "number") {
                l = {
                    duration: l
                }
            }
            j = !e.isEmptyObject(l);
            l.complete = h;
            if (l.delay) {
                k.delay(l.delay)
            }
            if (j && e.effects && e.effects.effect[i]) {
                k[f](l)
            } else {
                if (i !== f && k[i]) {
                    k[i](l.duration, l.easing, h)
                } else {
                    k.queue(function (m) {
                        e(this)[f]();
                        if (h) {
                            h.call(k[0])
                        }
                        m()
                    })
                }
            }
        }
    })
}));
(function () {
    var a = (function () {
        var c;
        var d;
        var g = "click2select";
        var h = "click.click2select";
        var e = "blur.click2select";
        var b = "input:text:not(.click-no-select), input:password, textarea:not(.click-no-select)";
        var f = function (i, j) {
            var k = this;
            c = i == document ? b : i;
            d = j;
            this.isTextSelected = function (l) {
                if (typeof l.selectionStart == "number") {
                    return l.selectionEnd - l.selectionStart > 0
                } else {
                    if (typeof document.selection != "undefined") {
                        return document.selection.createRange().text.length > 0
                    }
                }
            };
            this.clickEvent = function (m) {
                var l = $(m.srcElement || m.target)[0];
                !$(l).hasClass(g) && !k.isTextSelected(l) && $(l).selectAll(m);
                $("." + g).removeClass(g);
                $(l).addClass(g)
            };
            this.blurEvent = function (m) {
                var l = $(m.srcElement || m.target)[0];
                $(l).removeClass(g)
            };
            this.init = function () {
                if (d) {
                    $(document).off(h, c).on(h, c, function (l) {
                        k.clickEvent(l)
                    }).off(e, c).on(e, c, function (l) {
                        k.blurEvent(l)
                    })
                } else {
                    $(c).off(h).on(h, function (l) {
                        k.clickEvent(l)
                    }).off(e).on(e, function (l) {
                        k.blurEvent(l)
                    })
                }
            }
        };
        return f
    })();
    $.fn.mSelect = function (b) {
        return new a(this, !!b).init()
    };
    window.mSelect = a
})();
(function (b) {
    var a = (function () {
        var c = function () { };
        return c
    })();
    b.mWindow = a;
    $.extend(b.mWindow, {
        open: function (d, c) {
            window.mFilter.doFilter("track", [c || d]);
            window.open(d)
        },
        reload: function (f, e, g) {
            b.mWindow.offEvent(b);
            window.mFilter.doFilter("track", [(f || window.location.href), undefined, 0]);
            var d = new BrowserTabSwitch(),
                f = d.intercept(f);
            if (e) {
                if (f) {
                    if (window.frameElement && window.frameElement.src) {
                        if (!g) {
                            $("body", window.document).empty()
                        }
                        $(window.frameElement).addClass("m-page-loading");
                        window.frameElement.src = f
                    } else {
                        window.location = f
                    }
                } else {
                    if (!g) {
                        $("body", window.document).empty()
                    }
                    if (window.frameElement) {
                        $(window.frameElement).addClass("m-page-loading");
                        if (a.GetBrowser().indexOf("ie") >= 0) {
                            var c = $("form[id='f_" + $(window.frameElement).attr("id") + "']", $(window.frameElement).parent());
                            if (c.length > 0) {
                                c.submit();
                                return
                            }
                        }
                    }
                    window.location.reload(true)
                }
                return
            }
            top.window.accessRequest(function () {
                if (f) {
                    if (window.frameElement && window.frameElement.src) {
                        if (!g) {
                            $("body", window.document).empty()
                        }
                        $(window.frameElement).addClass("m-page-loading");
                        window.frameElement.src = f
                    } else {
                        window.location = f
                    }
                } else {
                    if (!g) {
                        $("body", window.document).empty()
                    }
                    if (window.frameElement) {
                        $(window.frameElement).addClass("m-page-loading");
                        if (a.GetBrowser().indexOf("ie") >= 0) {
                            var h = $("form[id='f_" + $(window.frameElement).attr("id") + "']", $(window.frameElement).parent());
                            if (h.length > 0) {
                                h.submit();
                                return
                            }
                        }
                    }
                    window.location.reload(true)
                }
            })
        },
        offEvent: function (c) {
            c = c || b;
            $("input,a,div,span,li,textarea", c.document).off("click").off("keyup").off("mouseover").off("mouseleave").off("mousedown").off("mouseup").off("mouseout").off("keydown").off("dblclick").off("focus").off("blur")
        },
        GetBrowser: function () {
            var f = navigator.userAgent.toLowerCase();
            var e = /msie [\d.]+/gi;
            var d = /firefox\/[\d.]+/gi;
            var h = /chrome\/[\d.]+/gi;
            var g = /safari\/[\d.]+/gi;
            var c = "";
            if (f.indexOf("msie") > 0) {
                c = f.match(e)
            }
            if (f.indexOf("firefox") > 0) {
                c = f.match(d)
            }
            if (f.indexOf("chrome") > 0) {
                c = f.match(h)
            }
            if (f.indexOf("safari") > 0 && f.indexOf("chrome") < 0) {
                c = f.match(g)
            }
            c = c.toString();
            if ("" == c) {
                c = "Is not a standard browser"
            }
            if (c.indexOf("firefox") != -1 || c.indexOf("chrome") != -1) {
                c = c.replace("/", "")
            }
            if (c.indexOf("msie") != -1) {
                c = c.replace("msie", "ie").replace(/\s/g, "")
            }
            if (c == "Is not a standard browser") {
                if (a.IsIE()) {
                    c = "ie11.0"
                }
            }
            return c
        },
        IsIE: function () {
            if (!!window.ActiveXObject || "ActiveXObject" in window) {
                return true
            } else {
                return false
            }
        },
        getOrigin: function () {
            if (window.context == undefined) {
                if (!window.location.origin) {
                    window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ":" + window.location.port : "")
                }
                window.context = location.origin + "/V6.0"
            }
            return window.location.origin
        },
        clearSelectedText: function () {
            if (document.selection) {
                document.selection.empty()
            } else {
                if (window.getSelection) {
                    window.getSelection().removeAllRanges()
                }
            }
        }
    })
})(window);

function accAdd(a, j) {
    var g, h, b, d;
    try {
        g = a.toString().split(".")[1].length
    } catch (i) {
        g = 0
    }
    try {
        h = j.toString().split(".")[1].length
    } catch (i) {
        h = 0
    }
    d = Math.abs(g - h);
    b = Math.pow(10, Math.max(g, h));
    if (d > 0) {
        var f = Math.pow(10, d);
        if (g > h) {
            a = Number(a.toString().replace(".", ""));
            j = Number(j.toString().replace(".", "")) * f
        } else {
            a = Number(a.toString().replace(".", "")) * f;
            j = Number(j.toString().replace(".", ""))
        }
    } else {
        a = Number(a.toString().replace(".", ""));
        j = Number(j.toString().replace(".", ""))
    }
    return +((a + j) / b)
}
Number.prototype.add = function (a) {
    return accAdd(this, a)
};

function accSub(a, h) {
    var d, f, b, c;
    try {
        d = a.toString().split(".")[1].length
    } catch (g) {
        d = 0
    }
    try {
        f = h.toString().split(".")[1].length
    } catch (g) {
        f = 0
    }
    b = Math.pow(10, Math.max(d, f));
    c = (d >= f) ? d : f;
    return +(((a * b - h * b) / b).toFixed(c))
}
Number.prototype.sub = function (a) {
    return accSub(this, a)
};

function accMul(a, g) {
    var b = 0,
        d = a.toString(),
        f = g.toString();
    try {
        b += d.split(".")[1].length
    } catch (c) { }
    try {
        b += f.split(".")[1].length
    } catch (c) { }
    return +(Number(d.replace(".", "")) * Number(f.replace(".", "")) / Math.pow(10, b))
}
Number.prototype.mul = function (a) {
    return accMul(this, a)
};

function accDiv(arg1, arg2) {
    var t1 = 0,
        t2 = 0,
        r1, r2;
    try {
        t1 = arg1.toString().split(".")[1].length
    } catch (e) { }
    try {
        t2 = arg2.toString().split(".")[1].length
    } catch (e) { }
    with (Math) {
        r1 = Number(arg1.toString().replace(".", ""));
        r2 = Number(arg2.toString().replace(".", ""));
        return +((r1 / r2) * pow(10, t2 - t1))
    }
}
Number.prototype.div = function (a) {
    return accDiv(this, a)
};
Date.prototype.format = function (b) {
    var d = new Date();
    var a = {
        "M+": this.getMonth() + 1,
        "d+": this.getDate(),
        "h+": this.getHours() % 12 == 0 ? 12 : this.getHours() % 12,
        "H+": this.getHours(),
        "t+": this.getHours() <= 12 ? LangKey.AM : LangKey.PM,
        "m+": this.getMinutes(),
        "s+": this.getSeconds(),
        "q+": Math.floor((this.getMonth() + 3) / 3),
        S: this.getMilliseconds()
    };
    if (/(y+)/.test(b)) {
        b = b.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length))
    }
    for (var c in a) {
        if (new RegExp("(" + c + ")").test(b)) {
            b = b.replace(RegExp.$1, RegExp.$1.length == 1 ? a[c] : ("00" + a[c]).substr(("" + a[c]).length))
        }
    }
    return b
};
String.prototype.toNullableNumber = function () {
    if (this === "" || this.trim() === "") {
        return undefined
    }
    if (isNaN(this)) {
        return undefined
    }
    if (this.length > 20) {
        return undefined
    }
    var b = +this;
    var a = new String(b);
    a = a.replace(".", "").replace("+", "").replace("-");
    if (a.length > 20) {
        return undefined
    }
    return b
};
String.prototype.format = function (f) {
    if (arguments.length > 0) {
        var e = this;
        if (arguments.length == 1 && typeof (f) == "object") {
            for (var d in f) {
                if (d == null) {
                    continue
                }
                var c = new RegExp("({" + d + "})", "g");
                e = e.replace(c, f[d])
            }
        } else {
            for (var b = 0; b < arguments.length; b++) {
                var a = arguments[b];
                if (a == undefined || a == null) {
                    continue
                }
                if (a.toString().indexOf("/Date(") > -1) {
                    a = $.mDate.format(a)
                }
                var c = new RegExp("({[" + b + "]})", "g");
                e = e.replace(c, a)
            }
        }
        return e
    } else {
        return this
    }
};
Array.prototype.distinct = function () {
    if (this.length < 2) {
        return this
    }
    var a = [];
    for (var b = 0; b < this.length; b++) {
        if (!a.contains(this[b])) {
            a.push(this[b])
        }
    }
    return a
};
Array.prototype.select = function (b) {
    var a = [];
    for (var c = 0; c < this.length; c++) {
        a.push(this[c][b])
    }
    return a
};
Array.prototype.contains = function (b) {
    for (var a = 0; a < this.length; a++) {
        if (this[a] === b) {
            return true
        }
    }
    return false
};
Array.prototype.sum = function (b, d) {
    var a = 0;
    for (var c = 0; c < this.length; c++) {
        a = a.add(+(this[c][b] || 0))
    }
    return d != undefined ? +(a.toFixed(d)) : a
};
Array.prototype.where = function (condition) {
    var result = [];
    for (var i = 0; i < this.length; i++) {
        var x = this[i];
        if (condition != null && condition != undefined && eval(condition) === true) {
            result.push(x)
        }
    }
    return result
};
Array.prototype.OrderByAsc = function (a) {
    var d = {};
    for (var b = 0; b < this.length; b++) {
        for (var c = 0; c < this.length; c++) {
            if (a(this[b]) < a(this[c])) {
                d = this[c];
                this[c] = this[b];
                this[b] = d
            }
        }
    }
    return this
};
Array.prototype.OrderByDesc = function (a) {
    var d = {};
    for (var b = 0; b < this.length; b++) {
        for (var c = 0; c < this.length; c++) {
            if (a(this[b]) > a(this[c])) {
                d = this[c];
                this[c] = this[b];
                this[b] = d
            }
        }
    }
    return this
};
Array.prototype.removeItem = function (a) {
    var c = [];
    for (var b = 0; b < this.length; b++) {
        if (this[b] !== a) {
            c.push(this[b])
        }
    }
    return c
};
Array.prototype.OrderByAsc = function (a) {
    var d = {};
    for (var b = 0; b < this.length; b++) {
        for (var c = 0; c < this.length; c++) {
            if (a(this[b]) < a(this[c])) {
                d = this[c];
                this[c] = this[b];
                this[b] = d
            }
        }
    }
    return this
};
Array.prototype.OrderByDesc = function (a) {
    var d = {};
    for (var b = 0; b < this.length; b++) {
        for (var c = 0; c < this.length; c++) {
            if (a(this[b]) > a(this[c])) {
                d = this[c];
                this[c] = this[b];
                this[b] = d
            }
        }
    }
    return this
};
String.prototype.trimStart = function (a) {
    a = a ? a : " ";
    var b = this;
    while (true) {
        if (b.substr(0, a.length) != a) {
            break
        }
        b = b.substr(a.length)
    }
    return b.toString()
};
String.prototype.trimEnd = function (a) {
    a = a ? a : " ";
    var b = this;
    while (true) {
        if (b.substr(b.length - a.length, a.length) != a) {
            break
        }
        b = b.substr(0, b.length - a.length)
    }
    return b.toString()
};
String.prototype.trim = function (a) {
    a = a ? a : " ";
    return this.trimStart(a).trimEnd(a).toString()
};
String.prototype.toUpperChar = function () {
    return this.substr(0, 1).toUpperCase() + this.substr(1)
};
String.prototype.startWith = function (a) {
    var b = new RegExp("^" + a);
    return b.test(this)
};
String.prototype.endWith = function (a) {
    var b = new RegExp(a + "$");
    return b.test(this)
};
String.prototype.qoute = function () {
    if (!this || this.length == 0) {
        return ""
    }
    return this.replace(/&#39;/ig, "'").replace(/&quot;/ig, '"').replace(/&amp;/ig, "&")
};
String.isNullOrWhitespace = function (a) {
    return a == undefined || a == null || a == ""
};
Number.prototype.toFixed = function (e) {
    if (e > 20 || e < 0) {
        throw new RangeError("toFixed() digits argument must be between 0 and 20")
    }
    if (typeof (differ) === "number" && Math.abs(differ) < (+("0." + "00000000000000000000".substring(0, e) + "5"))) {
        return "0." + "00000000000000000000".substring(0, e)
    }
    var l = this;
    if (isNaN(l) || l >= Math.pow(10, 21)) {
        return l.toString()
    }
    if (typeof (e) == "undefined" || e == 0) {
        return (Math.round(l)).toString()
    }
    var k = l.toString();
    var c = k.split(".");
    if (c.length < 2) {
        k += ".";
        for (var b = 0; b < e; b += 1) {
            k += "0"
        }
        return k
    }
    var a = c[0];
    var f = c[1];
    if (f.length == e) {
        return k
    }
    if (f.length < e) {
        for (var b = 0; b < e - f.length; b += 1) {
            k += "0"
        }
        return k
    }
    k = a + "." + f.substr(0, e);
    var d = f.substr(e, 1);
    if (parseInt(d, 10) >= 5) {
        var g = Math.pow(10, e);
        var j = parseFloat(k) * g;
        var h = j >= 0 ? 1 : -1;
        k = (Math.round((j)) + h) / g;
        k = k.toFixed(e)
    }
    return k
};
var LangModule = {
    Common: "",
    Org: "Org",
    BD: "BD",
    IV: "IV",
    Acct: "Act",
    Bank: "Bnk",
    User: "Usr",
    Contact: "Ctc",
    Report: "Rpt",
    My: "My",
    Login: "Lg",
    Docs: "Doc",
    PA: "PA",
    GL: "GL",
    FP: "FP",
    FA: "FA"
};
var HtmlLang = {
    Write: function (d, e, c) {
        var a = 1;
        switch (d) {
            case LangModule.Common:
                a = 1;
                break;
            case LangModule.Org:
                a = 2;
                break;
            case LangModule.BD:
                a = 3;
                break;
            case LangModule.IV:
                a = 4;
                break;
            case LangModule.Acct:
                a = 5;
                break;
            case LangModule.Bank:
                a = 6;
                break;
            case LangModule.User:
                a = 7;
                break;
            case LangModule.Contact:
                a = 8;
                break;
            case LangModule.Report:
                a = 9;
                break;
            case LangModule.My:
                a = 10;
                break;
            case LangModule.Login:
                a = 11;
                break;
            case LangModule.Docs:
                a = 12;
                break;
            case LangModule.PA:
                a = 13;
                break;
            case LangModule.GL:
                a = 14;
                break;
            case LangModule.FP:
                a = 15;
                break;
            case LangModule.FA:
                a = 16;
                break
        }
        var b = LangKey[d + e];
        if (!b) {
            return c
        }
        return b
    }
};
var mObject = window.mObject || {};
mObject.setPropertyValue = function (b, c, a) {
    b = b || {};
    b[c] = a;
    return b
};
mObject.getPropertyValue = function (a, b) {
    a = a || {};
    return a[b]
};
mObject.hasOwnProperty = function (a, b) {
    return a.hasOwnProperty(b)
};
mContext = {
    getContext: function () {
        var c = $("input[type='hidden'][context='1']");
        var a = {};
        for (var b = 0; b < c.length; b++) {
            var d = c.eq(b).val();
            a[c.eq(b).attr("name")] = d
        }
        return a
    }
};
(function (a) {
    a.fn.mask = function (d, c, b) {
        a(this).each(function () {
            if (b !== undefined && b > 0) {
                var e = a(this);
                e.data("_mask_timeout", setTimeout(function () {
                    a.maskElement(e, d, c)
                }, b))
            } else {
                a.maskElement(a(this), d, c)
            }
        })
    };
    a.fn.unmask = function () {
        a(this).each(function () {
            a.unmaskElement(a(this))
        })
    };
    a.fn.isMasked = function () {
        return this.hasClass("masked")
    };
    a.maskElement = function (e, d, b) {
        if (e.data("_mask_timeout") !== undefined) {
            clearTimeout(e.data("_mask_timeout"));
            e.removeData("_mask_timeout")
        }
        if (e.isMasked()) {
            a.unmaskElement(e)
        }
        if (e.css("position") == "static") {
            e.addClass("masked-relative")
        }
        e.addClass("masked");
        var c = a('<div class="loadmask"></div>');
        if (navigator.userAgent.toLowerCase().indexOf("msie") > -1) {
            c.height(e.height() + parseInt(e.css("padding-top")) + parseInt(e.css("padding-bottom")));
            c.width(e.width() + parseInt(e.css("padding-left")) + parseInt(e.css("padding-right")))
        }
        if (navigator.userAgent.toLowerCase().indexOf("msie 6") > -1) {
            e.find("select").addClass("masked-hidden")
        }
        e.append(c);
        if (b === false) {
            return false
        }
        if (d) {
            var f = a('<div class="loadmask-msg" style="display:none;"></div>');
            f.append("<div>" + d + "</div>");
            e.append(f);
            f.css("top", Math.round(e.height() / 2 - (f.height() - parseInt(f.css("padding-top")) - parseInt(f.css("padding-bottom"))) / 2) + "px");
            f.css("left", Math.round(e.width() / 2 - (f.width() - parseInt(f.css("padding-left")) - parseInt(f.css("padding-right"))) / 2) + "px");
            f.show()
        } else {
            if (d === "") {
                var f = a('<div class="loadmask-msg-i" style="display:none;"></div>');
                f.append("<div>" + d + "</div>");
                e.append(f);
                f.css("top", Math.round(e.height() / 2 - (f.height() - parseInt(f.css("padding-top")) - parseInt(f.css("padding-bottom"))) / 2) + "px");
                f.css("left", Math.round(e.width() / 2 - (f.width() - parseInt(f.css("padding-left")) - parseInt(f.css("padding-right"))) / 2) + "px");
                f.show()
            }
        }
    };
    a.unmaskElement = function (b) {
        if (b.data("_mask_timeout") !== undefined) {
            clearTimeout(b.data("_mask_timeout"));
            b.removeData("_mask_timeout")
        }
        b.find(".loadmask-msg,.loadmask,.loadmask-msg-i").remove();
        b.removeClass("masked");
        !b.is("body") && b.removeClass("masked-relative");
        b.find("select").removeClass("masked-hidden")
    }
})(jQuery);
(function (c) {
    var e = window.document;
    var b = window;
    var d = $("iframe", top.$(".m-tab-content:visible"))[0];
    if (window.parent !== top.window) {
        e = d.contentWindow.document;
        b = d.contentWindow
    }
    c.alerts = {
        verticalOffset: -75,
        horizontalOffset: 0,
        repositionOnResize: true,
        overlayOpacity: 0.5,
        overlayOpacity2nd: 0.4,
        overlayColor: "#000",
        draggable: true,
        okButton: LangKey.OK,
        contactButton: LangKey.ContactUs,
        cancelButton: LangKey.Cancel,
        yesButton: LangKey.Yes,
        noButton: LangKey.No,
        cancelConfirm: LangKey.CancelConfirm,
        dialogClass: null,
        built: function (f, g, i, a) {
            c.alerts._show(i, f, null, "built", function (j) {
                if (g) {
                    g(j)
                }
            }, null, null, null, null, true, a)
        },
        alert: function (i, j, k, a, g) {
            c.alerts._show(k, i, null, "alert", function (f) {
                if (j) {
                    j(f)
                }
            }, null, null, null, null, a, g)
        },
        confirm: function (g, i, j, f, a) {
            if (i == null) {
                i = "Are you sure"
            }
            c.alerts._show(i, g, null, "confirm", function (k) {
                if (j) {
                    j(k)
                }
            }, null, null, null, null, f, a)
        },
        prompt: function (f, g, i, j, a) {
            if (i == null) {
                i = "Please enter something"
            }
            c.alerts._show(i, f, g, "prompt", function (k) {
                if (j) {
                    j(k)
                }
            }, null, null, null, null, false, a)
        },
        openBox: function (o, p, k, l, n, m, a, j) {
            if (p == null) {
                p = "Information"
            }
            c.alerts._show(p, o, null, "openBox", function (f) {
                if (a) {
                    a(f)
                }
            }, k, l, n, m, false, j)
        },
        overAlert: function (f, a) {
            c.alerts._overShow(f, a)
        },
        _overShow: function (g, f) {
            if (f == null) {
                f = 3000
            }
            var a = f + 600;
            c("body", e).append('<div id="over_container" style="display:none"><div id="over_message"></div></div>');
            c("#over_message", e).html(g.replace(/\\n/g, "<br />"));
            if (c.alerts.dialogClass) {
                c("#over_container", e).addClass(c.alerts.dialogClass)
            }
            var i = (c.browser.msie && parseInt(c.browser.version) <= 6) ? "absolute" : "fixed";
            c("#over_container", e).css({
                position: i,
                zIndex: 9999999,
                width: 350,
                padding: 0,
                margin: 0
            }).show("fast");
            c("#over_container", e).css({
                minWidth: c("#over_container", e).outerWidth(),
                maxWidth: c("#over_container", e).outerWidth()
            });
            c.alerts._overReposition();
            setTimeout(function () {
                c("#over_container", e).hide("fast")
            }, f);
            setTimeout(function () {
                c("#over_container", e).remove()
            }, a)
        },
        _overReposition: function () {
            var f = 4;
            f = ((c(b).height() / 2) - (c("#over_container", e).outerHeight() / 2)) + c.alerts.verticalOffset;
            var a = ((c(b).width() / 2) - (c("#over_container", e).outerWidth() / 2)) + c.alerts.horizontalOffset;
            if (f < 0) {
                f = 0
            }
            if (a < 0) {
                a = 0
            }
            if (c.browser.msie && parseInt(c.browser.version) <= 6) {
                f = f + c(b).scrollTop()
            }
            if (c.browser.msie && parseInt(c.browser.version) <= 6) {
                a = a - 175
            }
            c("#over_container", e).css({
                top: f + "px",
                left: a + "px"
            });
            c("#popup_overlay", e).height(c(e).height())
        },
        _show: function (p, v, q, A, s, r, w, z, t, a, u) {
            c.alerts._hide();
            c.alerts._overlay("show");
            c("body", e).append('<div id="popup_container" style="display:none"><div id="popup_title">&nbsp;</div><div id="popup_content"><div id="popup_message"></div></div></div>');
            if (c.alerts.dialogClass) {
                c("#popup_container", e).addClass(c.alerts.dialogClass)
            }
            var o = (c.browser.msie && parseInt(c.browser.version) <= 6) ? "absolute" : "fixed";
            c("#popup_container", e).css({
                position: o,
                zIndex: 9999999,
                padding: 0,
                margin: 0
            }).show();
            c("#popup_content", e).addClass(A);
            if (A != "openBox") {
                c("#popup_message", e).html(v.replace(/\\n/g, "<br />"))
            }
            c("#popup_container", e).css({});
            c.alerts._reposition();
            c.alerts._maintainPosition(true);
            switch (A) {
                case "built":
                    c("#popup_message", e).after('<div id="popup_panel"><input type="button" class="easyui-linkbutton easyui-linkbutton-yellow" value="' + c.alerts.contactButton + '" id="popup_ok" /><input class="easyui-linkbutton m-btn-s" type="button" value="' + c.alerts.cancelButton + '" id="popup_cancel" /></div>');
                    c("#popup_ok", e).click(function (f) {
                        c.alerts._hide();
                        s(true);
                        f.stopPropagation();
                        return false
                    });
                    c("#popup_cancel", e).click(function (f) {
                        c.alerts._hide();
                        if (s) {
                            s(false)
                        }
                        f.stopPropagation();
                        return false
                    });
                    c("#popup_ok, #popup_cancel", e).keypress(function (f) {
                        if (f.keyCode == 13) {
                            c("#popup_ok", e).trigger("click")
                        }
                        if (f.keyCode == 27) {
                            c("#popup_cancel", e).trigger("click")
                        }
                    });
                    break;
                case "alert":
                    c("#popup_message", e).after('<div id="popup_panel"><input type="button" class="easyui-linkbutton easyui-linkbutton-yellow" value="' + c.alerts.okButton + '" id="popup_ok" /></div>');
                    c("#popup_ok", e).click(function (f) {
                        c.alerts._hide();
                        s(true);
                        f.stopPropagation();
                        return false
                    });
                    c("#popup_ok", e).focus().keypress(function (f) {
                        if (f.keyCode == 13 || f.keyCode == 27) {
                            c("#popup_ok", e).trigger("click")
                        }
                    });
                    switch (p) {
                        case 0:
                            break;
                        case 1:
                            c("#popup_content", e).removeClass(A).addClass("warning");
                            break;
                        case 2:
                            c("#popup_content", e).removeClass(A).addClass("error");
                            break;
                        default:
                            break
                    }
                    break;
                case "confirm":
                    c("#popup_message", e).after('<div id="popup_panel"><input class="easyui-linkbutton easyui-linkbutton-yellow" type="button" value="' + c.alerts.yesButton + '" id="popup_ok" /> ' + (a ? '<a id="popup_think" >  ' + c.alerts.cancelConfirm + " </a>" : " ") + '<input class="easyui-linkbutton m-btn-s" type="button" value="' + c.alerts.noButton + '" id="popup_cancel" /></div>');
                    c("#popup_ok", e).click(function (f) {
                        c.alerts._hide();
                        if (s) {
                            s(true)
                        }
                        f.stopPropagation();
                        return false
                    });
                    c("#popup_think", e).click(function (f) {
                        c.alerts._hide();
                        f.stopPropagation();
                        return false
                    });
                    c("#popup_cancel", e).click(function (f) {
                        c.alerts._hide();
                        if (s) {
                            s(false)
                        }
                        f.stopPropagation();
                        return false
                    });
                    c("#popup_ok", e).focus();
                    c("#popup_ok, #popup_cancel", e).keypress(function (f) {
                        if (f.keyCode == 13) {
                            c("#popup_ok", e).trigger("click")
                        }
                        if (f.keyCode == 27) {
                            c("#popup_cancel", e).trigger("click")
                        }
                        f.stopPropagation();
                        return false
                    });
                    break;
                case "prompt":
                    c("#popup_message", e).append('<br /><input type="text" size="30" id="popup_prompt" />').after('<div id="popup_panel"><input type="button" value="' + c.alerts.okButton + '" id="popup_ok" /> <input type="button" value="' + c.alerts.cancelButton + '" id="popup_cancel" /></div>');
                    c("#popup_prompt", e).width(c("#popup_message").width() - 10);
                    c("#popup_ok", e).click(function (f) {
                        var f = c("#popup_prompt", e).val();
                        c.alerts._hide();
                        if (s) {
                            s(f)
                        }
                        f.stopPropagation();
                        return false
                    });
                    c("#popup_cancel", e).click(function (f) {
                        c.alerts._hide();
                        if (s) {
                            s(null)
                        }
                        f.stopPropagation();
                        return false
                    });
                    c("#popup_prompt, #popup_ok, #popup_cancel", e).keypress(function (f) {
                        if (f.keyCode == 13) {
                            c("#popup_ok", e).trigger("click")
                        }
                        if (h.keyCode == 27) {
                            c("#popup_cancel", e).trigger("click")
                        }
                        f.stopPropagation();
                        return false
                    });
                    if (q) {
                        c("#popup_prompt", e).val(q)
                    }
                    c("#popup_prompt", e).focus().select();
                    break;
                case "openBox":
                    c("#popup_message", e).append(c(v).html());
                    if (r) {
                        c("#popup_container", e).css({
                            width: r + "px"
                        })
                    }
                    if (w) {
                        c("#popup_container", e).css({
                            height: w + "px"
                        });
                        c("#popup_message", e).css({
                            height: (w - 48) + "px"
                        })
                    }
                    c.alerts._reposition();
                    if (z) {
                        c(z).click(function (f) {
                            c.alerts._hide();
                            if (s) {
                                s(true)
                            }
                            f.stopPropagation();
                            return false
                        })
                    }
                    if (t) {
                        c(t).click(function (f) {
                            c.alerts._hide();
                            return false;
                            if (s) {
                                s(false)
                            }
                            f.stopPropagation();
                            return false
                        })
                    }
                    break
            }
            if (u) {
                c("#popup_message", e).css("cssText", "text-align:left!important")
            }
            c("#popup_close", e).click(function (f) {
                c.alerts._hide();
                if (s) {
                    s()
                }
                f.stopPropagation();
                return false
            });
            if (c.alerts.draggable) {
                try {
                    c("#popup_container", e).draggable({
                        handle: c("#popup_title", e)
                    });
                    c("#popup_title", e).css({
                        cursor: "move"
                    })
                } catch (y) { }
            }
        },
        _hide: function () {
            c("#popup_container", e).remove();
            c.alerts._overlay("hide");
            c.alerts._maintainPosition(false)
        },
        _overlay: function (a) {
            switch (a) {
                case "show":
                    c.alerts._overlay("hide");
                    c("BODY", e).append('<div id="popup_overlay"></div>');
                    c("#popup_overlay", e).css({
                        position: "absolute",
                        zIndex: 9999998,
                        top: "0px",
                        left: "0px",
                        width: "100%",
                        height: c(e).height(),
                        background: c.alerts.overlayColor,
                        opacity: ($("#XYTipsWindowBg", parent.document).is(":visible") ? c.alerts.overlayOpacity2nd : c.alerts.overlayOpacity)
                    });
                    break;
                case "hide":
                    c("#popup_overlay", e).remove();
                    break
            }
        },
        _reposition: function () {
            var f = ((c(b).height() / 2) - (c("#popup_container", e).height() / 2)) + c.alerts.verticalOffset;
            var a = ((c(b).width() / 2) - (c("#popup_container", e).width() / 2)) + c.alerts.horizontalOffset;
            if (f < 0) {
                f = 0
            }
            if (a < 0) {
                a = 0
            }
            if (c.browser.msie && parseInt(c.browser.version) <= 6) {
                f = f + c(b).scrollTop()
            }
            c("#popup_container", e).css({
                top: f + "px",
                left: a + "px"
            });
            c("#popup_overlay", e).height(c(e).height())
        },
        _maintainPosition: function (a) {
            if (c.alerts.repositionOnResize) {
                switch (a) {
                    case true:
                        c(b).bind("resize", c.alerts._reposition);
                        break;
                    case false:
                        c(b).unbind("resize", c.alerts._reposition);
                        break
                }
            }
        }
    };
    hiBuilt = function (f, g, i, a) {
        c.alerts.built(f, g, i, a)
    };
    hiAlert = function (f, g, i, a) {
        c.alerts.alert(f, g, i, undefined, a)
    };
    hiConfirm = function (g, i, j, f, a) {
        c.alerts.confirm(g, i, j, f, a)
    };
    hiPrompt = function (f, g, i, j, a) {
        c.alerts.prompt(f, g, i, j, a)
    };
    hiBox = function (o, p, k, l, n, m, a, j) {
        c.alerts.openBox(o, p, k, l, n, m, a, j)
    };
    hiOverAlert = function (f, a) {
        c.alerts.overAlert(f, a)
    }
})(jQuery);
(function () {
    $.XYTipsWindow = function (e) {
        defaults = $.extend({
            mTitle: "",
            mBoxID: d(10),
            mContent: "text:内容",
            mWidth: $(window).width(),
            mHeight: $(window).height() - 50 - 4,
            mTitleClass: "boxTitle",
            mCloseID: "",
            mTriggerID: "",
            mBoxBdColor: "#E9F3FD",
            mBoxBdOpacity: "1",
            mBoxWrapBdColor: "#A6C9E1",
            mWindowBgColor: "#000000",
            mWindowBgOpacity: "0.5",
            mTime: "",
            mDrag: "",
            mDragBoxOpacity: "1",
            mShowTitle: true,
            mShowBoxbg: true,
            mShowbg: true,
            mOffsets: "",
            mButton: "",
            mOpenCallback: function () { },
            mCloseCallback: function () { },
            mCallback: function () { },
            mMax: true,
            mFns: function () { },
            mLoaded: function () { },
            mPostData: null
        }, e);
        $.XYTipsWindow.init(defaults);
        $.XYTipsWindow.options = defaults
    };
    var b, a = !-[1,] && !window.XMLHttpRequest;
    var c = new Array();
    var d = function (e) {
        var h = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        for (var f = 0, g = ""; f < e; f++) {
            g += h.charAt(Math.floor(Math.random() * 62))
        }
        return g
    };
    $.extend($.XYTipsWindow, {
        init: function (e) {
            e.zIndexScale = e.mContent.substring(0, e.mContent.indexOf(":")) == "id" ? 10 : 1;
            e.divFrame = e.mContent.substring(0, e.mContent.indexOf(":")) == "id";
            b = e;
            if ($("#" + e.mBoxID).length > 0) {
                return false
            }
            var g = $("#" + e.mBoxID);
            $.XYTipsWindow.showBox(e);
            $(".mCloseBox", g).die().live("click", function () {
                return $.XYTipsWindow.closeBox(e)
            }).css({
                zIndex: Math.round(870618 / e.zIndexScale).toString()
            });
            $(".mMaxBox", g).die().live("click", function () {
                $.XYTipsWindow.maxBox()
            }).css({
                zIndex: Math.round(870618 / e.zIndexScale).toString()
            });
            $(".mMinBox", g).die().live("click", function () {
                $.XYTipsWindow.minBox()
            }).css({
                zIndex: Math.round(870618 / e.zIndexScale).toString()
            });
            $(".boxTitle", g).die().live("dblclick", function () {
                if (e.mMax) {
                    if ($("#" + e.mBoxID).data("data")) {
                        $.XYTipsWindow.minBox()
                    } else {
                        $.XYTipsWindow.maxBox()
                    }
                }
            });
            if (e.mCloseID != "") {
                $("#" + e.mCloseID, g).die().live("click", function () {
                    $.XYTipsWindow.removeBox()
                })
            }
            if (e.mTime != "") {
                setTimeout($.XYTipsWindow.removeBox, e.mTime)
            }
            if (e.mShowbg != "" && e.mShowbg == true) {
                var f = '<div id="XYTipsWindowBg" boxid="' + e.mBoxID + '" style="position:absolute;overflow:hidden;height:' + $(document).height() + "px;background:" + e.mWindowBgColor + ";filter:alpha(opacity=0);opacity:0;width:100%;left:0;top:0;z-index:" + Math.round(870618 / e.zIndexScale) + '"><iframe src="about:blank" style="width=100%;height:' + ($(document).height()) + "px;filter:alpha(opacity=0);opacity:0;scrolling=no;z-index:" + Math.round(870610 / e.zIndexScale) + '"></iframe></div>';
                $(f).appendTo("body").animate({
                    opacity: e.mWindowBgOpacity
                }, 200)
            }
            if (e.mFns != "" && $.isFunction(e.mFns)) {
                e.mFns.call(this)
            }
            $.XYTipsWindow.contentBox(e);
            if (e.mDrag != "") {
                $.XYTipsWindow.dragBox(e)
            }
            if (e.mButton != "") {
                $.XYTipsWindow.ask(e)
            }
            $.XYTipsWindow.keyDown(e);
            $.XYTipsWindow.setBoxzIndex(e);
            if (e.mShowbg != true) {
                $("#" + e.mBoxID).addClass("shadow")
            }
            $("#" + e.mBoxID).die().live("mouseenter", function () {
                b = e
            });
            $(document).off("click.top", "#XYTipsWindowBg").on("click.top", "#XYTipsWindowBg", function (h) {
                h = h || window.event || arguments.callee.caller.arguments[0];
                if (h.stopPropagation) {
                    h.stopPropagation()
                } else {
                    if (window.event) {
                        window.event.cancelBubble = true
                    }
                }
                return false
            });
            e.mOpenCallback && $.isFunction(e.mOpenCallback) && e.mOpenCallback()
        },
        getID: function () {
            return thisID = b.mBoxID
        },
        closeBox: function (f) {
            f = f || $.XYTipsWindow.options;
            var g = $(".XYTipsWindow");
            var j = g.attr("index") || 0,
                k = g.attr("param_" + j);
            if (k && k.length > 0 && k.startWith("{") && k.endWith("}")) {
                k = JSON.parse(k)
            }
            try {
                if (f.mCloseCallback) {
                    var h = $.isArray(f.mCloseCallback) ? (f.mCloseCallback[j ? j : 0]) : f.mCloseCallback;
                    $.isFunction(h) ? h(k) : ""
                }
            } catch (i) { } finally {
                $.XYTipsWindow.removeBox()
            }
        },
        callback: function (e) {
            e = e || $.XYTipsWindow.options;
            e.mCallback && $.isFunction(e.mCallback) && e.mCallback()
        },
        handlePanrentTile: function (h, g) {
            var e = $(".XYTipsWindow", window.document);
            if (e.length > 1) {
                e = $(".XYTipsWindow:not([id='" + g + "'])", window.document)
            }
            if (e.length > 0 && e.attr("divframe") == "1" && e.attr("id") != g) {
                if (h === true && $(".mMaxBox", e).is(":visible")) {
                    window.$.XYTipsWindow.maxBox();
                    return $(".mCloseBox", window.document).attr("boxid")
                } else {
                    if (h === false && $(".mMinBox", $(".XYTipsWindow", window.document)).is(":visible")) {
                        window.$.XYTipsWindow.minBox(e.attr("parentid"));
                        e.parent().siblings(".XYTipsWindowBg").css({
                            "z-index": "70618"
                        })
                    }
                }
                return
            }
            var f = $(".XYTipsWindow", window.parent.document);
            if (f.length > 0) {
                if (h === true && $(".mMaxBox", f).is(":visible")) {
                    window.parent.window.$.XYTipsWindow.maxBox();
                    return $(".mCloseBox", window.parent.document).attr("boxid")
                } else {
                    if (h === false && $(".mMinBox", f).is(":visible")) {
                        window.parent.window.$.XYTipsWindow.minBox()
                    }
                }
            }
        },
        showBox: function (r) {
            var y = $.XYTipsWindow.handlePanrentTile(true);
            var h = r.mHeight;
            if (h != undefined && window != top) {
                var A = $(".m-main", parent.document).height() || $(".mBoxContent", parent.document).height();
                var w = A - 55;
                if (w > 0) {
                    r.mHeight = Math.min(w, r.mHeight)
                }
            }
            var G = r.mShowTitle ? 50 : 0,
                B = 0;
            $boxDialogHeight = r.mButton != "" ? 45 : 0;
            var u = $(window).height() - 4;
            var F = $(window).width();
            $boxDialogBorder = 0;
            var J = parseInt(r.mWidth),
                x = parseInt(r.mHeight);
            var e = '<div id="' + r.mBoxID + '" class="XYTipsWindow" divframe= "' + (r.divFrame ? "1" : "0") + '" parentid="' + y + '">';
            e += '<div class="mBoxWrap">';
            e += '<div class="mBoxTitle"><h3></h3><span class="mMaxBox">最大化</span><span class="mMinBox"  style="display:none;">最小化</span><span class="mCloseBox"  boxID="' + r.mBoxID + '" parentid="' + y + '">关闭</span></div>';
            e += '<div class="mBoxContent"></div>';
            e += '<div class="mBoxDialog"></div>';
            e += "</div>";
            e += '<div class="mBoxBd m-box-bd"></div>';
            e += '<iframe src="about:blank" style="position:absolute;left:0;top:0;filter:alpha(opacity=0);opacity:0;scrolling=no;z-index:' + Math.round(10714 / r.zIndexScale) + '"></iframe>';
            e += "</div>";
            $(e).appendTo("body");
            if (!r.mMax || (u == r.mHeight + G && F == r.mWidth)) {
                $(".mMaxBox,.mMinBox").hide()
            }
            var K = $("#" + r.mBoxID);
            K.css({
                position: "relative",
                width: J + "px",
                height: x + G + B + $boxDialogHeight + "px",
                zIndex: Math.round(891208 / r.zIndexScale).toString()
            });
            var l = $("iframe", K);
            l.css({
                width: J + "px",
                height: x + G + B + $boxDialogHeight + "px"
            });
            var v = $(".mBoxWrap", K);
            v.css({
                position: "relative",
                top: "4px",
                margin: "0 auto",
                width: J + "px",
                "border-radius": "3px",
                height: x + G + $boxDialogHeight + "px",
                overflow: "hidden",
                zIndex: Math.round(20590 / r.zIndexScale).toString(),
                border: r.mShowTitle ? "0px" : "border: 1px solid #ccc;"
            });
            var j = $(".mBoxContent", K);
            j.css({
                position: "relative",
                width: J + "px",
                height: x + "px",
                padding: "0px",
                borderWidth: "0px",
                borderStyle: "solid",
                borderColor: r.mBoxWrapBdColor,
                overflow: "auto",
                backgroundColor: "#fff"
            });
            var t = $(".mBoxDialog", K);
            t.css({
                width: J + "px",
                height: $boxDialogHeight + "px",
                borderWidth: $boxDialogBorder + "px",
                borderStyle: "solid",
                borderColor: r.mBoxWrapBdColor,
                borderTop: "none",
                textAlign: "right"
            });
            var s = $(".mBoxBd", K);
            s.css({
                position: "absolute",
                width: J + "px",
                height: x + G + B + $boxDialogHeight + "px",
                left: "0px",
                top: "0",
                "border-radius": "6px",
                opacity: r.mBoxBdOpacity,
                zIndex: Math.round(10715 / r.zIndexScale).toString()
            });
            var i = $(".mBoxTitle>h3", K);
            i.html(r.mTitle);
            i.parent().css({
                position: "relative",
                width: (J) + "px"
            });
            if (r.mTitleClass != "") {
                i.parent().addClass(r.mTitleClass);
                i.parent().find("span").hover(function () {
                    $(this).addClass("hover")
                }, function () {
                    $(this).removeClass("hover")
                })
            }
            if (r.mShowTitle != true) {
                $(".mBoxTitle", K).remove()
            }
            if (r.mShowBoxbg != true) {
                $(".mBoxBd", K).remove();
                K.css({
                    width: J + "px",
                    height: x + G + $boxDialogHeight + "px"
                });
                v.css({
                    left: "0",
                    top: "0"
                })
            }
            var E = -1;
            $.XYTipsWindow.getDomPosition(r);
            var L = r.mOffsets;
            var m = $('<div id="' + r.mBoxID + 'parent"></div>');
            var I = a ? (r.mTriggerID != "" ? 0 : document.documentElement.scrollTop) : "";
            if (r.mOffsets == "" || r.mOffsets.constructor == String) {
                switch (L) {
                    case ("left-top"):
                        L = {
                            left: "0px",
                            top: "0px" + I
                        };
                        E = 0;
                        break;
                    case ("left-bottom"):
                        L = {
                            left: "0px",
                            bottom: "0px"
                        };
                        break;
                    case ("right-top"):
                        L = {
                            right: "0px",
                            top: "0px" + I
                        };
                        E = 0;
                        break;
                    case ("right-bottom"):
                        L = {
                            right: "0px",
                            bottom: "0px"
                        };
                        break;
                    case ("middle-top"):
                        L = {
                            left: "50%",
                            marginLeft: -parseInt(K.width() / 2) + "px",
                            top: "0px" + I
                        };
                        E = 0;
                        break;
                    case ("middle-bottom"):
                        L = {
                            left: "50%",
                            marginLeft: -parseInt(K.width() / 2) + "px",
                            bottom: "0px"
                        };
                        break;
                    case ("left-middle"):
                        L = {
                            left: "0px",
                            top: "50%" + I,
                            marginTop: -parseInt(K.height() / 2) + "px" + I
                        };
                        E = $getPageSize[1] / 2 - K.height() / 2;
                        break;
                    case ("right-middle"):
                        L = {
                            right: "0px",
                            top: "50%" + I,
                            marginTop: -parseInt(K.height() / 2) + "px" + I
                        };
                        E = $getPageSize[1] / 2 - K.height() / 2;
                        break;
                    default:
                        L = {
                            left: "50%",
                            marginLeft: -parseInt(K.width() / 2) + "px",
                            top: "50%" + I,
                            marginTop: -parseInt((K.height() + 4) / 2) + "px" + I
                        };
                        E = $getPageSize[1] / 2 - K.height() / 2;
                        break
                }
            } else {
                var n = L.top;
                L.top = L.top + I;
                if (typeof (n) != "undefined") {
                    n = n.replace("px", "");
                    E = n
                }
            }
            if (r.mTriggerID != "") {
                var f = $("#" + r.mTriggerID).offset();
                var g = $("#" + r.mTriggerID).outerWidth(),
                    k = $("#" + r.mTriggerID).outerHeight();
                var z = f.left,
                    H = f.top;
                var D = L.left,
                    C = L.top;
                if (typeof (D) != "undefined" || typeof (C) != "undefined") {
                    D = parseInt(D.replace("px", ""));
                    C = parseInt(C.replace("px", ""))
                }
                var p = D >= 0 ? parseInt(D) + z : parseInt(D) + z - $getPageSize[2];
                var q = C >= 0 ? parseInt(C) + H : parseInt(C) + H - $getPageSize[3];
                L = {
                    left: p + "px",
                    top: q + "px"
                }
            }
            if (a) {
                if (r.mTriggerID == "") {
                    if (E >= 0) {
                        $.XYTipsWindow.addStyle(".ui_fixed_" + r.mBoxID + "{width:100%;height:100%;position:absolute;left:expression(documentElement.scrollLeft+documentElement.clientWidth-this.offsetWidth);top:expression(documentElement.scrollTop+" + E + ")}");
                        m = $('<div class="' + r.mBoxID + 'IE6FIXED" id="' + r.mBoxID + 'parent"></div>');
                        K.appendTo(m);
                        $("body").append(m);
                        $("." + r.mBoxID + "IE6FIXED").css(L).css({
                            position: "absolute",
                            width: J + 12 + "px",
                            height: x + G + B + $boxDialogHeight + "px",
                            zIndex: "891208"
                        }).addClass("ui_fixed_" + r.mBoxID)
                    } else {
                        $.XYTipsWindow.addStyle(".ui_fixed2_" + r.mBoxID + "{width:100%;height:100%;position:absolute;left:expression(documentElement.scrollLeft+documentElement.clientWidth-this.offsetWidth);top:expression(documentElement.scrollTop+documentElement.clientHeight-this.offsetHeight)}");
                        m = $('<div class="' + r.mBoxID + 'IE6FIXED"  id="' + r.mBoxID + 'parent"></div>');
                        K.appendTo(m);
                        $("body").append(m);
                        $("." + r.mBoxID + "IE6FIXED").css(L).css({
                            position: "absolute",
                            width: J + 12 + "px",
                            height: x + G + B + $boxDialogHeight + "px",
                            zIndex: "891208"
                        }).addClass("ui_fixed2_" + r.mBoxID)
                    }
                    $("body").css("background-attachment", "fixed").css("background-image", "url(n1othing.txt)")
                } else {
                    m.css({
                        position: "absolute",
                        left: p + "px",
                        top: q + "px",
                        width: J + 12 + "px",
                        height: x + G + B + $boxDialogHeight + "px",
                        zIndex: "891208"
                    })
                }
            } else {
                m.css(L).css({
                    position: "fixed",
                    width: J + "px",
                    height: x + G + B + $boxDialogHeight + "px",
                    zIndex: Math.round(891208 / r.zIndexScale).toString()
                });
                if (r.mTriggerID != "") {
                    m.css({
                        position: "absolute"
                    })
                }
                $("body").append(m);
                K.appendTo(m)
            }
        },
        contentBox: function (f) {
            var j = $("#" + f.mBoxID);
            var e = parseInt(f.mWidth),
                h = parseInt(f.mHeight);
            var i = $(".mBoxContent", j);
            $contentType = f.mContent.substring(0, f.mContent.indexOf(":"));
            $content = f.mContent.substring(f.mContent.indexOf(":") + 1, f.mContent.length);
            $content = $content && ($contentType == "url" || $contentType == "iframe") ? Megi.addTabTitle($content, f.mTitle) : $content;
            $.ajaxSetup({
                global: false
            });
            switch ($contentType) {
                case "text":
                    i.html($content);
                    break;
                case "id":
                    $("#" + $content).children().appendTo(i);
                    break;
                case "img":
                    $.ajax({
                        beforeSend: function () {
                            i.html("<p class='boxLoading'>loading...</p>")
                        },
                        error: function () {
                            i.html("<p class='boxError'>加载数据出错...</p>")
                        },
                        success: function (k) {
                            i.html("<img src=" + $content + " alt='' />")
                        }
                    });
                    break;
                case "swf":
                    $.ajax({
                        beforeSend: function () {
                            i.html("<p class='boxLoading'>loading...</p>")
                        },
                        error: function () {
                            i.html("<p class='boxError'>加载数据出错...</p>")
                        },
                        success: function (k) {
                            i.html("<div id='" + f.mBoxID + 'swf\'><h1>Alternative content</h1><p><a href="http://www.adobe.com/go/getflashplayer"><img src="http://www.adobe.com/images/shared/download_buttons/get_flash_player.gif" alt="Get Adobe Flash player" /></a></p></div><script type="text/javascript" src="swfobject.js" ></script><script type="text/javascript">swfobject.embedSWF(\'' + $content + "', '" + f.mBoxID + "swf', '" + e + "', '" + h + "', '9.0.0', 'expressInstall.swf');</script>");
                            $("#" + f.mBoxID + "swf").css({
                                position: "absolute",
                                left: "0",
                                top: "0",
                                textAlign: "center"
                            })
                        }
                    });
                    break;
                case "url":
                    var g = $content.split("?");
                    $.ajax({
                        beforeSend: function () {
                            i.html("<p class='boxLoading'>loading...</p>")
                        },
                        type: g[0],
                        url: g[1],
                        data: g[2],
                        error: function () {
                            i.html("<p class='boxError'><em></em><span>加载数据出错...</span></p>")
                        },
                        success: function (k) {
                            i.html(k)
                        }
                    });
                    break;
                case "iframe":
                    i.css({
                        overflowY: "hidden"
                    });
                    $.ajax({
                        beforeSend: function () {
                            i.html("<p class='boxLoading'>loading...</p>")
                        },
                        error: function () {
                            i.html("<p class='boxError'>加载数据出错...</p>")
                        },
                        success: function (n) {
                            var o = Math.random();
                            if (f.mPostData) {
                                i.html("<iframe id='" + o + "' name='" + o + '\'  width="100%" height="' + parseInt(f.mHeight) + 'px" scrolling="auto" frameborder="0" marginheight="0" marginwidth="0"></iframe>');
                                var l = $("<form id='f_" + o + "'></form>");
                                l.attr("action", $content);
                                l.attr("method", "post");
                                l.attr("target", o);
                                for (var p in f.mPostData) {
                                    var m = $("<input type='hidden' name='" + p + "'/>");
                                    m.attr("value", f.mPostData[p]);
                                    l.append(m)
                                }
                                i.append(l);
                                l.submit()
                            } else {
                                i.html("<iframe id='" + o + "' name='" + o + "' src=\"" + $content + '" width="100%" height="' + parseInt(f.mHeight) + 'px" scrolling="auto" frameborder="0" marginheight="0" marginwidth="0"></iframe>')
                            }
                            var k = $("body").find("iframe[id='" + o + "']");
                            $(k).load(function () {
                                if (f.mLoaded) {
                                    f.mLoaded(this)
                                }
                            })
                        }
                    })
            }
        },
        ask: function (h) {
            var l = $("#" + h.mBoxID);
            $boxDialog = $(".mBoxDialog", l);
            if (h.mButton != "") {
                var g = {},
                    f = [];
                if (h.mButton instanceof Array) {
                    for (var e = 0; e < h.mButton.length; e++) {
                        g[h.mButton[e]] = h.mButton[e];
                        f.push(h.mButton[e])
                    }
                } else {
                    for (var j in h.mButton) {
                        g[h.mButton[j]] = j;
                        f.push(h.mButton[j])
                    }
                }
                $boxDialog.html($.map(f, function (i) {
                    return "<input class='dialogBtn' type='button'  value='" + i + "' />"
                }).join(" "));
                $(".dialogBtn", $boxDialog).hover(function () {
                    $(this).addClass("hover")
                }, function () {
                    $(this).removeClass("hover")
                }).click(function () {
                    var i = this;
                    if (h.mCallback != "" && $.isFunction(h.mCallback)) {
                        h.mCallback(g[i.value])
                    }
                    $.XYTipsWindow.removeBox(h)
                })
            }
        },
        getDomPosition: function (j) {
            var m = $("#" + j.mBoxID);
            var g = document.documentElement.clientWidth,
                f = document.documentElement.clientHeight;
            var h = m.outerWidth(),
                i = m.outerHeight();
            var k = m.offset(),
                l = k.left,
                e = k.top;
            $getPageSize = new Array();
            $getPageSize.push(g, f, h, i, l, e)
        },
        setBoxzIndex: function (e) {
            c.push(document.getElementById(e.mBoxID + "parent"));
            var g = "mousedown" || "click";
            var f = $("#" + e.mBoxID + "parent");
            f.die().live("click", function (h) {
                for (var j = 0; j < c.length; j++) {
                    c[j].style.zIndex = Math.round(870618 / e.zIndexScale)
                }
                this.style.zIndex = Math.round(891208 / e.zIndexScale);
                h = h || window.event || arguments.callee.caller.arguments[0];
                if (h.stopPropagation) {
                    h.stopPropagation()
                } else {
                    if (window.event) {
                        window.event.cancelBubble = true
                    }
                }
                return false
            })
        },
        addStyle: function (f) {
            var e = this.style;
            if (!e) {
                e = this.style = document.createElement("style");
                e.setAttribute("type", "text/css");
                document.getElementsByTagName("head")[0].appendChild(e)
            }
            e.styleSheet && (e.styleSheet.cssText += f) || e.appendChild(document.createTextNode(f))
        },
        dragBox: function (e) {
            var g = 0,
                h = 0,
                i = false;
            var f = $("#" + e.mBoxID);
            $Handle = $("." + e.mDrag, f);
            $Handle.mouseover(function () {
                if (e.mTriggerID != "") {
                    $(this).css("cursor", "default")
                } else {
                    $(this).css("cursor", "move")
                }
            });
            $Handle.mousedown(function (j) {
                if (f.data("data")) {
                    return false
                }
                i = e.mTriggerID != "" ? false : true;
                if (e.mDragBoxOpacity) {
                    if (e.mBoxBdOpacity != "1") {
                        f.children("div").css("opacity", e.mDragBoxOpacity);
                        f.children("div.mBoxBd").css("opacity", e.mBoxBdOpacity)
                    } else {
                        f.children("div").css("opacity", e.mDragBoxOpacity)
                    }
                }
                j = window.event ? window.event : j;
                var k = document.getElementById(e.mBoxID);
                g = j.clientX - k.offsetLeft;
                h = j.clientY - k.offsetTop;
                $(document).off("mousemove.xy").on("mousemove.xy", function (n) {
                    if (i) {
                        n = window.event ? window.event : n;
                        window.getSelection ? window.getSelection().removeAllRanges() : document.selection.empty();
                        var m = n.clientX - g;
                        var l = n.clientY - h;
                        $("#XYTipsWindowBg").css({
                            "background-color": "#001"
                        });
                        $.XYTipsWindow.setBoxNewPosition($(k), m, l);
                        $("#XYTipsWindowBg").css({
                            "background-color": "#000"
                        })
                    }
                });
                $(document).off("mouseup.xy").on("mouseup.xy", function () {
                    i = false;
                    if (e.mDragBoxOpacity) {
                        if (e.mBoxBdOpacity != "1") {
                            f.children("div").css("opacity", "1");
                            f.children("div.mBoxBd").css("opacity", e.mBoxBdOpacity)
                        } else {
                            f.children("div").css("opacity", "1")
                        }
                    }
                })
            })
        },
        setBoxNewPosition: function (h, j, f) {
            var o = $(".mBoxTitle", h);
            var p = h.parent();
            var i = p.offset();
            var k = $.mTab.getCurrentIframe().contents();
            var q = k.height();
            var l = k.width();
            var n = -i.top;
            var m = q - i.top - o.height();
            var e = -i.left;
            var g = l - i.left - h.width();
            if (f < n) {
                f = n
            } else {
                if (f > m) {
                    f = m
                }
            }
            if (j < e) {
                j = e
            } else {
                if (j > g) {
                    j = g
                }
            }
            h.css({
                left: j,
                top: f
            })
        },
        removeBox: function () {
            $.XYTipsWindow.handlePanrentTile(false, b.mBoxID);
            var e = $("#" + b.mBoxID);
            var f = $("div[id='XYTipsWindowBg'][boxid='" + b.mBoxID + "']");
            if (e != null || f != null) {
                var g = $(".mBoxContent", e);
                $contentType = b.mContent.substring(0, b.mContent.indexOf(":"));
                $content = b.mContent.substring(b.mContent.indexOf(":") + 1, b.mContent.length);
                if ($contentType == "id") {
                    g.children().appendTo($("#" + $content));
                    e.parent().removeAttr("style").remove();
                    f.animate({
                        opacity: "0"
                    }, 500, function () {
                        $(this).remove()
                    });
                    $("body").css("background", "#fff")
                } else {
                    e.parent().removeAttr("style").remove();
                    f.animate({
                        opacity: "0"
                    }, 500, function () {
                        $(this).remove()
                    });
                    $("body").css("background", "#fff")
                }
            }
        },
        maxBox: function () {
            var g = $(window).height() - 4;
            var f = $(window).width();
            var k = $("#" + b.mBoxID);
            if (k.length == 0) {
                k = $("#" + $(".mCloseBox").attr("boxID"))
            }
            var n = k.parent();
            if (n.width() == f && n.height() == g) {
                return true
            }
            var i = $(".mBoxWrap", k);
            var h = $(".mBoxBd", k);
            var e = $(".boxTitle", i);
            var l = $(".mBoxContent", i);
            var j = $("iframe", l);
            var m = [
                [n.width(), n.height(), n.css("marginLeft"), n.css("marginTop"), n.offset()],
                [k.width(), k.height()],
                [i.width(), i.height()],
                [h.width(), h.height()],
                [e.width()],
                [l.width(), l.height()],
                [j.width(), j.height()]
            ];
            k.data("data", m);
            $(".mMaxBox", e).hide();
            $(".mMinBox", e).show();
            var g = $(window).height() - 4;
            var f = $(window).width();
            n.css({
                top: "0px",
                left: "0px",
                marginLeft: "0px",
                marginTop: "0px",
                height: g + "px",
                width: f + "px"
            });
            k.css({
                top: "0px",
                left: "0px",
                height: g + "px",
                width: f + "px"
            });
            i.css({
                height: g + "px",
                width: f + "px"
            });
            h.css({
                height: (g - e.height()) + "px",
                width: f + "px"
            });
            e.css({
                width: f + "px"
            });
            l.css({
                height: (g - e.height()) + "px",
                width: f + "px"
            });
            j.css({
                height: (g - e.height()) + "px",
                width: f
            });
            j.length > 0 && $(j[0].contentWindow).resize()
        },
        minBox: function (j) {
            var h = $("#" + (j || b.mBoxID));
            if (h.length == 0) {
                h = $("#" + $(".mCloseBox").attr("boxID"))
            }
            var m = h.parent();
            var f = $(".mBoxWrap", h);
            var g = $(".mBoxBd", h);
            var e = $(".boxTitle", f);
            var k = $(".mBoxContent", f);
            var i = $("iframe", k);
            $(".mMaxBox", e).show();
            $(".mMinBox", e).hide();
            var l = h.data("data");
            h.data("data", "");
            m.css({
                width: l[0][0] + "px",
                height: l[0][1] + "px",
                marginLeft: l[0][2] + "px",
                marginTop: l[0][3] + "px",
                top: l[0][4].top + "px",
                left: l[0][4].left + "px"
            });
            h.css({
                width: l[1][0] + "px",
                height: l[1][1] + "px",
            });
            f.css({
                width: l[2][0] + "px",
                height: l[2][1] + "px",
            });
            g.css({
                width: l[3][0] + "px",
                height: l[3][1] + "px",
            });
            e.css({
                width: l[4][0] + "px"
            });
            k.css({
                width: l[5][0] + "px",
                height: l[5][1] + "px",
            });
            i.css({
                width: l[6][0] + "px",
                height: l[6][1] + "px",
            });
            i.length > 0 && $(i[0].contentWindow).resize()
        },
        keyDown: function (e) {
            $(document).off("keydown.xytip").on("keydown.xytip", function (f) {
                f = f || event;
                if (f.keyCode == 27) {
                    $.XYTipsWindow.removeBox()
                }
            })
        }
    })
})(jQuery);
var dataLangAttrName = "data-lang";
var mLangClassName = "m-lang";
var MPKID = "MPKID";
var txtLangId = "txtLang";
var langIdAttrName = "langId";
var langNameAttrName = "langName";
var fieldAttrName = "field";
var pkIdAttrName = "pkID";
var oldValueAttrName = "oldValue";
var MLocaleID = "MLocaleID";
var MValue = "MValue";
var MFieldName = "MFieldName";
var MMultiLanguageValue = "MMultiLanguageValue";
var MMultiLanguageField = "MMultiLanguageField";
var configLanguageTitle = "config language";
var LangButtonId = "LangBtn";
var mLanguageClassName = "m-language";
var mLanguageDivClassName = "m-language-div";
var mLangBtnClassName = "m-lang-btn";
var langConfigId = "LangConfig";
var LangItemContainerId = "LangItemContainer";
var langCancelClass = "lang-cancel";
var langOkClass = "lang-ok";
var OKKeyName = "ok";
var CancelKeyName = "cancel";
var dataFieldSelector = ".mg-data";
var langFieldClassName = "m-lang";
var langInputClassName = "m-lang-input";
var langOkClassName = "m-lang-ok";
var langDivId = "langDivId";
var langDataName = "langDataName";
var langCancelClassName = "m-lang-cancel";
var langFieldAttrName = "data-lang";
var keyFieldSelector = ".m-form-key";
var multiLanguageName = "MultiLanguage";
var dashedLineClassName = "mg-dashed-line";
var bank = "bank",
    credit = "credit",
    cash = "cash";
var mainScroll = ".m-imain";
var topToolbar = ".m-toolbar";
var footToolbar = ".m-toolbar-footer";
var mTitle_Pre_Invoice = "IV";
var mTitle_Pre_Invoice_Red = "CN";
var mTitle_Pre_Bill = "Bill";
var mTitle_Pre_Bill_Red = "BCN";
var mTitle_Pre_Expense = "EC";
var mTitle_Pre_Payment = "Pay";
var mTitle_Pre_Receive = "Rec";
var mTitle_Pre_Transfer = "Trans";
var mEmailReg = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i;
window.BankTypeEnum = [{
    type: 0,
    height: 380,
    name: HtmlLang.Write(LangModule.Bank, "other", "Other"),
    baseName: "other"
}, {
    type: 1,
    height: 480,
    name: HtmlLang.Write(LangModule.Bank, "bank", "Bank"),
    baseName: "Bank"
}, {
    type: 2,
    height: 440,
    name: HtmlLang.Write(LangModule.Bank, "credit", "Credit"),
    baseName: "Credit Card"
}, {
    type: 3,
    height: 400,
    name: HtmlLang.Write(LangModule.Bank, "cash", "Cash"),
    baseName: "Cash"
}, {
    type: 4,
    height: 380,
    name: HtmlLang.Write(LangModule.Bank, "Paypal", "PayPal"),
    baseName: "Paypal"
}, {
    type: 5,
    height: 380,
    name: HtmlLang.Write(LangModule.Bank, "alipay", "Alipay"),
    baseName: "Alipay"
}];
jQuery.fn.daterangepicker = function (j) {
    var b = jQuery(this);
    var n = jQuery.extend({
        presetRanges: [{
            text: "Today",
            dateStart: "today",
            dateEnd: "today"
        }, {
            text: "Last 7 days",
            dateStart: "today-7days",
            dateEnd: "today"
        }, {
            text: "Month to date",
            dateStart: function () {
                return Date.parse("today").moveToFirstDayOfMonth()
            },
            dateEnd: "today"
        }, {
            text: "Year to date",
            dateStart: function () {
                var t = Date.parse("today");
                t.setMonth(0);
                t.setDate(1);
                return t
            },
            dateEnd: "today"
        }, {
            text: "The previous Month",
            dateStart: function () {
                return Date.parse("1 month ago").moveToFirstDayOfMonth()
            },
            dateEnd: function () {
                return Date.parse("1 month ago").moveToLastDayOfMonth()
            }
        }],
        presets: {
            specificDate: "Specific Date",
            allDatesBefore: "All Dates Before",
            allDatesAfter: "All Dates After",
            dateRange: "Date Range"
        },
        rangeStartTitle: "Start date",
        rangeEndTitle: "End date",
        nextLinkText: "Next",
        prevLinkText: "Prev",
        doneButtonText: "Done",
        earliestDate: Date.parse("-15years"),
        latestDate: Date.parse("+15years"),
        closeOnSelect: false,
        arrows: false,
        posX: 60,
        posY: b.offset().top + b.outerHeight(),
        appendTo: "body",
        onClose: function () { },
        onOpen: function () { },
        onChange: function () { },
        datepickerOptions: null
    }, j);
    var h = {
        onSelect: function () {
            if (k.find(".ui-daterangepicker-specificDate").is(".ui-state-active")) {
                k.find(".range-end").datepicker("setDate", k.find(".range-start").datepicker("getDate"))
            }
            var t = q(k.find(".range-start").datepicker("getDate"));
            var u = q(k.find(".range-end").datepicker("getDate"));
            if (b.length == 2) {
                if (b.eq(0).is("input")) {
                    b.eq(0).val(t)
                } else {
                    b.eq(0).text(t)
                }
                if (b.eq(1).is("input")) {
                    b.eq(1).val(t)
                } else {
                    b.eq(1).text(t)
                }
            } else {
                if (b.is("input")) {
                    b.val((t != u) ? t + " " + n.rangeSplitter + " " + u : t)
                } else {
                    b.text((t != u) ? t + " " + n.rangeSplitter + " " + u : t)
                }
            }
            if (n.closeOnSelect) {
                if (!k.find("li.ui-state-active").is(".ui-daterangepicker-dateRange") && !k.is(":animated")) {
                    d()
                }
            }
            var v = window.currentDPTarget;
            if ($(v).attr("triggerOnChange") == "1" || $(v).is("li")) {
                n.onChange()
            }
        },
        defaultDate: +0
    };
    b.change(n.onChange);
    n.datepickerOptions = (j) ? jQuery.extend(h, j.datepickerOptions) : h;
    var i, f = Date.parse("today");
    var c, a;
    if (b.size() == 2) {
        c = Date.parse(b.eq(0).val());
        a = Date.parse(b.eq(1).val());
        if (c == null) {
            c = a
        }
        if (a == null) {
            a = c
        }
    } else {
        c = Date.parse(b.val().split(n.rangeSplitter)[0]);
        a = Date.parse(b.val().split(n.rangeSplitter)[1]);
        if (a == null) {
            a = c
        }
    }
    if (c != null) {
        i = c
    }
    if (a != null) {
        f = a
    }
    var k = jQuery('<div class="ui-daterangepicker ui-widget ui-helper-clearfix ui-widget-content ui-corner-all"></div>');
    var g = jQuery('<div class="ranges ui-widget-header ui-corner-all ui-helper-clearfix"><div class="range-start"><span class="title-start">Start Date</span></div><div class="range-end"><span class="title-end">End Date</span></div></div>').appendTo(k);
    g.find(".range-start, .range-end").datepicker(n.datepickerOptions);
    g.find(".range-start").datepicker("setDate", i);
    g.find(".range-end").datepicker("setDate", f);
    var m = jQuery('<input type="button" class="btnDone ui-state-default ui-corner-all" value="' + n.doneButtonText + '"/>').click(function () {
        var t = k.find(".ui-datepicker-current-day");
        for (var u = 0; u < t.length; u++) {
            $(this).attr("triggerOnChange", (u == (t.length - 1)) ? "1" : "0");
            window.currentDPTarget = $(this);
            $(t[u]).trigger("click")
        }
        window.currentDPTarget = null;
        d()
    }).hover(function () {
        jQuery(this).addClass("ui-state-hover")
    }, function () {
        jQuery(this).removeClass("ui-state-hover")
    }).appendTo(g);
    var s = (function () {
        var t = jQuery('<ul class="ui-widget-content"></ul>').appendTo(k);
        jQuery.each(n.presetRanges, function () {
            jQuery('<li class="ui-daterangepicker-' + this.text.replace(/ /g, "") + ' ui-corner-all"><a href="#" style="margin-left:21px">' + this.text + "</a></li>").data("dateStart", this.dateStart).data("dateEnd", this.dateEnd).appendTo(t)
        });
        var u = 0;
        jQuery.each(n.presets, function (v, w) {
            jQuery('<li class="ui-daterangepicker-' + v + " preset_" + u + ' ui-helper-clearfix ui-corner-all"><span class="ui-icon ui-icon-triangle-1-w"></span><a href="#">' + w + "</a></li>").appendTo(t);
            u++
        });
        t.find("li").hover(function () {
            jQuery(this).addClass("ui-state-hover")
        }, function () {
            jQuery(this).removeClass("ui-state-hover")
        }).click(function () {
            k.find(".ui-state-active").removeClass("ui-state-active");
            jQuery(this).addClass("ui-state-active").clickActions(k, g, m);
            return false
        });
        return t
    })();

    function q(x) {
        if (x == null || !x.getDate()) {
            return ""
        }
        var t = x.getDate();
        var w = x.getMonth();
        var v = x.getFullYear();
        w++;
        var u = n.dateFormat;
        return jQuery.datepicker.formatDate(u, x)
    }
    jQuery.fn.restoreDateFromData = function () {
        if (jQuery(this).data("saveDate")) {
            jQuery(this).datepicker("setDate", jQuery(this).data("saveDate")).removeData("saveDate")
        }
        return this
    };
    jQuery.fn.saveDateToData = function () {
        if (!jQuery(this).data("saveDate")) {
            jQuery(this).data("saveDate", jQuery(this).datepicker("getDate"))
        }
        return this
    };

    function o() {
        if (k.data("state") == "closed") {
            k.data("state", "open");
            k.fadeIn(300);
            n.onOpen()
        }
    }
    function d() {
        if (k.data("state") == "open") {
            k.data("state", "closed");
            k.fadeOut(300);
            n.onClose()
        }
    }
    function p() {
        if (k.data("state") == "open") {
            d()
        } else {
            o()
        }
    }
    k.data("state", "closed");
    jQuery.fn.clickActions = function (v, t, u) {
        if (jQuery(this).is(".ui-daterangepicker-specificDate")) {
            u.hide();
            t.show();
            v.find(".title-start").text(n.presets.specificDate);
            v.find(".range-start").restoreDateFromData().show(400);
            v.find(".range-end").restoreDateFromData().hide(400);
            setTimeout(function () {
                u.fadeIn()
            }, 400)
        } else {
            if (jQuery(this).is(".ui-daterangepicker-allDatesBefore")) {
                u.hide();
                t.show();
                v.find(".title-end").text(n.presets.allDatesBefore);
                v.find(".range-start").saveDateToData().datepicker("setDate", n.earliestDate).hide(400);
                v.find(".range-end").restoreDateFromData().show(400);
                setTimeout(function () {
                    u.fadeIn()
                }, 400)
            } else {
                if (jQuery(this).is(".ui-daterangepicker-allDatesAfter")) {
                    u.hide();
                    t.show();
                    v.find(".title-start").text(n.presets.allDatesAfter);
                    v.find(".range-start").restoreDateFromData().show(400);
                    v.find(".range-end").saveDateToData().datepicker("setDate", n.latestDate).hide(400);
                    setTimeout(function () {
                        u.fadeIn()
                    }, 400)
                } else {
                    if (jQuery(this).is(".ui-daterangepicker-dateRange")) {
                        u.hide();
                        t.show();
                        v.find(".title-start").text(n.rangeStartTitle);
                        v.find(".title-end").text(n.rangeEndTitle);
                        v.find(".range-start").restoreDateFromData().show(400);
                        v.find(".range-end").restoreDateFromData().show(400);
                        setTimeout(function () {
                            u.fadeIn()
                        }, 400)
                    } else {
                        window.currentDPTarget = $(this);
                        u.hide();
                        v.find(".range-start, .range-end").hide(400, function () {
                            t.hide()
                        });
                        var w = (typeof jQuery(this).data("dateStart") == "string") ? Date.parse(jQuery(this).data("dateStart")) : jQuery(this).data("dateStart")();
                        var x = (typeof jQuery(this).data("dateEnd") == "string") ? Date.parse(jQuery(this).data("dateEnd")) : jQuery(this).data("dateEnd")();
                        v.find(".range-start").datepicker("setDate", w);
                        v.find(".range-end").datepicker("setDate", x);
                        v.find(".range-end").find(".ui-datepicker-current-day").trigger("click");
                        window.currentDPTarget = null
                    }
                }
            }
        }
        return false
    };
    jQuery(this).click(function () {
        p();
        return false
    });
    g.css("display", "none").find(".range-start, .range-end, .btnDone").css("display", "none");
    jQuery(n.appendTo).append(k);
    k.wrap('<div class="ui-daterangepickercontain"></div>');
    if (n.posX) {
        k.parent().css("right", n.posX)
    }
    if (n.posY) {
        k.parent().css("top", n.posY)
    }
    if (n.arrows && b.size() == 1) {
        var l = jQuery('<a href="#" class="ui-daterangepicker-prev ui-corner-all" title="' + n.prevLinkText + '"><span class="ui-icon ui-icon-circle-triangle-w">' + n.prevLinkText + "</span></a>");
        var e = jQuery('<a href="#" class="ui-daterangepicker-next ui-corner-all" title="' + n.nextLinkText + '"><span class="ui-icon ui-icon-circle-triangle-e">' + n.nextLinkText + "</span></a>");
        jQuery(this).addClass("ui-rangepicker-input ui-widget-content").wrap('<div class="ui-daterangepicker-arrows ui-widget ui-widget-header ui-helper-clearfix ui-corner-all"></div>').before(l).before(e).parent().find("a").click(function () {
            var v = g.find(".range-start").datepicker("getDate");
            var t = g.find(".range-end").datepicker("getDate");
            var u = Math.abs(new TimeSpan(v - t).getTotalMilliseconds()) + 86400000;
            if (jQuery(this).is(".ui-daterangepicker-prev")) {
                u = -u
            }
            g.find(".range-start, .range-end ").each(function () {
                var w = jQuery(this).datepicker("getDate");
                if (w == null) {
                    return false
                }
                jQuery(this).datepicker("setDate", w.add({
                    milliseconds: u
                })).find(".ui-datepicker-current-day").trigger("click")
            });
            return false
        }).hover(function () {
            jQuery(this).addClass("ui-state-hover")
        }, function () {
            jQuery(this).removeClass("ui-state-hover")
        })
    }
    jQuery(document).click(function () {
        if (k.is(":visible")) {
            d()
        }
    });
    k.click(function () {
        return false
    }).hide();
    return this
};
Date.CultureInfo = {
    name: "en-US",
    englishName: "English (United States)",
    nativeName: "English (United States)",
    dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    abbreviatedDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    shortestDayNames: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
    firstLetterDayNames: ["S", "M", "T", "W", "T", "F", "S"],
    monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    abbreviatedMonthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    amDesignator: "AM",
    pmDesignator: "PM",
    firstDayOfWeek: 0,
    twoDigitYearMax: 2029,
    dateElementOrder: "mdy",
    formatPatterns: {
        shortDate: "M/d/yyyy",
        longDate: "dddd, MMMM dd, yyyy",
        shortTime: "h:mm tt",
        longTime: "h:mm:ss tt",
        fullDateTime: "dddd, MMMM dd, yyyy h:mm:ss tt",
        sortableDateTime: "yyyy-MM-ddTHH:mm:ss",
        universalSortableDateTime: "yyyy-MM-dd HH:mm:ssZ",
        rfc1123: "ddd, dd MMM yyyy HH:mm:ss GMT",
        monthDay: "MMMM dd",
        yearMonth: "MMMM, yyyy"
    },
    regexPatterns: {
        jan: /^jan(uary)?/i,
        feb: /^feb(ruary)?/i,
        mar: /^mar(ch)?/i,
        apr: /^apr(il)?/i,
        may: /^may/i,
        jun: /^jun(e)?/i,
        jul: /^jul(y)?/i,
        aug: /^aug(ust)?/i,
        sep: /^sep(t(ember)?)?/i,
        oct: /^oct(ober)?/i,
        nov: /^nov(ember)?/i,
        dec: /^dec(ember)?/i,
        sun: /^su(n(day)?)?/i,
        mon: /^mo(n(day)?)?/i,
        tue: /^tu(e(s(day)?)?)?/i,
        wed: /^we(d(nesday)?)?/i,
        thu: /^th(u(r(s(day)?)?)?)?/i,
        fri: /^fr(i(day)?)?/i,
        sat: /^sa(t(urday)?)?/i,
        future: /^next/i,
        past: /^last|past|prev(ious)?/i,
        add: /^(\+|after|from)/i,
        subtract: /^(\-|before|ago)/i,
        yesterday: /^yesterday/i,
        today: /^t(oday)?/i,
        tomorrow: /^tomorrow/i,
        now: /^n(ow)?/i,
        millisecond: /^ms|milli(second)?s?/i,
        second: /^sec(ond)?s?/i,
        minute: /^min(ute)?s?/i,
        hour: /^h(ou)?rs?/i,
        week: /^w(ee)?k/i,
        month: /^m(o(nth)?s?)?/i,
        day: /^d(ays?)?/i,
        year: /^y((ea)?rs?)?/i,
        shortMeridian: /^(a|p)/i,
        longMeridian: /^(a\.?m?\.?|p\.?m?\.?)/i,
        timezone: /^((e(s|d)t|c(s|d)t|m(s|d)t|p(s|d)t)|((gmt)?\s*(\+|\-)\s*\d\d\d\d?)|gmt)/i,
        ordinalSuffix: /^\s*(st|nd|rd|th)/i,
        timeContext: /^\s*(\:|a|p)/i
    },
    abbreviatedTimeZoneStandard: {
        GMT: "-000",
        EST: "-0400",
        CST: "-0500",
        MST: "-0600",
        PST: "-0700"
    },
    abbreviatedTimeZoneDST: {
        GMT: "-000",
        EDT: "-0500",
        CDT: "-0600",
        MDT: "-0700",
        PDT: "-0800"
    }
};
Date.getMonthNumberFromName = function (e) {
    var a = Date.CultureInfo.monthNames,
        d = Date.CultureInfo.abbreviatedMonthNames,
        b = e.toLowerCase();
    for (var c = 0; c < a.length; c++) {
        if (a[c].toLowerCase() == b || d[c].toLowerCase() == b) {
            return c
        }
    }
    return -1
};
Date.getDayNumberFromName = function (f) {
    var c = Date.CultureInfo.dayNames,
        b = Date.CultureInfo.abbreviatedDayNames,
        d = Date.CultureInfo.shortestDayNames,
        e = f.toLowerCase();
    for (var a = 0; a < c.length; a++) {
        if (c[a].toLowerCase() == e || b[a].toLowerCase() == e) {
            return a
        }
    }
    return -1
};
Date.isLeapYear = function (a) {
    return (((a % 4 === 0) && (a % 100 !== 0)) || (a % 400 === 0))
};
Date.getDaysInMonth = function (b, a) {
    return [31, (Date.isLeapYear(b) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][a]
};
Date.getTimezoneOffset = function (b, a) {
    return (a || false) ? Date.CultureInfo.abbreviatedTimeZoneDST[b.toUpperCase()] : Date.CultureInfo.abbreviatedTimeZoneStandard[b.toUpperCase()]
};
Date.getTimezoneAbbreviation = function (d, c) {
    var b = (c || false) ? Date.CultureInfo.abbreviatedTimeZoneDST : Date.CultureInfo.abbreviatedTimeZoneStandard,
        a;
    for (a in b) {
        if (b[a] === d) {
            return a
        }
    }
    return null
};
Date.prototype.clone = function () {
    return new Date(this.getTime())
};
Date.prototype.compareTo = function (a) {
    if (isNaN(this)) {
        throw new Error(this)
    }
    if (a instanceof Date && !isNaN(a)) {
        return (this > a) ? 1 : (this < a) ? -1 : 0
    } else {
        throw new TypeError(a)
    }
};
Date.prototype.equals = function (a) {
    return (this.compareTo(a) === 0)
};
Date.prototype.between = function (c, a) {
    var b = this.getTime();
    return b >= c.getTime() && b <= a.getTime()
};
Date.prototype.addMilliseconds = function (a) {
    this.setMilliseconds(this.getMilliseconds() + a);
    return this
};
Date.prototype.addSeconds = function (a) {
    return this.addMilliseconds(a * 1000)
};
Date.prototype.addMinutes = function (a) {
    return this.addMilliseconds(a * 60000)
};
Date.prototype.addHours = function (a) {
    return this.addMilliseconds(a * 3600000)
};
Date.prototype.addDays = function (a) {
    return this.addMilliseconds(a * 86400000)
};
Date.prototype.addWeeks = function (a) {
    return this.addMilliseconds(a * 604800000)
};
Date.prototype.addMonths = function (b) {
    var a = this.getDate();
    this.setDate(1);
    this.setMonth(this.getMonth() + b);
    this.setDate(Math.min(a, this.getDaysInMonth()));
    return this
};
Date.prototype.addYears = function (a) {
    return this.addMonths(a * 12)
};
Date.prototype.getFirstDayOfMonth = function () {
    this.setDate(1);
    return this
};
Date.prototype.getLastDayOfMonth = function () {
    this.addMonths(1).setDate(1);
    return this.addDays(-1)
};
Date.prototype.add = function (a) {
    if (typeof a == "number") {
        this._orient = a;
        return this
    }
    var b = a;
    if (b.millisecond || b.milliseconds) {
        this.addMilliseconds(b.millisecond || b.milliseconds)
    }
    if (b.second || b.seconds) {
        this.addSeconds(b.second || b.seconds)
    }
    if (b.minute || b.minutes) {
        this.addMinutes(b.minute || b.minutes)
    }
    if (b.hour || b.hours) {
        this.addHours(b.hour || b.hours)
    }
    if (b.month || b.months) {
        this.addMonths(b.month || b.months)
    }
    if (b.year || b.years) {
        this.addYears(b.year || b.years)
    }
    if (b.day || b.days) {
        this.addDays(b.day || b.days)
    }
    return this
};
Date._validate = function (a, b, c, d) {
    if (typeof a != "number") {
        throw new TypeError(a + " is not a Number.")
    } else {
        if (a < b || a > c) {
            throw new RangeError(a + " is not a valid value for " + d + ".")
        }
    }
    return true
};
Date.validateMillisecond = function (a) {
    return Date._validate(a, 0, 999, "milliseconds")
};
Date.validateSecond = function (a) {
    return Date._validate(a, 0, 59, "seconds")
};
Date.validateMinute = function (a) {
    return Date._validate(a, 0, 59, "minutes")
};
Date.validateHour = function (a) {
    return Date._validate(a, 0, 23, "hours")
};
Date.validateDay = function (c, a, b) {
    return Date._validate(c, 1, Date.getDaysInMonth(a, b), "days")
};
Date.validateMonth = function (a) {
    return Date._validate(a, 0, 11, "months")
};
Date.validateYear = function (a) {
    return Date._validate(a, 1, 9999, "seconds")
};
Date.prototype.set = function (a) {
    var b = a;
    if (!b.millisecond && b.millisecond !== 0) {
        b.millisecond = -1
    }
    if (!b.second && b.second !== 0) {
        b.second = -1
    }
    if (!b.minute && b.minute !== 0) {
        b.minute = -1
    }
    if (!b.hour && b.hour !== 0) {
        b.hour = -1
    }
    if (!b.day && b.day !== 0) {
        b.day = -1
    }
    if (!b.month && b.month !== 0) {
        b.month = -1
    }
    if (!b.year && b.year !== 0) {
        b.year = -1
    }
    if (b.millisecond != -1 && Date.validateMillisecond(b.millisecond)) {
        this.addMilliseconds(b.millisecond - this.getMilliseconds())
    }
    if (b.second != -1 && Date.validateSecond(b.second)) {
        this.addSeconds(b.second - this.getSeconds())
    }
    if (b.minute != -1 && Date.validateMinute(b.minute)) {
        this.addMinutes(b.minute - this.getMinutes())
    }
    if (b.hour != -1 && Date.validateHour(b.hour)) {
        this.addHours(b.hour - this.getHours())
    }
    if (b.month !== -1 && Date.validateMonth(b.month)) {
        this.addMonths(b.month - this.getMonth())
    }
    if (b.year != -1 && Date.validateYear(b.year)) {
        this.addYears(b.year - this.getFullYear())
    }
    if (b.day != -1 && Date.validateDay(b.day, this.getFullYear(), this.getMonth())) {
        this.addDays(b.day - this.getDate())
    }
    if (b.timezone) {
        this.setTimezone(b.timezone)
    }
    if (b.timezoneOffset) {
        this.setTimezoneOffset(b.timezoneOffset)
    }
    return this
};
Date.prototype.clearTime = function () {
    this.setHours(0);
    this.setMinutes(0);
    this.setSeconds(0);
    this.setMilliseconds(0);
    return this
};
Date.prototype.isLeapYear = function () {
    var a = this.getFullYear();
    return (((a % 4 === 0) && (a % 100 !== 0)) || (a % 400 === 0))
};
Date.prototype.isWeekday = function () {
    return !(this.is().sat() || this.is().sun())
};
Date.prototype.getDaysInMonth = function () {
    return Date.getDaysInMonth(this.getFullYear(), this.getMonth())
};
Date.prototype.moveToFirstDayOfMonth = function () {
    return this.set({
        day: 1
    })
};
Date.prototype.moveToLastDayOfMonth = function () {
    return this.set({
        day: this.getDaysInMonth()
    })
};
Date.prototype.moveToDayOfWeek = function (a, b) {
    var c = (a - this.getDay() + 7 * (b || +1)) % 7;
    return this.addDays((c === 0) ? c += 7 * (b || +1) : c)
};
Date.prototype.moveToMonth = function (c, b) {
    var a = (c - this.getMonth() + 12 * (b || +1)) % 12;
    return this.addMonths((a === 0) ? a += 12 * (b || +1) : a)
};
Date.prototype.getDayOfYear = function () {
    return Math.floor((this - new Date(this.getFullYear(), 0, 1)) / 86400000)
};
Date.prototype.getWeekOfYear = function (i) {
    var a = this.getFullYear(),
        c = this.getMonth(),
        h = this.getDate();
    var e = i || Date.CultureInfo.firstDayOfWeek;
    var g = 7 + 1 - new Date(a, 0, 1).getDay();
    if (g == 8) {
        g = 1
    }
    var f = ((Date.UTC(a, c, h, 0, 0, 0) - Date.UTC(a, 0, 1, 0, 0, 0)) / 86400000) + 1;
    var j = Math.floor((f - g + 7) / 7);
    if (j === e) {
        a--;
        var b = 7 + 1 - new Date(a, 0, 1).getDay();
        if (b == 2 || b == 8) {
            j = 53
        } else {
            j = 52
        }
    }
    return j
};
Date.prototype.isDST = function () {
    return this.toString().match(/(E|C|M|P)(S|D)T/)[2] == "D"
};
Date.prototype.getTimezone = function () {
    return Date.getTimezoneAbbreviation(this.getUTCOffset, this.isDST())
};
Date.prototype.setTimezoneOffset = function (b) {
    var a = this.getTimezoneOffset(),
        c = Number(b) * -6 / 10;
    this.addMinutes(c - a);
    return this
};
Date.prototype.setTimezone = function (a) {
    return this.setTimezoneOffset(Date.getTimezoneOffset(a))
};
Date.prototype.getUTCOffset = function () {
    var a = this.getTimezoneOffset() * -10 / 6,
        b;
    if (a < 0) {
        b = (a - 10000).toString();
        return b[0] + b.substr(2)
    } else {
        b = (a + 10000).toString();
        return "+" + b.substr(1)
    }
};
Date.prototype.getDayName = function (a) {
    return a ? Date.CultureInfo.abbreviatedDayNames[this.getDay()] : Date.CultureInfo.dayNames[this.getDay()]
};
Date.prototype.getMonthName = function (a) {
    return a ? Date.CultureInfo.abbreviatedMonthNames[this.getMonth()] : Date.CultureInfo.monthNames[this.getMonth()]
};
Date.prototype._toString = Date.prototype.toString;
Date.now = function () {
    return new Date()
};
Date.today = function () {
    return Date.now().clearTime()
};
Date.prototype._orient = +1;
Date.prototype.next = function () {
    this._orient = +1;
    return this
};
Date.prototype.last = Date.prototype.prev = Date.prototype.previous = function () {
    this._orient = -1;
    return this
};
Date.prototype._is = false;
Date.prototype.is = function () {
    this._is = true;
    return this
};
Number.prototype._dateElement = "day";
Number.prototype.fromNow = function () {
    var a = {};
    a[this._dateElement] = this;
    return Date.now().add(a)
};
Number.prototype.ago = function () {
    var a = {};
    a[this._dateElement] = this * -1;
    return Date.now().add(a)
};
(function () {
    var o = Date.prototype,
        f = Number.prototype;
    var b = ("sunday monday tuesday wednesday thursday friday saturday").split(/\s/),
        p = ("january february march april may june july august september october november december").split(/\s/),
        m = ("Millisecond Second Minute Hour Day Week Month Year").split(/\s/),
        a;
    var c = function (i) {
        return function () {
            if (this._is) {
                this._is = false;
                return this.getDay() == i
            }
            return this.moveToDayOfWeek(i, this._orient)
        }
    };
    for (var l = 0; l < b.length; l++) {
        o[b[l]] = o[b[l].substring(0, 3)] = c(l)
    }
    var d = function (i) {
        return function () {
            if (this._is) {
                this._is = false;
                return this.getMonth() === i
            }
            return this.moveToMonth(i, this._orient)
        }
    };
    for (var h = 0; h < p.length; h++) {
        o[p[h]] = o[p[h].substring(0, 3)] = d(h)
    }
    var g = function (i) {
        return function () {
            if (i.substring(i.length - 1) != "s") {
                i += "s"
            }
            return this["add" + i](this._orient)
        }
    };
    var e = function (i) {
        return function () {
            this._dateElement = i;
            return this
        }
    };
    for (var n = 0; n < m.length; n++) {
        a = m[n].toLowerCase();
        o[a] = o[a + "s"] = g(m[n]);
        f[a] = f[a + "s"] = e(a)
    }
}());
Date.prototype.toJSONString = function () {
    return this.toString("yyyy-MM-ddThh:mm:ssZ")
};
Date.prototype.toShortDateString = function () {
    return this.toString(Date.CultureInfo.formatPatterns.shortDatePattern)
};
Date.prototype.toLongDateString = function () {
    return this.toString(Date.CultureInfo.formatPatterns.longDatePattern)
};
Date.prototype.toShortTimeString = function () {
    return this.toString(Date.CultureInfo.formatPatterns.shortTimePattern)
};
Date.prototype.toLongTimeString = function () {
    return this.toString(Date.CultureInfo.formatPatterns.longTimePattern)
};
Date.prototype.getOrdinal = function () {
    switch (this.getDate()) {
        case 1:
        case 21:
        case 31:
            return "st";
        case 2:
        case 22:
            return "nd";
        case 3:
        case 23:
            return "rd";
        default:
            return "th"
    }
};
(function () {
    Date.Parsing = {
        Exception: function (i) {
            this.message = "Parse error at '" + i.substring(0, 10) + " ...'"
        }
    };
    var h = Date.Parsing;
    var c = h.Operators = {
        rtoken: function (i) {
            return function (k) {
                var j = k.match(i);
                if (j) {
                    return ([j[0], k.substring(j[0].length)])
                } else {
                    throw new h.Exception(k)
                }
            }
        },
        token: function (i) {
            return function (j) {
                return c.rtoken(new RegExp("^s*" + j + "s*"))(j)
            }
        },
        stoken: function (i) {
            return c.rtoken(new RegExp("^" + i))
        },
        until: function (i) {
            return function (l) {
                var j = [],
                    k = null;
                while (l.length) {
                    try {
                        k = i.call(this, l)
                    } catch (m) {
                        j.push(k[0]);
                        l = k[1];
                        continue
                    }
                    break
                }
                return [j, l]
            }
        },
        many: function (i) {
            return function (k) {
                var j = [],
                    l = null;
                while (k.length) {
                    try {
                        l = i.call(this, k)
                    } catch (m) {
                        return [j, k]
                    }
                    j.push(l[0]);
                    k = l[1]
                }
                return [j, k]
            }
        },
        optional: function (i) {
            return function (k) {
                var j = null;
                try {
                    j = i.call(this, k)
                } catch (l) {
                    return [null, k]
                }
                return [j[0], j[1]]
            }
        },
        not: function (i) {
            return function (j) {
                try {
                    i.call(this, j)
                } catch (k) {
                    return [null, j]
                }
                throw new h.Exception(j)
            }
        },
        ignore: function (i) {
            return i ?
                function (k) {
                    var j = null;
                    j = i.call(this, k);
                    return [null, j[1]]
                } : null
        },
        product: function () {
            var m = arguments[0],
                j = Array.prototype.slice.call(arguments, 1),
                k = [];
            for (var l = 0; l < m.length; l++) {
                k.push(c.each(m[l], j))
            }
            return k
        },
        cache: function (i) {
            var k = {},
                j = null;
            return function (l) {
                try {
                    j = k[l] = (k[l] || i.call(this, l))
                } catch (m) {
                    j = k[l] = m
                }
                if (j instanceof h.Exception) {
                    throw j
                } else {
                    return j
                }
            }
        },
        any: function () {
            var i = arguments;
            return function (k) {
                var j = null;
                for (var l = 0; l < i.length; l++) {
                    if (i[l] == null) {
                        continue
                    }
                    try {
                        j = (i[l].call(this, k))
                    } catch (m) {
                        j = null
                    }
                    if (j) {
                        return j
                    }
                }
                throw new h.Exception(k)
            }
        },
        each: function () {
            var i = arguments;
            return function (k) {
                var j = [],
                    l = null;
                for (var m = 0; m < i.length; m++) {
                    if (i[m] == null) {
                        continue
                    }
                    try {
                        l = (i[m].call(this, k))
                    } catch (n) {
                        throw new h.Exception(k)
                    }
                    j.push(l[0]);
                    k = l[1]
                }
                return [j, k]
            }
        },
        all: function () {
            var j = arguments,
                i = i;
            return i.each(i.optional(j))
        },
        sequence: function (k, j, i) {
            j = j || c.rtoken(/^\s*/);
            i = i || null;
            if (k.length == 1) {
                return k[0]
            }
            return function (u) {
                var t = null,
                    p = null;
                var m = [];
                for (var l = 0; l < k.length; l++) {
                    try {
                        t = k[l].call(this, u)
                    } catch (v) {
                        break
                    }
                    m.push(t[0]);
                    try {
                        p = j.call(this, t[1])
                    } catch (n) {
                        p = null;
                        break
                    }
                    u = p[1]
                }
                if (!t) {
                    throw new h.Exception(u)
                }
                if (p) {
                    throw new h.Exception(p[1])
                }
                if (i) {
                    try {
                        t = i.call(this, t[1])
                    } catch (o) {
                        throw new h.Exception(t[1])
                    }
                }
                return [m, (t ? t[1] : u)]
            }
        },
        between: function (k, l, i) {
            i = i || k;
            var j = c.each(c.ignore(k), l, c.ignore(i));
            return function (n) {
                var m = j.call(this, n);
                return [[m[0][0], r[0][2]], m[1]]
            }
        },
        list: function (k, j, i) {
            j = j || c.rtoken(/^\s*/);
            i = i || null;
            return (k instanceof Array ? c.each(c.product(k.slice(0, -1), c.ignore(j)), k.slice(-1), c.ignore(i)) : c.each(c.many(c.each(k, c.ignore(j))), px, c.ignore(i)))
        },
        set: function (k, j, i) {
            j = j || c.rtoken(/^\s*/);
            i = i || null;
            return function (u) {
                var t = null,
                    n = null,
                    o = null,
                    z = null,
                    A = [
                        [], u],
                    l = false;
                for (var w = 0; w < k.length; w++) {
                    o = null;
                    n = null;
                    t = null;
                    l = (k.length == 1);
                    try {
                        t = k[w].call(this, u)
                    } catch (B) {
                        continue
                    }
                    z = [
                        [t[0]], t[1]
                    ];
                    if (t[1].length > 0 && !l) {
                        try {
                            o = j.call(this, t[1])
                        } catch (m) {
                            l = true
                        }
                    } else {
                        l = true
                    }
                    if (!l && o[1].length === 0) {
                        l = true
                    }
                    if (!l) {
                        var y = [];
                        for (var x = 0; x < k.length; x++) {
                            if (w != x) {
                                y.push(k[x])
                            }
                        }
                        n = c.set(y, j).call(this, o[1]);
                        if (n[0].length > 0) {
                            z[0] = z[0].concat(n[0]);
                            z[1] = n[1]
                        }
                    }
                    if (z[1].length < A[1].length) {
                        A = z
                    }
                    if (A[1].length === 0) {
                        break
                    }
                }
                if (A[0].length === 0) {
                    return A
                }
                if (i) {
                    try {
                        o = i.call(this, A[1])
                    } catch (v) {
                        throw new h.Exception(A[1])
                    }
                    A[1] = o[1]
                }
                return A
            }
        },
        forward: function (j, i) {
            return function (k) {
                return j[i].call(this, k)
            }
        },
        replace: function (i, j) {
            return function (l) {
                var k = i.call(this, l);
                return [j, k[1]]
            }
        },
        process: function (i, j) {
            return function (l) {
                var k = i.call(this, l);
                return [j.call(this, k[0]), k[1]]
            }
        },
        min: function (i, j) {
            return function (l) {
                var k = j.call(this, l);
                if (k[0].length < i) {
                    throw new h.Exception(l)
                }
                return k
            }
        }
    };
    var g = function (i) {
        return function () {
            var l = null,
                j = [];
            if (arguments.length > 1) {
                l = Array.prototype.slice.call(arguments)
            } else {
                if (arguments[0] instanceof Array) {
                    l = arguments[0]
                }
            }
            if (l) {
                for (var k = 0, m = l.shift(); k < m.length; k++) {
                    l.unshift(m[k]);
                    j.push(i.apply(null, l));
                    l.shift();
                    return j
                }
            } else {
                return i.apply(null, arguments)
            }
        }
    };
    var f = "optional not ignore cache".split(/\s/);
    for (var a = 0; a < f.length; a++) {
        c[f[a]] = g(c[f[a]])
    }
    var e = function (i) {
        return function () {
            if (arguments[0] instanceof Array) {
                return i.apply(null, arguments[0])
            } else {
                return i.apply(null, arguments)
            }
        }
    };
    var d = "each any all".split(/\s/);
    for (var b = 0; b < d.length; b++) {
        c[d[b]] = e(c[d[b]])
    }
}());
(function () {
    var h = function (j) {
        var g = [];
        for (var k = 0; k < j.length; k++) {
            if (j[k] instanceof Array) {
                g = g.concat(h(j[k]))
            } else {
                if (j[k]) {
                    g.push(j[k])
                }
            }
        }
        return g
    };
    Date.Grammar = {};
    Date.Translator = {
        hour: function (g) {
            return function () {
                this.hour = Number(g)
            }
        },
        minute: function (g) {
            return function () {
                this.minute = Number(g)
            }
        },
        second: function (g) {
            return function () {
                this.second = Number(g)
            }
        },
        meridian: function (g) {
            return function () {
                this.meridian = g.slice(0, 1).toLowerCase()
            }
        },
        timezone: function (g) {
            return function () {
                var j = g.replace(/[^\d\+\-]/g, "");
                if (j.length) {
                    this.timezoneOffset = Number(j)
                } else {
                    this.timezone = g.toLowerCase()
                }
            }
        },
        day: function (j) {
            var g = j[0];
            return function () {
                this.day = Number(g.match(/\d+/)[0])
            }
        },
        month: function (g) {
            return function () {
                this.month = ((g.length == 3) ? Date.getMonthNumberFromName(g) : (Number(g) - 1))
            }
        },
        year: function (g) {
            return function () {
                var j = Number(g);
                this.year = ((g.length > 2) ? j : (j + (((j + 2000) < Date.CultureInfo.twoDigitYearMax) ? 2000 : 1900)))
            }
        },
        rday: function (g) {
            return function () {
                switch (g) {
                    case "yesterday":
                        this.days = -1;
                        break;
                    case "tomorrow":
                        this.days = 1;
                        break;
                    case "today":
                        this.days = 0;
                        break;
                    case "now":
                        this.days = 0;
                        this.now = true;
                        break
                }
            }
        },
        finishExact: function (l) {
            l = (l instanceof Array) ? l : [l];
            var k = new Date();
            this.year = k.getFullYear();
            this.month = k.getMonth();
            this.day = 1;
            this.hour = 0;
            this.minute = 0;
            this.second = 0;
            for (var j = 0; j < l.length; j++) {
                if (l[j]) {
                    l[j].call(this)
                }
            }
            this.hour = (this.meridian == "p" && this.hour < 13) ? this.hour + 12 : this.hour;
            if (this.day > Date.getDaysInMonth(this.year, this.month)) {
                throw new RangeError(this.day + " is not a valid value for days.")
            }
            var g = new Date(this.year, this.month, this.day, this.hour, this.minute, this.second);
            if (this.timezone) {
                g.set({
                    timezone: this.timezone
                })
            } else {
                if (this.timezoneOffset) {
                    g.set({
                        timezoneOffset: this.timezoneOffset
                    })
                }
            }
            return g
        },
        finish: function (g) {
            g = (g instanceof Array) ? h(g) : [g];
            if (g.length === 0) {
                return null
            }
            for (var l = 0; l < g.length; l++) {
                if (typeof g[l] == "function") {
                    g[l].call(this)
                }
            }
            if (this.now) {
                return new Date()
            }
            var k = Date.today();
            var o = null;
            var j = !!(this.days != null || this.orient || this.operator);
            if (j) {
                var p, n, m;
                m = ((this.orient == "past" || this.operator == "subtract") ? -1 : 1);
                if (this.weekday) {
                    this.unit = "day";
                    p = (Date.getDayNumberFromName(this.weekday) - k.getDay());
                    n = 7;
                    this.days = p ? ((p + (m * n)) % n) : (m * n)
                }
                if (this.month) {
                    this.unit = "month";
                    p = (this.month - k.getMonth());
                    n = 12;
                    this.months = p ? ((p + (m * n)) % n) : (m * n);
                    this.month = null
                }
                if (!this.unit) {
                    this.unit = "day"
                }
                if (this[this.unit + "s"] == null || this.operator != null) {
                    if (!this.value) {
                        this.value = 1
                    }
                    if (this.unit == "week") {
                        this.unit = "day";
                        this.value = this.value * 7
                    }
                    this[this.unit + "s"] = this.value * m
                }
                return k.add(this)
            } else {
                if (this.meridian && this.hour) {
                    this.hour = (this.hour < 13 && this.meridian == "p") ? this.hour + 12 : this.hour
                }
                if (this.weekday && !this.day) {
                    this.day = (k.addDays((Date.getDayNumberFromName(this.weekday) - k.getDay()))).getDate()
                }
                if (this.month && !this.day) {
                    this.day = 1
                }
                return k.set(this)
            }
        }
    };
    var e = Date.Parsing.Operators,
        i = Date.Grammar,
        f = Date.Translator,
        c;
    i.datePartDelimiter = e.rtoken(/^([\s\-\.\,\/\x27]+)/);
    i.timePartDelimiter = e.stoken(":");
    i.whiteSpace = e.rtoken(/^\s*/);
    i.generalDelimiter = e.rtoken(/^(([\s\,]|at|on)+)/);
    var a = {};
    i.ctoken = function (k) {
        var m = a[k];
        if (!m) {
            var l = Date.CultureInfo.regexPatterns;
            var n = k.split(/\s+/),
                j = [];
            for (var g = 0; g < n.length; g++) {
                j.push(e.replace(e.rtoken(l[n[g]]), n[g]))
            }
            m = a[k] = e.any.apply(null, j)
        }
        return m
    };
    i.ctoken2 = function (g) {
        return e.rtoken(Date.CultureInfo.regexPatterns[g])
    };
    i.h = e.cache(e.process(e.rtoken(/^(0[0-9]|1[0-2]|[1-9])/), f.hour));
    i.hh = e.cache(e.process(e.rtoken(/^(0[0-9]|1[0-2])/), f.hour));
    i.H = e.cache(e.process(e.rtoken(/^([0-1][0-9]|2[0-3]|[0-9])/), f.hour));
    i.HH = e.cache(e.process(e.rtoken(/^([0-1][0-9]|2[0-3])/), f.hour));
    i.m = e.cache(e.process(e.rtoken(/^([0-5][0-9]|[0-9])/), f.minute));
    i.mm = e.cache(e.process(e.rtoken(/^[0-5][0-9]/), f.minute));
    i.s = e.cache(e.process(e.rtoken(/^([0-5][0-9]|[0-9])/), f.second));
    i.ss = e.cache(e.process(e.rtoken(/^[0-5][0-9]/), f.second));
    i.hms = e.cache(e.sequence([i.H, i.mm, i.ss], i.timePartDelimiter));
    i.t = e.cache(e.process(i.ctoken2("shortMeridian"), f.meridian));
    i.tt = e.cache(e.process(i.ctoken2("longMeridian"), f.meridian));
    i.z = e.cache(e.process(e.rtoken(/^(\+|\-)?\s*\d\d\d\d?/), f.timezone));
    i.zz = e.cache(e.process(e.rtoken(/^(\+|\-)\s*\d\d\d\d/), f.timezone));
    i.zzz = e.cache(e.process(i.ctoken2("timezone"), f.timezone));
    i.timeSuffix = e.each(e.ignore(i.whiteSpace), e.set([i.tt, i.zzz]));
    i.time = e.each(e.optional(e.ignore(e.stoken("T"))), i.hms, i.timeSuffix);
    i.d = e.cache(e.process(e.each(e.rtoken(/^([0-2]\d|3[0-1]|\d)/), e.optional(i.ctoken2("ordinalSuffix"))), f.day));
    i.dd = e.cache(e.process(e.each(e.rtoken(/^([0-2]\d|3[0-1])/), e.optional(i.ctoken2("ordinalSuffix"))), f.day));
    i.ddd = i.dddd = e.cache(e.process(i.ctoken("sun mon tue wed thu fri sat"), function (g) {
        return function () {
            this.weekday = g
        }
    }));
    i.M = e.cache(e.process(e.rtoken(/^(1[0-2]|0\d|\d)/), f.month));
    i.MM = e.cache(e.process(e.rtoken(/^(1[0-2]|0\d)/), f.month));
    i.MMM = i.MMMM = e.cache(e.process(i.ctoken("jan feb mar apr may jun jul aug sep oct nov dec"), f.month));
    i.y = e.cache(e.process(e.rtoken(/^(\d\d?)/), f.year));
    i.yy = e.cache(e.process(e.rtoken(/^(\d\d)/), f.year));
    i.yyy = e.cache(e.process(e.rtoken(/^(\d\d?\d?\d?)/), f.year));
    i.yyyy = e.cache(e.process(e.rtoken(/^(\d\d\d\d)/), f.year));
    c = function () {
        return e.each(e.any.apply(null, arguments), e.not(i.ctoken2("timeContext")))
    };
    i.day = c(i.d, i.dd);
    i.month = c(i.M, i.MMM);
    i.year = c(i.yyyy, i.yy);
    i.orientation = e.process(i.ctoken("past future"), function (g) {
        return function () {
            this.orient = g
        }
    });
    i.operator = e.process(i.ctoken("add subtract"), function (g) {
        return function () {
            this.operator = g
        }
    });
    i.rday = e.process(i.ctoken("yesterday tomorrow today now"), f.rday);
    i.unit = e.process(i.ctoken("minute hour day week month year"), function (g) {
        return function () {
            this.unit = g
        }
    });
    i.value = e.process(e.rtoken(/^\d\d?(st|nd|rd|th)?/), function (g) {
        return function () {
            this.value = g.replace(/\D/g, "")
        }
    });
    i.expression = e.set([i.rday, i.operator, i.value, i.unit, i.orientation, i.ddd, i.MMM]);
    c = function () {
        return e.set(arguments, i.datePartDelimiter)
    };
    i.mdy = c(i.ddd, i.month, i.day, i.year);
    i.ymd = c(i.ddd, i.year, i.month, i.day);
    i.dmy = c(i.ddd, i.day, i.month, i.year);
    i.date = function (g) {
        return ((i[Date.CultureInfo.dateElementOrder] || i.mdy).call(this, g))
    };
    i.format = e.process(e.many(e.any(e.process(e.rtoken(/^(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?)/), function (g) {
        if (i[g]) {
            return i[g]
        } else {
            throw Date.Parsing.Exception(g)
        }
    }), e.process(e.rtoken(/^[^dMyhHmstz]+/), function (g) {
        return e.ignore(e.stoken(g))
    }))), function (g) {
        return e.process(e.each.apply(null, g), f.finishExact)
    });
    var b = {};
    var d = function (g) {
        return b[g] = (b[g] || i.format(g)[0])
    };
    i.formats = function (g) {
        if (g instanceof Array) {
            var j = [];
            for (var k = 0; k < g.length; k++) {
                j.push(d(g[k]))
            }
            return e.any.apply(null, j)
        } else {
            return d(g)
        }
    };
    i._formats = i.formats(["yyyy-MM-ddTHH:mm:ss", "ddd, MMM dd, yyyy H:mm:ss tt", "ddd MMM d yyyy HH:mm:ss zzz", "d"]);
    i._start = e.process(e.set([i.date, i.time, i.expression], i.generalDelimiter, i.whiteSpace), f.finish);
    i.start = function (j) {
        try {
            var g = i._formats.call({}, j);
            if (g[1].length === 0) {
                return g
            }
        } catch (k) { }
        return i._start.call({}, j)
    }
}());
Date._parse = Date.parse;
Date.parse = function (b) {
    var a = null;
    if (!b) {
        return null
    }
    try {
        a = Date.Grammar.start.call({}, b)
    } catch (c) {
        return null
    }
    return ((a[1].length === 0) ? a[0] : null)
};
Date.getParseFunction = function (a) {
    var b = Date.Grammar.formats(a);
    return function (d) {
        var c = null;
        try {
            c = b.call({}, d)
        } catch (f) {
            return null
        }
        return ((c[1].length === 0) ? c[0] : null)
    }
};
Date.parseExact = function (b, a) {
    return Date.getParseFunction(a)(b)
};
var TimeSpan = function (h, d, a, e, f) {
    var l = "days hours minutes seconds milliseconds".split(/\s+/);
    var c = function (i) {
        return function () {
            return this[i]
        }
    };
    var b = function (i) {
        return function (n) {
            this[i] = n;
            return this
        }
    };
    for (var k = 0; k < l.length; k++) {
        var g = l[k],
            m = g.slice(0, 1).toUpperCase() + g.slice(1);
        TimeSpan.prototype[g] = 0;
        TimeSpan.prototype["get" + m] = c(g);
        TimeSpan.prototype["set" + m] = b(g)
    }
    if (arguments.length == 4) {
        this.setDays(h);
        this.setHours(d);
        this.setMinutes(a);
        this.setSeconds(e)
    } else {
        if (arguments.length == 5) {
            this.setDays(h);
            this.setHours(d);
            this.setMinutes(a);
            this.setSeconds(e);
            this.setMilliseconds(f)
        } else {
            if (arguments.length == 1 && typeof h == "number") {
                var j = (h < 0) ? -1 : +1;
                this.setMilliseconds(Math.abs(h));
                this.setDays(Math.floor(this.getMilliseconds() / 86400000) * j);
                this.setMilliseconds(this.getMilliseconds() % 86400000);
                this.setHours(Math.floor(this.getMilliseconds() / 3600000) * j);
                this.setMilliseconds(this.getMilliseconds() % 3600000);
                this.setMinutes(Math.floor(this.getMilliseconds() / 60000) * j);
                this.setMilliseconds(this.getMilliseconds() % 60000);
                this.setSeconds(Math.floor(this.getMilliseconds() / 1000) * j);
                this.setMilliseconds(this.getMilliseconds() % 1000);
                this.setMilliseconds(this.getMilliseconds() * j)
            }
        }
    }
    this.getTotalMilliseconds = function () {
        return (this.getDays() * 86400000) + (this.getHours() * 3600000) + (this.getMinutes() * 60000) + (this.getSeconds() * 1000)
    };
    this.compareTo = function (i) {
        var n = new Date(1970, 1, 1, this.getHours(), this.getMinutes(), this.getSeconds()),
            o;
        if (i === null) {
            o = new Date(1970, 1, 1, 0, 0, 0)
        } else {
            o = new Date(1970, 1, 1, i.getHours(), i.getMinutes(), i.getSeconds())
        }
        return (n < o) ? -1 : (n > o) ? 1 : 0
    };
    this.equals = function (i) {
        return (this.compareTo(i) === 0)
    };
    this.add = function (i) {
        return (i === null) ? this : this.addSeconds(i.getTotalMilliseconds() / 1000)
    };
    this.subtract = function (i) {
        return (i === null) ? this : this.addSeconds(-i.getTotalMilliseconds() / 1000)
    };
    this.addDays = function (i) {
        return new TimeSpan(this.getTotalMilliseconds() + (i * 86400000))
    };
    this.addHours = function (i) {
        return new TimeSpan(this.getTotalMilliseconds() + (i * 3600000))
    };
    this.addMinutes = function (i) {
        return new TimeSpan(this.getTotalMilliseconds() + (i * 60000))
    };
    this.addSeconds = function (i) {
        return new TimeSpan(this.getTotalMilliseconds() + (i * 1000))
    };
    this.addMilliseconds = function (i) {
        return new TimeSpan(this.getTotalMilliseconds() + i)
    };
    this.get12HourHour = function () {
        return (this.getHours() > 12) ? this.getHours() - 12 : (this.getHours() === 0) ? 12 : this.getHours()
    };
    this.getDesignator = function () {
        return (this.getHours() < 12) ? Date.CultureInfo.amDesignator : Date.CultureInfo.pmDesignator
    };
    this.toString = function (i) {
        this._toString = function () {
            if (this.getDays() !== null && this.getDays() > 0) {
                return this.getDays() + "." + this.getHours() + ":" + this.p(this.getMinutes()) + ":" + this.p(this.getSeconds())
            } else {
                return this.getHours() + ":" + this.p(this.getMinutes()) + ":" + this.p(this.getSeconds())
            }
        };
        this.p = function (o) {
            return (o.toString().length < 2) ? "0" + o : o
        };
        var n = this;
        return i ? i.replace(/dd?|HH?|hh?|mm?|ss?|tt?/g, function (o) {
            switch (o) {
                case "d":
                    return n.getDays();
                case "dd":
                    return n.p(n.getDays());
                case "H":
                    return n.getHours();
                case "HH":
                    return n.p(n.getHours());
                case "h":
                    return n.get12HourHour();
                case "hh":
                    return n.p(n.get12HourHour());
                case "m":
                    return n.getMinutes();
                case "mm":
                    return n.p(n.getMinutes());
                case "s":
                    return n.getSeconds();
                case "ss":
                    return n.p(n.getSeconds());
                case "t":
                    return ((n.getHours() < 12) ? Date.CultureInfo.amDesignator : Date.CultureInfo.pmDesignator).substring(0, 1);
                case "tt":
                    return (n.getHours() < 12) ? Date.CultureInfo.amDesignator : Date.CultureInfo.pmDesignator
            }
        }) : this._toString()
    };
    return this
};
Date.prototype.getTimeOfDay = function () {
    return new TimeSpan(0, this.getHours(), this.getMinutes(), this.getSeconds(), this.getMilliseconds())
};
var TimePeriod = function (l, h, b, e, q, j, s) {
    var c = "years months days hours minutes seconds milliseconds".split(/\s+/);
    var a = function (i) {
        return function () {
            return this[i]
        }
    };
    var f = function (i) {
        return function (v) {
            this[i] = v;
            return this
        }
    };
    for (var k = 0; k < c.length; k++) {
        var u = c[k],
            m = u.slice(0, 1).toUpperCase() + u.slice(1);
        TimePeriod.prototype[u] = 0;
        TimePeriod.prototype["get" + m] = a(u);
        TimePeriod.prototype["set" + m] = f(u)
    }
    if (arguments.length == 7) {
        this.years = l;
        this.months = h;
        this.setDays(b);
        this.setHours(e);
        this.setMinutes(q);
        this.setSeconds(j);
        this.setMilliseconds(s)
    } else {
        if (arguments.length == 2 && arguments[0] instanceof Date && arguments[1] instanceof Date) {
            var p = l.clone();
            var d = h.clone();
            var o = p.clone();
            var n = (p > d) ? -1 : +1;
            this.years = d.getFullYear() - p.getFullYear();
            o.addYears(this.years);
            if (n == +1) {
                if (o > d) {
                    if (this.years !== 0) {
                        this.years--
                    }
                }
            } else {
                if (o < d) {
                    if (this.years !== 0) {
                        this.years++
                    }
                }
            }
            p.addYears(this.years);
            if (n == +1) {
                while (p < d && p.clone().addDays(Date.getDaysInMonth(p.getYear(), p.getMonth())) < d) {
                    p.addMonths(1);
                    this.months++
                }
            } else {
                while (p > d && p.clone().addDays(-p.getDaysInMonth()) > d) {
                    p.addMonths(-1);
                    this.months--
                }
            }
            var t = d - p;
            if (t !== 0) {
                var g = new TimeSpan(t);
                this.setDays(g.getDays());
                this.setHours(g.getHours());
                this.setMinutes(g.getMinutes());
                this.setSeconds(g.getSeconds());
                this.setMilliseconds(g.getMilliseconds())
            }
        }
    }
    return this
};
(function (a) {
    a = a || {};
    var b = (function () {
        var c = function (d, f) {
            var e = this;
            this.InitFormat = function (g) {
                e.DateFormat = g;
                if (!e.DateFormat) {
                    e.DateFormat = top.MegiGlobal ? top.MegiGlobal.MDateFormat : "";
                    e.DateFormat = e.DateFormat || LangKey.DateFormat;
                    e.DateFormat = e.DateFormat || "YYYY-MM-DD"
                }
                e.DateFormat.toUpperCase();
                return e.DateFormat
            };
            this.InitValue = function (g) {
                g = g || e.DateNow;
                e.DateValue = g;
                return e.DateValue
            };
            this.InitFormat(f);
            this.InitValue(d)
        };
        return c
    })();
    $.extend(b, {
        DateFormat: (function () {
            return (top.MegiGlobal ? top.MegiGlobal.MDateFormat : "") || "YYYY-MM-DD"
        })(),
        Spliter: (function () {
            return ((top.MegiGlobal ? top.MegiGlobal.MDateFormat : "") || "YYYY-MM-DD").match(/\W/g)[0]
        })(),
        TimeFormat: (function () {
            var c = (typeof (MegiGlobal) != "undefined" && MegiGlobal.MTimeFormat != undefined) ? MegiGlobal.MTimeFormat : "";
            if (c == null || c == "") {
                c = "HH:mm:ss"
            }
            return c
        })(),
        DateValue: (function () {
            var c = b.DateValue || b.DateNow;
            b.DateValue = c;
            return b.DateValue
        })(),
        DateNow: (function () {
            return new Date()
        })(),
        isDateString: function (e) {
            if (!/^(\d{4})\/(\d{1,2})\/(\d{1,2})$/.test(e) && !/^(\d{4})\-(\d{1,2})\-(\d{1,2})$/.test(e)) {
                return false
            }
            var d = RegExp.$1 - 0;
            var f = RegExp.$2 - 1;
            var g = RegExp.$3 - 0;
            var c = new Date(d, f, g);
            return !!(c.getFullYear() == d && c.getMonth() == f && c.getDate() == g)
        },
        isValidDate: function (c) {
            if (!c) {
                return false
            } else {
                var d = b.parse(c);
                if (d && d.getTime() > new Date(1900, 0, 1).getTime()) {
                    return true
                }
            }
            return false
        },
        format: function (c, d) {
            try {
                d = d || b.DateFormat;
                d = d.toUpperCase();
                c = c || b.DateValue;
                if (typeof c == "number") {
                    return b.formatNumber(c, d)
                } else {
                    if (typeof c == "string" && c.indexOf("/Date(") > -1) {
                        return b.formatValue(c, d)
                    } else {
                        if (typeof c == "string") {
                            return b.formatString(c, d)
                        } else {
                            if (typeof c == "object" && c instanceof Date) {
                                return b.formatDate(c, d)
                            } else {
                                return ""
                            }
                        }
                    }
                }
            } catch (f) {
                return ""
            }
        },
        formatter: function (c, d) {
            d = (d && (typeof d == "string")) ? d : undefined;
            if (!c) {
                return ""
            }
            return b.format(c, d)
        },
        parse: function (c, d) {
            try {
                d = d || b.DateFormat;
                d = d.toUpperCase();
                c = c || b.DateValue;
                if (typeof c == "number") {
                    return b.parseNumber(c, d)
                } else {
                    if (typeof c == "string" && c.indexOf("/Date(") > -1) {
                        return b.parseValue(c, d)
                    } else {
                        if (typeof c == "string") {
                            return b.parseString(c, d)
                        } else {
                            if (typeof c == "object" && c instanceof Date) {
                                return c
                            } else {
                                return undefined
                            }
                        }
                    }
                }
            } catch (f) {
                return undefined
            }
        },
        parser: function (d, c) {
            if (!d) {
                return b.DateNow
            }
            c = (c && (typeof c == "string")) ? c : undefined;
            return b.parse(d, c)
        },
        parseValue: function (c, d) {
            try {
                switch (arguments.length) {
                    case 0:
                        c = b.DateValue;
                        d = b.DateFormat;
                        break;
                    case 1:
                        d = b.DateFormat;
                        break;
                    default:
                        break
                }
                var g = c.replace(/\\|\/|\"|Date|\(|\)/gi, "");
                var f = g < 0 ? new Date(1900, 0, 1) : new Date(parseInt(g));
                if (f.getFullYear() < 1900) {
                    throw h
                }
                return f
            } catch (h) {
                throw h
            }
        },
        formatValue: function (c, d) {
            try {
                switch (arguments.length) {
                    case 0:
                        c = b.DateValue;
                        d = b.DateFormat;
                        break;
                    case 1:
                        d = b.DateFormat;
                        break;
                    default:
                        break
                }
                return b.formatDate(b.parseValue(c, d), d)
            } catch (f) {
                throw f
            }
        },
        formatNumber: function (c, d) {
            try {
                switch (arguments.length) {
                    case 0:
                        c = b.DateValue;
                        d = b.DateFormat;
                        break;
                    case 1:
                        d = b.DateFormat;
                        break;
                    default:
                        break
                }
                return b.formatDate(new Date(c), d)
            } catch (f) {
                throw f
            }
        },
        parseNumber: function (d) {
            try {
                switch (arguments.length) {
                    case 0:
                        d = b.DateValue;
                        break;
                    default:
                        break
                }
                return new Date(d)
            } catch (c) {
                throw c
            }
        },
        formatString: function (c, d) {
            try {
                switch (arguments.length) {
                    case 0:
                        c = b.DateValue;
                        d = b.DateFormat;
                        break;
                    case 1:
                        d = b.DateFormat;
                        break;
                    default:
                        break
                }
                return b.formatDate(b.parseString(c, d), d)
            } catch (f) {
                throw f
            }
        },
        parseString: function (j, g) {
            try {
                switch (arguments.length) {
                    case 0:
                        j = b.DateValue;
                        g = b.DateFormat;
                        break;
                    case 1:
                        g = b.DateFormat;
                        break;
                    default:
                        break
                }
                var u = g.match(/\W/g);
                var p = g.replace(/\W/g, "-");
                var h = p.split("-");
                var l = j.replace(/\W/g, "-");
                var r = l.split("-");
                var f = 1900,
                    c = 0,
                    d = 1,
                    k = 0,
                    n = 0,
                    q = 0;
                for (var o = 0; o < h.length; o++) {
                    switch (h[o].substr(0, 1).toUpperCase()) {
                        case "Y":
                            if (h[o].length == 2) {
                                f = b.DateNow.getFullYear().toString().substr(2, 2)
                            } else {
                                f = r[o]
                            }
                            break;
                        case "M":
                            c = r[o] || c;
                            break;
                        case "D":
                            d = r[o] || d;
                            break;
                        case "H":
                            k = r[o] || k;
                            break;
                        case "m":
                            n = r[o] || n;
                            break;
                        case "s":
                            q = r[o] || q;
                            break;
                        default:
                            throw s
                    }
                }
                var t = new Date(f, c, d, k, n, q);
                if (t.toString() == "Invalid Date") {
                    throw s
                }
                var m = new Date(f, c, 0).getDate();
                d = d > m ? m : d;
                t = new Date(f, c - 1 < 0 ? 0 : c - 1, d);
                return t
            } catch (s) {
                throw s
            }
        },
        formatDateTime: function (d) {
            var c = Date.parse(d);
            return c.format(b.DateFormat + " HH:mm:ss")
        },
        formatDate: function (j, c) {
            try {
                switch (arguments.length) {
                    case 0:
                        value = b.DateValue;
                        c = b.DateFormat;
                        break;
                    case 1:
                        c = b.DateFormat;
                        break;
                    default:
                        break
                }
                var k = j.getFullYear(),
                    f = j.getMonth(),
                    h = j.getDate();
                if (k <= 1901) {
                    return ""
                }
                var o = c;
                o = o.toUpperCase();
                var g = o.match(/Y/g).join("");
                o = o.replace(g, k.toString().substr(k.toString().length - g.length, g.length));
                var i = o.match(/M/g).join("");
                o = o.replace(i, (f + 1) < 10 ? ("0" + (f + 1).toString()) : (f + 1));
                var l = o.match(/D/g).join("");
                o = o.replace(l, h < 10 ? ("0" + h.toString()) : h);
                return o
            } catch (n) {
                throw n
            }
        },
        toString: function (c) {
            return b.format(undefined, c)
        },
        compare: function (d, c) {
            return b.parse(d) > b.parse(c)
        }
    });
    a.MegiDate = window.MegiDate = $.MegiDate = b;
    $.mDate = window.mDate = b
})(Megi);
(function (a) {
    a.parser = {
        auto: true,
        onComplete: function (b) { },
        plugins: ["draggable", "droppable", "resizable", "pagination", "tooltip", "linkbutton", "menu", "menubutton", "splitbutton", "progressbar", "tree", "combobox", "combotree", "combogrid", "numberbox", "validatebox", "searchbox", "numberspinner", "timespinner", "calendar", "datebox", "datetimebox", "slider", "layout", "panel", "datagrid", "propertygrid", "treegrid", "tabs", "accordion", "window", "dialog"],
        parse: function (d) {
            var b = [];
            for (var c = 0; c < a.parser.plugins.length; c++) {
                var f = a.parser.plugins[c];
                var e = a(".easyui-" + f, d);
                if (e.length) {
                    if (e[f]) {
                        e[f]()
                    } else {
                        b.push({
                            name: f,
                            jq: e
                        })
                    }
                    e.removeClass("easyui-" + f + "-base")
                }
            }
            if (b.length && window.easyloader) {
                var g = [];
                for (var c = 0; c < b.length; c++) {
                    g.push(b[c].name)
                }
                easyloader.load(g, function () {
                    for (var j = 0; j < b.length; j++) {
                        var h = b[j].name;
                        var k = b[j].jq;
                        k[h]()
                    }
                    a.parser.onComplete.call(a.parser, d)
                })
            } else {
                a.parser.onComplete.call(a.parser, d)
            }
        },
        parseOptions: function (k, l) {
            var h = a(k);
            var b = {};
            var g = a.trim(h.attr("data-options"));
            if (g) {
                if (g.substring(0, 1) != "{") {
                    g = "{" + g + "}"
                }
                b = (new Function("return " + g))()
            }
            if (l) {
                var c = {};
                for (var j = 0; j < l.length; j++) {
                    var f = l[j];
                    if (typeof f == "string") {
                        if (f == "width" || f == "height" || f == "left" || f == "top") {
                            c[f] = parseInt(k.style[f]) || undefined
                        } else {
                            c[f] = h.attr(f)
                        }
                    } else {
                        for (var d in f) {
                            var e = f[d];
                            if (e == "boolean") {
                                c[d] = h.attr(d) ? (h.attr(d) == "true") : undefined
                            } else {
                                if (e == "number") {
                                    c[d] = h.attr(d) == "0" ? 0 : parseFloat(h.attr(d)) || undefined
                                }
                            }
                        }
                    }
                }
                a.extend(b, c)
            }
            return b
        }
    };
    a(function () {
        var b = a('<div style="position:absolute;top:-1000px;width:100px;height:100px;padding:5px"></div>').appendTo("body");
        b.width(100);
        a._boxModel = parseInt(b.width()) == 100;
        b.remove();
        if (!window.easyloader && a.parser.auto) {
            a.parser.parse()
        }
    });
    a.fn._outerWidth = function (b) {
        if (b == undefined) {
            if (this[0] == window) {
                return this.width() || document.body.clientWidth
            }
            return this.outerWidth() || 0
        }
        return this.each(function () {
            if (a._boxModel) {
                a(this).width(b - (a(this).outerWidth() - a(this).width()))
            } else {
                a(this).width(b)
            }
        })
    };
    a.fn._outerHeight = function (b) {
        if (b == undefined) {
            if (this[0] == window) {
                return this.height() || document.body.clientHeight
            }
            return this.outerHeight() || 0
        }
        return this.each(function () {
            if (a._boxModel) {
                a(this).height(b - (a(this).outerHeight() - a(this).height()))
            } else {
                a(this).height(b)
            }
        })
    };
    a.fn._scrollLeft = function (b) {
        if (b == undefined) {
            return this.scrollLeft()
        } else {
            return this.each(function () {
                a(this).scrollLeft(b)
            })
        }
    };
    a.fn._propAttr = a.fn.prop || a.fn.attr;
    a.fn._fit = function (d) {
        d = d == undefined ? true : d;
        var b = this[0];
        var e = (b.tagName == "BODY" ? b : this.parent()[0]);
        var c = e.fcount || 0;
        if (d) {
            if (!b.fitted) {
                b.fitted = true;
                e.fcount = c + 1;
                a(e).addClass("panel-noscroll");
                if (e.tagName == "BODY") {
                    a("html").addClass("panel-fit")
                }
            }
        } else {
            if (b.fitted) {
                b.fitted = false;
                e.fcount = c - 1;
                if (e.fcount == 0) {
                    a(e).removeClass("panel-noscroll");
                    if (e.tagName == "BODY") {
                        a("html").removeClass("panel-fit")
                    }
                }
            }
        }
        return {
            width: a(e).width(),
            height: a(e).height()
        }
    }
})(jQuery);
(function (c) {
    var h = null;
    var a = null;
    var g = false;

    function d(i) {
        if (i.touches.length != 1) {
            return
        }
        if (!g) {
            g = true;
            dblClickTimer = setTimeout(function () {
                g = false
            }, 500)
        } else {
            clearTimeout(dblClickTimer);
            g = false;
            e(i, "dblclick")
        }
        h = setTimeout(function () {
            e(i, "contextmenu", 3)
        }, 1000);
        e(i, "mousedown");
        if (c.fn.draggable.isDragging || c.fn.resizable.isResizing) {
            i.preventDefault()
        }
    }
    function f(i) {
        if (i.touches.length != 1) {
            return
        }
        if (h) {
            clearTimeout(h)
        }
        e(i, "mousemove");
        if (c.fn.draggable.isDragging || c.fn.resizable.isResizing) {
            i.preventDefault()
        }
    }
    function b(i) {
        if (h) {
            clearTimeout(h)
        }
        e(i, "mouseup");
        if (c.fn.draggable.isDragging || c.fn.resizable.isResizing) {
            i.preventDefault()
        }
    }
    function e(l, i, j) {
        var k = new c.Event(i);
        k.pageX = l.changedTouches[0].pageX;
        k.pageY = l.changedTouches[0].pageY;
        k.which = j || 1;
        c(l.target).trigger(k)
    }
    if (document.addEventListener) {
        document.addEventListener("touchstart", d, true);
        document.addEventListener("touchmove", f, true);
        document.addEventListener("touchend", b, true)
    }
})(jQuery);
(function (b) {
    function d(k) {
        var i = b.data(k.data.target, "draggable");
        var l = i.options;
        var g = i.proxy;
        var j = k.data;
        var h = j.startLeft + k.pageX - j.startX;
        var m = j.startTop + k.pageY - j.startY;
        if (g) {
            if (g.parent()[0] == document.body) {
                if (l.deltaX != null && l.deltaX != undefined) {
                    h = k.pageX + l.deltaX
                } else {
                    h = k.pageX - k.data.offsetWidth
                }
                if (l.deltaY != null && l.deltaY != undefined) {
                    m = k.pageY + l.deltaY
                } else {
                    m = k.pageY - k.data.offsetHeight
                }
            } else {
                if (l.deltaX != null && l.deltaX != undefined) {
                    h += k.data.offsetWidth + l.deltaX
                }
                if (l.deltaY != null && l.deltaY != undefined) {
                    m += k.data.offsetHeight + l.deltaY
                }
            }
        }
        if (k.data.parent != document.body) {
            h += b(k.data.parent).scrollLeft();
            m += b(k.data.parent).scrollTop()
        }
        if (l.axis == "h") {
            j.left = h
        } else {
            if (l.axis == "v") {
                j.top = m
            } else {
                j.left = h;
                j.top = m
            }
        }
    }
    function f(g) {
        var j = b.data(g.data.target, "draggable");
        var h = j.options;
        var i = j.proxy;
        if (!i) {
            i = b(g.data.target)
        }
        i.css({
            left: g.data.left,
            top: g.data.top
        });
        b("body").css("cursor", h.cursor)
    }
    function a(k) {
        b.fn.draggable.isDragging = true;
        var i = b.data(k.data.target, "draggable");
        var j = i.options;
        var h = b(".droppable").filter(function () {
            return k.data.target != this
        }).filter(function () {
            var l = b.data(this, "droppable").options.accept;
            if (l) {
                return b(l).filter(function () {
                    return this == k.data.target
                }).length > 0
            } else {
                return true
            }
        });
        i.droppables = h;
        var g = i.proxy;
        if (!g) {
            if (j.proxy) {
                if (j.proxy == "clone") {
                    g = b(k.data.target).clone().insertAfter(k.data.target)
                } else {
                    g = j.proxy.call(k.data.target, k.data.target)
                }
                i.proxy = g
            } else {
                g = b(k.data.target)
            }
        }
        g.css("position", "absolute");
        d(k);
        f(k);
        j.onStartDrag.call(k.data.target, k);
        return false
    }
    function e(i) {
        var g = b.data(i.data.target, "draggable");
        d(i);
        if (g.options.onDrag.call(i.data.target, i) != false) {
            f(i)
        }
        var h = i.data.target;
        g.droppables.each(function () {
            var k = b(this);
            if (k.droppable("options").disabled) {
                return
            }
            var j = k.offset();
            if (i.pageX > j.left && i.pageX < j.left + k.outerWidth() && i.pageY > j.top && i.pageY < j.top + k.outerHeight()) {
                if (!this.entered) {
                    b(this).trigger("_dragenter", [h]);
                    this.entered = true
                }
                b(this).trigger("_dragover", [h])
            } else {
                if (this.entered) {
                    b(this).trigger("_dragleave", [h]);
                    this.entered = false
                }
            }
        });
        return false
    }
    function c(m) {
        b.fn.draggable.isDragging = false;
        e(m);
        var k = b.data(m.data.target, "draggable");
        var g = k.proxy;
        var h = k.options;
        if (h.revert) {
            if (j() == true) {
                b(m.data.target).css({
                    position: m.data.startPosition,
                    left: m.data.startLeft,
                    top: m.data.startTop
                })
            } else {
                if (g) {
                    var n, l;
                    if (g.parent()[0] == document.body) {
                        n = m.data.startX - m.data.offsetWidth;
                        l = m.data.startY - m.data.offsetHeight
                    } else {
                        n = m.data.startLeft;
                        l = m.data.startTop
                    }
                    g.animate({
                        left: n,
                        top: l
                    }, function () {
                        i()
                    })
                } else {
                    b(m.data.target).animate({
                        left: m.data.startLeft,
                        top: m.data.startTop
                    }, function () {
                        b(m.data.target).css("position", m.data.startPosition)
                    })
                }
            }
        } else {
            b(m.data.target).css({
                position: "absolute",
                left: m.data.left,
                top: m.data.top
            });
            j()
        }
        h.onStopDrag.call(m.data.target, m);
        b(document).unbind(".draggable");
        setTimeout(function () {
            b("body").css("cursor", "")
        }, 100);

        function i() {
            if (g) {
                g.remove()
            }
            k.proxy = null
        }
        function j() {
            var o = false;
            k.droppables.each(function () {
                var q = b(this);
                if (q.droppable("options").disabled) {
                    return
                }
                var p = q.offset();
                if (m.pageX > p.left && m.pageX < p.left + q.outerWidth() && m.pageY > p.top && m.pageY < p.top + q.outerHeight()) {
                    if (h.revert) {
                        b(m.data.target).css({
                            position: m.data.startPosition,
                            left: m.data.startLeft,
                            top: m.data.startTop
                        })
                    }
                    b(this).trigger("_drop", [m.data.target]);
                    i();
                    o = true;
                    this.entered = false;
                    return false
                }
            });
            if (!o && !h.revert) {
                i()
            }
            return o
        }
        return false
    }
    b.fn.draggable = function (g, h) {
        if (typeof g == "string") {
            return b.fn.draggable.methods[g](this, h)
        }
        return this.each(function () {
            var k;
            var j = b.data(this, "draggable");
            if (j) {
                j.handle.unbind(".draggable");
                k = b.extend(j.options, g)
            } else {
                k = b.extend({}, b.fn.draggable.defaults, b.fn.draggable.parseOptions(this), g || {})
            }
            var l = k.handle ? (typeof k.handle == "string" ? b(k.handle, this) : k.handle) : b(this);
            b.data(this, "draggable", {
                options: k,
                handle: l
            });
            if (k.disabled) {
                b(this).css("cursor", "");
                return
            }
            l.unbind(".draggable").bind("mousemove.draggable", {
                target: this
            }, function (m) {
                if (b.fn.draggable.isDragging) {
                    return
                }
                var n = b.data(m.data.target, "draggable").options;
                if (i(m)) {
                    b(this).css("cursor", n.cursor)
                } else {
                    b(this).css("cursor", "")
                }
            }).bind("mouseleave.draggable", {
                target: this
            }, function (m) {
                b(this).css("cursor", "")
            }).bind("mousedown.draggable", {
                target: this
            }, function (q) {
                if (i(q) == false) {
                    return
                }
                b(this).css("cursor", "");
                var m = b(q.data.target).position();
                var o = b(q.data.target).offset();
                var p = {
                    startPosition: b(q.data.target).css("position"),
                    startLeft: m.left,
                    startTop: m.top,
                    left: m.left,
                    top: m.top,
                    startX: q.pageX,
                    startY: q.pageY,
                    offsetWidth: (q.pageX - o.left),
                    offsetHeight: (q.pageY - o.top),
                    target: q.data.target,
                    parent: b(q.data.target).parent()[0]
                };
                b.extend(q.data, p);
                var n = b.data(q.data.target, "draggable").options;
                if (n.onBeforeDrag.call(q.data.target, q) == false) {
                    return
                }
                b(document).bind("mousedown.draggable", q.data, a);
                b(document).bind("mousemove.draggable", q.data, e);
                b(document).bind("mouseup.draggable", q.data, c)
            });

            function i(v) {
                var x = b.data(v.data.target, "draggable");
                var o = x.handle;
                var q = b(o).offset();
                var n = b(o).outerWidth();
                var w = b(o).outerHeight();
                var m = v.pageY - q.top;
                var u = q.left + n - v.pageX;
                var s = q.top + w - v.pageY;
                var p = v.pageX - q.left;
                return Math.min(m, u, s, p) > x.options.edge
            }
        })
    };
    b.fn.draggable.methods = {
        options: function (g) {
            return b.data(g[0], "draggable").options
        },
        proxy: function (g) {
            return b.data(g[0], "draggable").proxy
        },
        enable: function (g) {
            return g.each(function () {
                b(this).draggable({
                    disabled: false
                })
            })
        },
        disable: function (g) {
            return g.each(function () {
                b(this).draggable({
                    disabled: true
                })
            })
        }
    };
    b.fn.draggable.parseOptions = function (g) {
        var h = b(g);
        return b.extend({}, b.parser.parseOptions(g, ["cursor", "handle", "axis",
            {
                revert: "boolean",
                deltaX: "number",
                deltaY: "number",
                edge: "number"
            }]), {
                disabled: (h.attr("disabled") ? true : undefined)
            })
    };
    b.fn.draggable.defaults = {
        proxy: null,
        revert: false,
        cursor: "move",
        deltaX: null,
        deltaY: null,
        handle: null,
        disabled: false,
        edge: 0,
        axis: null,
        onBeforeDrag: function (g) { },
        onStartDrag: function (g) { },
        onDrag: function (g) { },
        onStopDrag: function (g) { }
    };
    b.fn.draggable.isDragging = false
})(jQuery);
(function (b) {
    function a(c) {
        b(c).addClass("droppable");
        b(c).bind("_dragenter", function (d, f) {
            b.data(c, "droppable").options.onDragEnter.apply(c, [d, f])
        });
        b(c).bind("_dragleave", function (f, d) {
            b.data(c, "droppable").options.onDragLeave.apply(c, [f, d])
        });
        b(c).bind("_dragover", function (d, f) {
            b.data(c, "droppable").options.onDragOver.apply(c, [d, f])
        });
        b(c).bind("_drop", function (f, d) {
            b.data(c, "droppable").options.onDrop.apply(c, [f, d])
        })
    }
    b.fn.droppable = function (d, c) {
        if (typeof d == "string") {
            return b.fn.droppable.methods[d](this, c)
        }
        d = d || {};
        return this.each(function () {
            var e = b.data(this, "droppable");
            if (e) {
                b.extend(e.options, d)
            } else {
                a(this);
                b.data(this, "droppable", {
                    options: b.extend({}, b.fn.droppable.defaults, b.fn.droppable.parseOptions(this), d)
                })
            }
        })
    };
    b.fn.droppable.methods = {
        options: function (c) {
            return b.data(c[0], "droppable").options
        },
        enable: function (c) {
            return c.each(function () {
                b(this).droppable({
                    disabled: false
                })
            })
        },
        disable: function (c) {
            return c.each(function () {
                b(this).droppable({
                    disabled: true
                })
            })
        }
    };
    b.fn.droppable.parseOptions = function (d) {
        var c = b(d);
        return b.extend({}, b.parser.parseOptions(d, ["accept"]), {
            disabled: (c.attr("disabled") ? true : undefined)
        })
    };
    b.fn.droppable.defaults = {
        accept: null,
        disabled: false,
        onDragEnter: function (d, c) { },
        onDragOver: function (c, d) { },
        onDragLeave: function (d, c) { },
        onDrop: function (c, d) { }
    }
})(jQuery);
(function (a) {
    a.fn.resizable = function (e, g) {
        if (typeof e == "string") {
            return a.fn.resizable.methods[e](this, g)
        }
        function b(m) {
            var i = m.data;
            var k = a.data(i.target, "resizable").options;
            if (i.dir.indexOf("e") != -1) {
                var j = i.startWidth + m.pageX - i.startX;
                j = Math.min(Math.max(j, k.minWidth), k.maxWidth);
                i.width = j
            }
            if (i.dir.indexOf("s") != -1) {
                var l = i.startHeight + m.pageY - i.startY;
                l = Math.min(Math.max(l, k.minHeight), k.maxHeight);
                i.height = l
            }
            if (i.dir.indexOf("w") != -1) {
                var j = i.startWidth - m.pageX + i.startX;
                j = Math.min(Math.max(j, k.minWidth), k.maxWidth);
                i.width = j;
                i.left = i.startLeft + i.startWidth - i.width
            }
            if (i.dir.indexOf("n") != -1) {
                var l = i.startHeight - m.pageY + i.startY;
                l = Math.min(Math.max(l, k.minHeight), k.maxHeight);
                i.height = l;
                i.top = i.startTop + i.startHeight - i.height
            }
        }
        function d(k) {
            var j = k.data;
            var i = a(j.target);
            i.css({
                left: j.left,
                top: j.top
            });
            if (i.outerWidth() != j.width) {
                i._outerWidth(j.width)
            }
            if (i.outerHeight() != j.height) {
                i._outerHeight(j.height)
            }
        }
        function f(i) {
            a.fn.resizable.isResizing = true;
            a.data(i.data.target, "resizable").options.onStartResize.call(i.data.target, i);
            return false
        }
        function c(i) {
            b(i);
            if (a.data(i.data.target, "resizable").options.onResize.call(i.data.target, i) != false) {
                d(i)
            }
            return false
        }
        function h(i) {
            a.fn.resizable.isResizing = false;
            b(i, true);
            d(i);
            a.data(i.data.target, "resizable").options.onStopResize.call(i.data.target, i);
            a(document).unbind(".resizable");
            a("body").css("cursor", "");
            return false
        }
        return this.each(function () {
            var j = null;
            var k = a.data(this, "resizable");
            if (k) {
                a(this).unbind(".resizable");
                j = a.extend(k.options, e || {})
            } else {
                j = a.extend({}, a.fn.resizable.defaults, a.fn.resizable.parseOptions(this), e || {});
                a.data(this, "resizable", {
                    options: j
                })
            }
            if (j.disabled == true) {
                return
            }
            a(this).bind("mousemove.resizable", {
                target: this
            }, function (m) {
                if (a.fn.resizable.isResizing) {
                    return
                }
                var l = i(m);
                if (l == "") {
                    a(m.data.target).css("cursor", "")
                } else {
                    a(m.data.target).css("cursor", l + "-resize")
                }
            }).bind("mouseleave.resizable", {
                target: this
            }, function (l) {
                a(l.data.target).css("cursor", "")
            }).bind("mousedown.resizable", {
                target: this
            }, function (o) {
                var m = i(o);
                if (m == "") {
                    return
                }
                function n(q) {
                    var p = parseInt(a(o.data.target).css(q));
                    if (isNaN(p)) {
                        return 0
                    } else {
                        return p
                    }
                }
                var l = {
                    target: o.data.target,
                    dir: m,
                    startLeft: n("left"),
                    startTop: n("top"),
                    left: n("left"),
                    top: n("top"),
                    startX: o.pageX,
                    startY: o.pageY,
                    startWidth: a(o.data.target).outerWidth(),
                    startHeight: a(o.data.target).outerHeight(),
                    width: a(o.data.target).outerWidth(),
                    height: a(o.data.target).outerHeight(),
                    deltaWidth: a(o.data.target).outerWidth() - a(o.data.target).width(),
                    deltaHeight: a(o.data.target).outerHeight() - a(o.data.target).height()
                };
                a(document).bind("mousedown.resizable", l, f);
                a(document).bind("mousemove.resizable", l, c);
                a(document).bind("mouseup.resizable", l, h);
                a("body").css("cursor", m + "-resize")
            });

            function i(t) {
                var o = a(t.data.target);
                var l = "";
                var u = o.offset();
                var n = o.outerWidth();
                var p = o.outerHeight();
                var r = j.edge;
                if (t.pageY > u.top && t.pageY < u.top + r) {
                    l += "n"
                } else {
                    if (t.pageY < u.top + p && t.pageY > u.top + p - r) {
                        l += "s"
                    }
                }
                if (t.pageX > u.left && t.pageX < u.left + r) {
                    l += "w"
                } else {
                    if (t.pageX < u.left + n && t.pageX > u.left + n - r) {
                        l += "e"
                    }
                }
                var q = j.handles.split(",");
                for (var m = 0; m < q.length; m++) {
                    var s = q[m].replace(/(^\s*)|(\s*$)/g, "");
                    if (s == "all" || s == l) {
                        return l
                    }
                }
                return ""
            }
        })
    };
    a.fn.resizable.methods = {
        options: function (b) {
            return a.data(b[0], "resizable").options
        },
        enable: function (b) {
            return b.each(function () {
                a(this).resizable({
                    disabled: false
                })
            })
        },
        disable: function (b) {
            return b.each(function () {
                a(this).resizable({
                    disabled: true
                })
            })
        }
    };
    a.fn.resizable.parseOptions = function (b) {
        var c = a(b);
        return a.extend({}, a.parser.parseOptions(b, ["handles",
            {
                minWidth: "number",
                minHeight: "number",
                maxWidth: "number",
                maxHeight: "number",
                edge: "number"
            }]), {
                disabled: (c.attr("disabled") ? true : undefined)
            })
    };
    a.fn.resizable.defaults = {
        disabled: false,
        handles: "n, e, s, w, ne, se, sw, nw, all",
        minWidth: 10,
        minHeight: 10,
        maxWidth: 10000,
        maxHeight: 10000,
        edge: 5,
        onStartResize: function (b) { },
        onResize: function (b) { },
        onStopResize: function (b) { }
    };
    a.fn.resizable.isResizing = false
})(jQuery);
(function (b) {
    function d(e) {
        var f = b.data(e, "linkbutton").options;
        var g = b(e).empty();
        g.addClass("l-btn").removeClass("l-btn-plain l-btn-selected l-btn-plain-selected");
        g.removeClass("l-btn-small l-btn-medium l-btn-large").addClass("l-btn-" + f.size);
        if (f.plain) {
            g.addClass("l-btn-plain")
        }
        if (f.selected) {
            g.addClass(f.plain ? "l-btn-selected l-btn-plain-selected" : "l-btn-selected")
        }
        g.attr("group", f.group || "");
        g.attr("id", f.id || "");
        var h = b('<span class="l-btn-left"></span>').appendTo(g);
        if (f.text) {
            b('<span class="l-btn-text"></span>').html(f.text).appendTo(h)
        } else {
            b('<span class="l-btn-text l-btn-empty">&nbsp;</span>').appendTo(h)
        }
        if (f.iconCls) {
            b('<span class="l-btn-icon">&nbsp;</span>').addClass(f.iconCls).appendTo(h);
            h.addClass("l-btn-icon-" + f.iconAlign)
        }
        g.unbind(".linkbutton").bind("focus.linkbutton", function () {
            if (!f.disabled) {
                b(this).addClass("l-btn-focus")
            }
        }).bind("blur.linkbutton", function () {
            b(this).removeClass("l-btn-focus")
        }).bind("click.linkbutton", function () {
            if (!f.disabled) {
                if (f.toggle) {
                    if (f.selected) {
                        b(this).linkbutton("unselect")
                    } else {
                        b(this).linkbutton("select")
                    }
                }
                f.onClick.call(this)
            }
            return false
        });
        c(e, f.selected);
        a(e, f.disabled)
    }
    function c(e, g) {
        var f = b.data(e, "linkbutton").options;
        if (g) {
            if (f.group) {
                b('a.l-btn[group="' + f.group + '"]').each(function () {
                    var h = b(this).linkbutton("options");
                    if (h.toggle) {
                        b(this).removeClass("l-btn-selected l-btn-plain-selected");
                        h.selected = false
                    }
                })
            }
            b(e).addClass(f.plain ? "l-btn-selected l-btn-plain-selected" : "l-btn-selected");
            f.selected = true
        } else {
            if (!f.group) {
                b(e).removeClass("l-btn-selected l-btn-plain-selected");
                f.selected = false
            }
        }
    }
    function a(h, e) {
        var g = b.data(h, "linkbutton");
        var i = g.options;
        b(h).removeClass("l-btn-disabled l-btn-plain-disabled");
        if (e) {
            i.disabled = true;
            var f = b(h).attr("href");
            if (f) {
                g.href = f;
                b(h).attr("href", "javascript:void(0)")
            }
            if (h.onclick) {
                g.onclick = h.onclick;
                h.onclick = null
            }
            i.plain ? b(h).addClass("l-btn-disabled l-btn-plain-disabled") : b(h).addClass("l-btn-disabled")
        } else {
            i.disabled = false;
            if (g.href) {
                b(h).attr("href", g.href)
            }
            if (g.onclick) {
                h.onclick = g.onclick
            }
        }
    }
    b.fn.linkbutton = function (f, e) {
        if (typeof f == "string") {
            return b.fn.linkbutton.methods[f](this, e)
        }
        f = f || {};
        return this.each(function () {
            var g = b.data(this, "linkbutton");
            if (g) {
                b.extend(g.options, f)
            } else {
                b.data(this, "linkbutton", {
                    options: b.extend({}, b.fn.linkbutton.defaults, b.fn.linkbutton.parseOptions(this), f)
                });
                b(this).removeAttr("disabled")
            }
            d(this)
        })
    };
    b.fn.linkbutton.methods = {
        options: function (e) {
            return b.data(e[0], "linkbutton").options
        },
        enable: function (e) {
            return e.each(function () {
                a(this, false)
            })
        },
        disable: function (e) {
            return e.each(function () {
                a(this, true)
            })
        },
        select: function (e) {
            return e.each(function () {
                c(this, true)
            })
        },
        unselect: function (e) {
            return e.each(function () {
                c(this, false)
            })
        }
    };
    b.fn.linkbutton.parseOptions = function (e) {
        var f = b(e);
        return b.extend({}, b.parser.parseOptions(e, ["id", "iconCls", "iconAlign", "group", "size",
            {
                plain: "boolean",
                toggle: "boolean",
                selected: "boolean"
            }]), {
                disabled: (f.attr("disabled") ? true : undefined),
                text: b.trim(f.html()),
                iconCls: (f.attr("icon") || f.attr("iconCls"))
            })
    };
    b.fn.linkbutton.defaults = {
        id: null,
        disabled: false,
        toggle: false,
        selected: false,
        group: null,
        plain: false,
        text: "",
        iconCls: null,
        iconAlign: "left",
        size: "small",
        onClick: function () { }
    }
})(jQuery);
(function ($) {
    function _81(_82) {
        var _83 = $.data(_82, "pagination");
        var _84 = _83.options;
        var bb = _83.bb = {};
        var _85 = $(_82).addClass("pagination").html('<table cellspacing="0" cellpadding="0" border="0"><tr></tr></table>');
        var tr = _85.find("tr");
        var aa = $.extend([], _84.layout);
        if (!_84.showPageList) {
            _86(aa, "list")
        }
        if (!_84.showRefresh) {
            _86(aa, "refresh")
        }
        if (aa[0] == "sep") {
            aa.shift()
        }
        if (aa[aa.length - 1] == "sep") {
            aa.pop()
        }
        for (var _87 = 0; _87 < aa.length; _87++) {
            var _88 = aa[_87];
            if (_88 == "list") {
                var ps = $('<select class="pagination-page-list"></select>');
                ps.bind("change", function () {
                    _84.pageSize = parseInt($(this).val());
                    _84.onChangePageSize.call(_82, _84.pageSize);
                    _8e(_82, _84.pageNumber)
                });
                for (var i = 0; i < _84.pageList.length; i++) {
                    $("<option></option>").text(_84.pageList[i]).appendTo(ps)
                }
                $("<td></td>").append(ps).appendTo(tr)
            } else {
                if (_88 == "sep") {
                    $('<td><div class="pagination-btn-separator"></div></td>').appendTo(tr)
                } else {
                    if (_88 == "first") {
                        bb.first = _89("first")
                    } else {
                        if (_88 == "prev") {
                            bb.prev = _89("prev")
                        } else {
                            if (_88 == "next") {
                                bb.next = _89("next")
                            } else {
                                if (_88 == "last") {
                                    bb.last = _89("last")
                                } else {
                                    if (_88 == "manual") {
                                        $('<span style="padding-left:6px;"></span>').html(_84.beforePageText).appendTo(tr).wrap("<td></td>");
                                        bb.num = $('<input class="pagination-num" type="text" value="1" size="2">').appendTo(tr).wrap("<td></td>");
                                        bb.num.unbind(".pagination").bind("keydown.pagination", function (e) {
                                            if (e.keyCode == 13) {
                                                var _8a = parseInt($(this).val()) || 1;
                                                _8e(_82, _8a);
                                                return false
                                            }
                                        });
                                        bb.after = $('<span style="padding-right:6px;"></span>').appendTo(tr).wrap("<td></td>")
                                    } else {
                                        if (_88 == "refresh") {
                                            bb.refresh = _89("refresh")
                                        } else {
                                            if (_88 == "links") {
                                                $('<td class="pagination-links"></td>').appendTo(tr)
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if (_84.buttons) {
            $('<td><div class="pagination-btn-separator"></div></td>').appendTo(tr);
            if ($.isArray(_84.buttons)) {
                for (var i = 0; i < _84.buttons.length; i++) {
                    var btn = _84.buttons[i];
                    if (btn == "-") {
                        $('<td><div class="pagination-btn-separator"></div></td>').appendTo(tr)
                    } else {
                        var td = $("<td></td>").appendTo(tr);
                        var a = $('<a href="javascript:void(0)"></a>').appendTo(td);
                        a[0].onclick = eval(btn.handler ||
                            function () { });
                        a.linkbutton($.extend({}, btn, {
                            plain: true
                        }))
                    }
                }
            } else {
                var td = $("<td></td>").appendTo(tr);
                $(_84.buttons).appendTo(td).show()
            }
        }
        $('<div class="pagination-info"></div>').appendTo(_85);
        $('<div style="clear:both;"></div>').appendTo(_85);

        function _89(_8b) {
            var btn = _84.nav[_8b];
            var a = $('<a href="javascript:void(0)"></a>').appendTo(tr);
            a.wrap("<td></td>");
            a.linkbutton({
                iconCls: btn.iconCls,
                plain: true
            }).unbind(".pagination").bind("click.pagination", function () {
                btn.handler.call(_82)
            });
            return a
        }
        function _86(aa, _8c) {
            var _8d = $.inArray(_8c, aa);
            if (_8d >= 0) {
                aa.splice(_8d, 1)
            }
            return aa
        }
    }
    function _8e(_8f, _90) {
        var _91 = $.data(_8f, "pagination").options;
        _92(_8f, {
            pageNumber: _90
        });
        _91.onSelectPage.call(_8f, _91.pageNumber, _91.pageSize)
    }
    function _92(_93, _94) {
        var _95 = $.data(_93, "pagination");
        var _96 = _95.options;
        var bb = _95.bb;
        $.extend(_96, _94 || {});
        var ps = $(_93).find("select.pagination-page-list");
        if (ps.length) {
            ps.val(_96.pageSize + "");
            _96.pageSize = parseInt(ps.val())
        }
        var _97 = Math.ceil(_96.total / _96.pageSize) || 1;
        if (_96.pageNumber < 1) {
            _96.pageNumber = 1
        }
        if (_96.pageNumber > _97) {
            _96.pageNumber = _97
        }
        if (bb.num) {
            bb.num.val(_96.pageNumber)
        }
        if (bb.after) {
            bb.after.html(_96.afterPageText.replace(/{pages}/, _97))
        }
        var td = $(_93).find("td.pagination-links");
        if (td.length) {
            td.empty();
            var _98 = _96.pageNumber - Math.floor(_96.links / 2);
            if (_98 < 1) {
                _98 = 1
            }
            var _99 = _98 + _96.links - 1;
            if (_99 > _97) {
                _99 = _97
            }
            _98 = _99 - _96.links + 1;
            if (_98 < 1) {
                _98 = 1
            }
            for (var i = _98; i <= _99; i++) {
                var a = $('<a class="pagination-link" href="javascript:void(0)"></a>').appendTo(td);
                a.linkbutton({
                    plain: true,
                    text: i
                });
                if (i == _96.pageNumber) {
                    a.linkbutton("select")
                } else {
                    a.unbind(".pagination").bind("click.pagination", {
                        pageNumber: i
                    }, function (e) {
                        _8e(_93, e.data.pageNumber)
                    })
                }
            }
        }
        var _9a = _96.displayMsg;
        _9a = _9a.replace(/{from}/, _96.total == 0 ? 0 : _96.pageSize * (_96.pageNumber - 1) + 1);
        _9a = _9a.replace(/{to}/, Math.min(_96.pageSize * (_96.pageNumber), _96.total));
        _9a = _9a.replace(/{total}/, _96.total);
        $(_93).find("div.pagination-info").html(_9a);
        if (bb.first) {
            bb.first.linkbutton({
                disabled: (_96.pageNumber == 1)
            })
        }
        if (bb.prev) {
            bb.prev.linkbutton({
                disabled: (_96.pageNumber == 1)
            })
        }
        if (bb.next) {
            bb.next.linkbutton({
                disabled: (_96.pageNumber == _97)
            })
        }
        if (bb.last) {
            bb.last.linkbutton({
                disabled: (_96.pageNumber == _97)
            })
        }
        _9b(_93, _96.loading)
    }
    function _9b(_9c, _9d) {
        var _9e = $.data(_9c, "pagination");
        var _9f = _9e.options;
        _9f.loading = _9d;
        if (_9f.showRefresh && _9e.bb.refresh) {
            _9e.bb.refresh.linkbutton({
                iconCls: (_9f.loading ? "pagination-loading" : "pagination-load")
            })
        }
    }
    $.fn.pagination = function (_a0, _a1) {
        if (typeof _a0 == "string") {
            return $.fn.pagination.methods[_a0](this, _a1)
        }
        _a0 = _a0 || {};
        return this.each(function () {
            var _a2;
            var _a3 = $.data(this, "pagination");
            if (_a3) {
                _a2 = $.extend(_a3.options, _a0)
            } else {
                _a2 = $.extend({}, $.fn.pagination.defaults, $.fn.pagination.parseOptions(this), _a0);
                $.data(this, "pagination", {
                    options: _a2
                })
            }
            _81(this);
            _92(this)
        })
    };
    $.fn.pagination.methods = {
        options: function (jq) {
            return $.data(jq[0], "pagination").options
        },
        loading: function (jq) {
            return jq.each(function () {
                _9b(this, true)
            })
        },
        loaded: function (jq) {
            return jq.each(function () {
                _9b(this, false)
            })
        },
        refresh: function (jq, _a4) {
            return jq.each(function () {
                _92(this, _a4)
            })
        },
        select: function (jq, _a5) {
            return jq.each(function () {
                _8e(this, _a5)
            })
        }
    };
    $.fn.pagination.parseOptions = function (_a6) {
        var t = $(_a6);
        return $.extend({}, $.parser.parseOptions(_a6, [{
            total: "number",
            pageSize: "number",
            pageNumber: "number",
            links: "number"
        }, {
            loading: "boolean",
            showPageList: "boolean",
            showRefresh: "boolean"
        }]), {
                pageList: (t.attr("pageList") ? eval(t.attr("pageList")) : undefined)
            })
    };
    var eDispalying = HtmlLang.Write(LangModule.Common, "Displaying", "Displaying");
    var eTo = HtmlLang.Write(LangModule.Common, "to", "to");
    var eItems = HtmlLang.Write(LangModule.Common, "items", "items");
    var eOf = HtmlLang.Write(LangModule.Common, "of", "of");
    $.fn.pagination.defaults = {
        total: 1,
        pageSize: 20,
        pageNumber: 1,
        pageList: [10, 20, 50, 100, 200],
        loading: false,
        buttons: null,
        showPageList: true,
        showRefresh: true,
        links: 10,
        layout: ["list", "sep", "first", "prev", "sep", "manual", "sep", "next", "last", "sep", "refresh"],
        onSelectPage: function (_a7, _a8) { },
        onBeforeRefresh: function (_a9, _aa) { },
        onRefresh: function (_ab, _ac) { },
        onChangePageSize: function (_ad) { },
        beforePageText: HtmlLang.Write(LangModule.Common, "Page", "Page"),
        afterPageText: eOf + " {pages}",
        displayMsg: eDispalying + " {from} " + eTo + " {to} " + eOf + " {total} " + eItems,
        nav: {
            first: {
                iconCls: "pagination-first",
                handler: function () {
                    var _ae = $(this).pagination("options");
                    if (_ae.pageNumber > 1) {
                        $(this).pagination("select", 1)
                    }
                }
            },
            prev: {
                iconCls: "pagination-prev",
                handler: function () {
                    var _af = $(this).pagination("options");
                    if (_af.pageNumber > 1) {
                        $(this).pagination("select", _af.pageNumber - 1)
                    }
                }
            },
            next: {
                iconCls: "pagination-next",
                handler: function () {
                    var _b0 = $(this).pagination("options");
                    var _b1 = Math.ceil(_b0.total / _b0.pageSize);
                    if (_b0.pageNumber < _b1) {
                        $(this).pagination("select", _b0.pageNumber + 1)
                    }
                }
            },
            last: {
                iconCls: "pagination-last",
                handler: function () {
                    var _b2 = $(this).pagination("options");
                    var _b3 = Math.ceil(_b2.total / _b2.pageSize);
                    if (_b2.pageNumber < _b3) {
                        $(this).pagination("select", _b3)
                    }
                }
            },
            refresh: {
                iconCls: "pagination-refresh",
                handler: function () {
                    var _b4 = $(this).pagination("options");
                    if (_b4.onBeforeRefresh.call(this, _b4.pageNumber, _b4.pageSize) != false) {
                        $(this).pagination("select", _b4.pageNumber);
                        _b4.onRefresh.call(this, _b4.pageNumber, _b4.pageSize)
                    }
                }
            }
        }
    }
})(jQuery);
(function (g) {
    function M(P) {
        var O = g(P);
        O.addClass("tree");
        return O
    }
    function s(P) {
        var O = g.data(P, "tree").options;
        g(P).unbind().bind("mouseover", function (S) {
            var Q = g(S.target);
            var R = Q.closest("div.tree-node");
            if (!R.length) {
                return
            }
            R.addClass("tree-node-hover");
            if (Q.hasClass("tree-hit")) {
                if (Q.hasClass("tree-expanded")) {
                    Q.addClass("tree-expanded-hover")
                } else {
                    Q.addClass("tree-collapsed-hover")
                }
            }
            S.stopPropagation()
        }).bind("mouseout", function (S) {
            var Q = g(S.target);
            var R = Q.closest("div.tree-node");
            if (!R.length) {
                return
            }
            R.removeClass("tree-node-hover");
            if (Q.hasClass("tree-hit")) {
                if (Q.hasClass("tree-expanded")) {
                    Q.removeClass("tree-expanded-hover")
                } else {
                    Q.removeClass("tree-collapsed-hover")
                }
            }
            S.stopPropagation()
        }).bind("click", function (S) {
            var Q = g(S.target);
            var R = Q.closest("div.tree-node");
            if (!R.length) {
                return
            }
            if (Q.hasClass("tree-folder")) {
                n(P, R[0]);
                return false
            } else {
                if (Q.hasClass("tree-checkbox")) {
                    x(P, R[0], !Q.hasClass("tree-checkbox1"));
                    return false
                } else {
                    k(P, R[0]);
                    O.onClick.call(P, u(P, R[0]))
                }
            }
            S.stopPropagation()
        }).bind("dblclick", function (Q) {
            var R = g(Q.target).closest("div.tree-node");
            if (!R.length) {
                return
            }
            k(P, R[0]);
            O.onDblClick.call(P, u(P, R[0]));
            Q.stopPropagation()
        }).bind("contextmenu", function (R) {
            var Q = g(R.target).closest("div.tree-node");
            if (!Q.length) {
                return
            }
            O.onContextMenu.call(P, R, u(P, Q[0]));
            R.stopPropagation()
        })
    }
    function w(O) {
        var P = g.data(O, "tree").options;
        P.dnd = false;
        var Q = g(O).find("div.tree-node");
        Q.draggable("disable");
        Q.css("cursor", "pointer")
    }
    function p(R) {
        var T = g.data(R, "tree");
        var U = T.options;
        var P = T.tree;
        T.disabledNodes = [];
        U.dnd = true;
        P.find("div.tree-node").draggable({
            disabled: false,
            revert: true,
            cursor: "pointer",
            proxy: function (X) {
                var W = g('<div class="tree-node-proxy"></div>').appendTo("body");
                W.html('<span class="tree-dnd-icon tree-dnd-no">&nbsp;</span>' + g(X).find(".tree-title").html());
                W.hide();
                return W
            },
            deltaX: 15,
            deltaY: 15,
            onBeforeDrag: function (W) {
                if (U.onBeforeDrag.call(R, u(R, this)) == false) {
                    return false
                }
                if (g(W.target).hasClass("tree-hit") || g(W.target).hasClass("tree-checkbox")) {
                    return false
                }
                if (W.which != 1) {
                    return false
                }
                g(this).next("ul").find("div.tree-node").droppable({
                    accept: "no-accept"
                });
                var X = g(this).find("span.tree-indent");
                if (X.length) {
                    W.data.offsetWidth -= X.length * X.width()
                }
            },
            onStartDrag: function () {
                g(this).draggable("proxy").css({
                    left: -10000,
                    top: -10000
                });
                U.onStartDrag.call(R, u(R, this));
                var W = u(R, this);
                if (W.id == undefined) {
                    W.id = "easyui_tree_node_id_temp";
                    E(R, W)
                }
                T.draggingNodeId = W.id
            },
            onDrag: function (ab) {
                var W = ab.pageX,
                    X = ab.pageY,
                    Z = ab.data.startX,
                    Y = ab.data.startY;
                var aa = Math.sqrt((W - Z) * (W - Z) + (X - Y) * (X - Y));
                if (aa > 3) {
                    g(this).draggable("proxy").show()
                }
                this.pageY = ab.pageY
            },
            onStopDrag: function () {
                g(this).next("ul").find("div.tree-node").droppable({
                    accept: "div.tree-node"
                });
                for (var W = 0; W < T.disabledNodes.length; W++) {
                    g(T.disabledNodes[W]).droppable("enable")
                }
                T.disabledNodes = [];
                var X = D(R, T.draggingNodeId);
                if (X && X.id == "easyui_tree_node_id_temp") {
                    X.id = "";
                    E(R, X)
                }
                U.onStopDrag.call(R, X)
            }
        }).droppable({
            accept: "div.tree-node",
            onDragEnter: function (X, W) {
                if (U.onDragEnter.call(R, this, O(W)) == false) {
                    S(W, false);
                    g(this).removeClass("tree-node-append tree-node-top tree-node-bottom");
                    g(this).droppable("disable");
                    T.disabledNodes.push(this)
                }
            },
            onDragOver: function (aa, Z) {
                if (g(this).droppable("options").disabled) {
                    return
                }
                var X = Z.pageY;
                var W = g(this).offset().top;
                var Y = W + g(this).outerHeight();
                S(Z, true);
                g(this).removeClass("tree-node-append tree-node-top tree-node-bottom");
                if (X > W + (Y - W) / 2) {
                    if (Y - X < 5) {
                        g(this).addClass("tree-node-bottom")
                    } else {
                        g(this).addClass("tree-node-append")
                    }
                } else {
                    if (X - W < 5) {
                        g(this).addClass("tree-node-top")
                    } else {
                        g(this).addClass("tree-node-append")
                    }
                }
                if (U.onDragOver.call(R, this, O(Z)) == false) {
                    S(Z, false);
                    g(this).removeClass("tree-node-append tree-node-top tree-node-bottom");
                    g(this).droppable("disable");
                    T.disabledNodes.push(this)
                }
            },
            onDragLeave: function (W, X) {
                S(X, false);
                g(this).removeClass("tree-node-append tree-node-top tree-node-bottom");
                U.onDragLeave.call(R, this, O(X))
            },
            onDrop: function (aa, W) {
                var Y = this;
                var X, Z;
                if (g(this).hasClass("tree-node-append")) {
                    X = Q;
                    Z = "append"
                } else {
                    X = V;
                    Z = g(this).hasClass("tree-node-top") ? "top" : "bottom"
                }
                if (U.onBeforeDrop.call(R, Y, O(W), Z) == false) {
                    g(this).removeClass("tree-node-append tree-node-top tree-node-bottom");
                    return
                }
                X(W, Y, Z);
                g(this).removeClass("tree-node-append tree-node-top tree-node-bottom")
            }
        });

        function O(X, W) {
            return g(X).closest("ul.tree").tree(W ? "pop" : "getData", X)
        }
        function S(X, W) {
            var Y = g(X).draggable("proxy").find("span.tree-dnd-icon");
            Y.removeClass("tree-dnd-yes tree-dnd-no").addClass(W ? "tree-dnd-yes" : "tree-dnd-no")
        }
        function Q(Y, W) {
            if (u(R, W).state == "closed") {
                C(R, W, function () {
                    X()
                })
            } else {
                X()
            }
            function X() {
                var Z = O(Y, true);
                g(R).tree("append", {
                    parent: W,
                    data: [Z]
                });
                U.onDrop.call(R, W, Z, "append")
            }
        }
        function V(Z, Y, aa) {
            var W = {};
            if (aa == "top") {
                W.before = Y
            } else {
                W.after = Y
            }
            var X = O(Z, true);
            W.data = X;
            g(R).tree("insert", W);
            U.onDrop.call(R, Y, X, aa)
        }
    }
    function x(V, P, W) {
        var O = g.data(V, "tree").options;
        if (!O.checkbox) {
            return
        }
        var Q = u(V, P);
        if (O.onBeforeCheck.call(V, Q, W) == false) {
            return
        }
        var S = g(P);
        var R = S.find(".tree-checkbox");
        R.removeClass("tree-checkbox0 tree-checkbox1 tree-checkbox2");
        if (W) {
            R.addClass("tree-checkbox1")
        } else {
            R.addClass("tree-checkbox0")
        }
        if (O.cascadeCheck) {
            U(S);
            T(S)
        }
        O.onCheck.call(V, Q, W);

        function T(Y) {
            var X = Y.next().find(".tree-checkbox");
            X.removeClass("tree-checkbox0 tree-checkbox1 tree-checkbox2");
            if (Y.find(".tree-checkbox").hasClass("tree-checkbox1")) {
                X.addClass("tree-checkbox1")
            } else {
                X.addClass("tree-checkbox0")
            }
        }
        function U(Z) {
            var aa = m(V, Z[0]);
            if (aa) {
                var X = g(aa.target).find(".tree-checkbox");
                X.removeClass("tree-checkbox0 tree-checkbox1 tree-checkbox2");
                if (Y(Z)) {
                    X.addClass("tree-checkbox1")
                } else {
                    if (ab(Z)) {
                        X.addClass("tree-checkbox0")
                    } else {
                        X.addClass("tree-checkbox2")
                    }
                }
                U(g(aa.target))
            }
            function Y(ae) {
                var ac = ae.find(".tree-checkbox");
                if (ac.hasClass("tree-checkbox0") || ac.hasClass("tree-checkbox2")) {
                    return false
                }
                var ad = true;
                ae.parent().siblings().each(function () {
                    if (!g(this).children("div.tree-node").children(".tree-checkbox").hasClass("tree-checkbox1")) {
                        ad = false
                    }
                });
                return ad
            }
            function ab(ae) {
                var ac = ae.find(".tree-checkbox");
                if (ac.hasClass("tree-checkbox1") || ac.hasClass("tree-checkbox2")) {
                    return false
                }
                var ad = true;
                ae.parent().siblings().each(function () {
                    if (!g(this).children("div.tree-node").children(".tree-checkbox").hasClass("tree-checkbox0")) {
                        ad = false
                    }
                });
                return ad
            }
        }
    }
    function j(P, R) {
        var O = g.data(P, "tree").options;
        if (!O.checkbox) {
            return
        }
        var W = g(R);
        if (F(P, R)) {
            var S = W.find(".tree-checkbox");
            if (S.length) {
                if (S.hasClass("tree-checkbox1")) {
                    x(P, R, true)
                } else {
                    x(P, R, false)
                }
            } else {
                if (O.onlyLeafCheck) {
                    g('<span class="tree-checkbox tree-checkbox0"></span>').insertBefore(W.find(".tree-title"))
                }
            }
        } else {
            var S = W.find(".tree-checkbox");
            if (O.onlyLeafCheck) {
                S.remove()
            } else {
                if (S.hasClass("tree-checkbox1")) {
                    x(P, R, true)
                } else {
                    if (S.hasClass("tree-checkbox2")) {
                        var V = true;
                        var T = true;
                        var Q = i(P, R);
                        for (var U = 0; U < Q.length; U++) {
                            if (Q[U].checked) {
                                T = false
                            } else {
                                V = false
                            }
                        }
                        if (V) {
                            x(P, R, true)
                        }
                        if (T) {
                            x(P, R, false)
                        }
                    }
                }
            }
        }
    }
    function l(Z, X, Y, T) {
        var aa = g.data(Z, "tree");
        var S = aa.options;
        var W = g(X).prevAll("div.tree-node:first");
        Y = S.loadFilter.call(Z, Y, W[0]);
        var O = d(Z, "domId", W.attr("id"));
        if (!T) {
            O ? O.children = Y : aa.data = Y;
            g(X).empty()
        } else {
            if (O) {
                O.children ? O.children = O.children.concat(Y) : O.children = Y
            } else {
                aa.data = aa.data.concat(Y)
            }
        }
        S.view.render.call(S.view, Z, X, Y);
        if (S.dnd) {
            p(Z)
        }
        if (O) {
            E(Z, O)
        }
        var Q = [];
        var R = [];
        for (var V = 0; V < Y.length; V++) {
            var P = Y[V];
            if (!P.checked) {
                Q.push(P)
            }
        }
        N(Y, function (ab) {
            if (ab.checked) {
                R.push(ab)
            }
        });
        var U = S.onCheck;
        S.onCheck = function () { };
        if (Q.length) {
            x(Z, g("#" + Q[0].domId)[0], false)
        }
        for (var V = 0; V < R.length; V++) {
            x(Z, g("#" + R[V].domId)[0], true)
        }
        S.onCheck = U;
        setTimeout(function () {
            J(Z, Z)
        }, 0);
        S.onLoadSuccess.call(Z, O, Y)
    }
    function J(U, O, P) {
        var S = g.data(U, "tree").options;
        if (S.lines) {
            g(U).addClass("tree-lines")
        } else {
            g(U).removeClass("tree-lines");
            return
        }
        if (!P) {
            P = true;
            g(U).find("span.tree-indent").removeClass("tree-line tree-join tree-joinbottom");
            g(U).find("div.tree-node").removeClass("tree-node-last tree-root-first tree-root-one");
            var T = g(U).tree("getRoots");
            if (T.length > 1) {
                g(T[0].target).addClass("tree-root-first")
            } else {
                if (T.length == 1) {
                    g(T[0].target).addClass("tree-root-one")
                }
            }
        }
        g(O).children("li").each(function () {
            var W = g(this).children("div.tree-node");
            var X = W.next("ul");
            if (X.length) {
                if (g(this).next().length) {
                    Q(W)
                }
                J(U, X, P)
            } else {
                V(W)
            }
        });
        var R = g(O).children("li:last").children("div.tree-node").addClass("tree-node-last");
        R.children("span.tree-join").removeClass("tree-join").addClass("tree-joinbottom");

        function V(X, Y) {
            var W = X.find("span.tree-icon");
            W.prev("span.tree-indent").addClass("tree-join")
        }
        function Q(W) {
            var X = W.find("span.tree-indent, span.tree-hit").length;
            W.next().find("div.tree-node").each(function () {
                g(this).children("span:eq(" + (X - 1) + ")").addClass("tree-line")
            })
        }
    }
    function o(Q, U, W, S) {
        var T = g.data(Q, "tree").options;
        W = W || {};
        var P = null;
        if (Q != U) {
            var V = g(U).prev();
            P = u(Q, V[0])
        }
        if (T.onBeforeLoad.call(Q, P, W) == false) {
            return
        }
        var O = g(U).prev().children("span.tree-folder");
        O.addClass("tree-loading");
        var R = T.loader.call(Q, W, function (X) {
            if (X) {
                X = mText.jsonDecode(X, _.htmlDecode)
            }
            O.removeClass("tree-loading");
            l(Q, U, X);
            if (S) {
                S()
            }
        }, function () {
            O.removeClass("tree-loading");
            T.onLoadError.apply(Q, arguments);
            if (S) {
                S()
            }
        });
        if (R == false) {
            O.removeClass("tree-loading")
        }
    }
    function C(Q, O, V) {
        var R = g.data(Q, "tree").options;
        var S = g(O).children("span.tree-hit");
        if (S.length == 0) {
            return
        }
        if (S.hasClass("tree-expanded")) {
            return
        }
        var U = u(Q, O);
        if (R.onBeforeExpand.call(Q, U) == false) {
            return
        }
        S.removeClass("tree-collapsed tree-collapsed-hover").addClass("tree-expanded");
        S.next().addClass("tree-folder-open");
        var T = g(O).next();
        if (T.length) {
            if (R.animate) {
                T.slideDown("normal", function () {
                    U.state = "open";
                    R.onExpand.call(Q, U);
                    if (V) {
                        V()
                    }
                })
            } else {
                T.css("display", "block");
                U.state = "open";
                R.onExpand.call(Q, U);
                if (V) {
                    V()
                }
            }
        } else {
            var P = g('<ul style="display:none"></ul>').insertAfter(O);
            o(Q, P[0], {
                id: U.id
            }, function () {
                if (P.is(":empty")) {
                    P.remove()
                }
                if (R.animate) {
                    P.slideDown("normal", function () {
                        U.state = "open";
                        R.onExpand.call(Q, U);
                        if (V) {
                            V()
                        }
                    })
                } else {
                    P.css("display", "block");
                    U.state = "open";
                    R.onExpand.call(Q, U);
                    if (V) {
                        V()
                    }
                }
            })
        }
    }
    function H(R, P) {
        var Q = g.data(R, "tree").options;
        var O = g(P).children("span.tree-hit");
        if (O.length == 0) {
            return
        }
        if (O.hasClass("tree-collapsed")) {
            return
        }
        var T = u(R, P);
        if (Q.onBeforeCollapse.call(R, T) == false) {
            return
        }
        O.removeClass("tree-expanded tree-expanded-hover").addClass("tree-collapsed");
        O.next().removeClass("tree-folder-open");
        var S = g(P).next();
        if (Q.animate) {
            S.slideUp("normal", function () {
                T.state = "closed";
                Q.onCollapse.call(R, T)
            })
        } else {
            S.css("display", "none");
            T.state = "closed";
            Q.onCollapse.call(R, T)
        }
    }
    function n(P, Q) {
        var O = g(Q).children("span.tree-hit");
        if (O.length == 0) {
            return
        }
        if (O.hasClass("tree-expanded")) {
            H(P, Q)
        } else {
            C(P, Q)
        }
    }
    function z(Q, O) {
        var R = i(Q, O);
        if (O) {
            R.unshift(u(Q, O))
        }
        for (var P = 0; P < R.length; P++) {
            C(Q, R[P].target)
        }
    }
    function y(R, S) {
        var Q = [];
        var O = m(R, S);
        while (O) {
            Q.unshift(O);
            O = m(R, O.target)
        }
        for (var P = 0; P < Q.length; P++) {
            C(R, Q[P].target)
        }
    }
    function c(P, T) {
        var S = g(P).parent();
        while (S[0].tagName != "BODY" && S.css("overflow-y") != "auto") {
            S = S.parent()
        }
        var Q = g(T);
        var O = Q.offset().top;
        if (S[0].tagName != "BODY") {
            var R = S.offset().top;
            if (O < R) {
                S.scrollTop(S.scrollTop() + O - R)
            } else {
                if (O + Q.outerHeight() > R + S.outerHeight() - 18) {
                    S.scrollTop(S.scrollTop() + O + Q.outerHeight() - R - S.outerHeight() + 18)
                }
            }
        } else {
            S.scrollTop(O)
        }
    }
    function L(P, R) {
        var O = i(P, R);
        if (R) {
            O.unshift(u(P, R))
        }
        for (var Q = 0; Q < O.length; Q++) {
            H(P, O[Q].target)
        }
    }
    function B(R, P) {
        var U = g(P.parent);
        var O = P.data;
        if (!O) {
            return
        }
        O = g.isArray(O) ? O : [O];
        if (!O.length) {
            return
        }
        var T;
        if (U.length == 0) {
            T = g(R)
        } else {
            if (F(R, U[0])) {
                var Q = U.find("span.tree-icon");
                Q.removeClass("tree-file").addClass("tree-folder tree-folder-open");
                var S = g('<span class="tree-hit tree-expanded"></span>').insertBefore(Q);
                if (S.prev().length) {
                    S.prev().remove()
                }
            }
            T = U.next();
            if (!T.length) {
                T = g("<ul></ul>").insertAfter(U)
            }
        }
        l(R, T[0], O, true);
        j(R, T.prev())
    }
    function I(R, W) {
        var Q = W.before || W.after;
        var S = m(R, Q);
        var O = W.data;
        if (!O) {
            return
        }
        O = g.isArray(O) ? O : [O];
        if (!O.length) {
            return
        }
        B(R, {
            parent: (S ? S.target : null),
            data: O
        });
        var V = S ? S.children : g(R).tree("getRoots");
        for (var U = 0; U < V.length; U++) {
            if (V[U].domId == g(Q).attr("id")) {
                for (var P = O.length - 1; P >= 0; P--) {
                    V.splice((W.before ? U : (U + 1)), 0, O[P])
                }
                V.splice(V.length - O.length, O.length);
                break
            }
        }
        var T = g();
        for (var U = 0; U < O.length; U++) {
            T = T.add(g("#" + O[U].domId).parent())
        }
        if (W.before) {
            T.insertBefore(g(Q).parent())
        } else {
            T.insertAfter(g(Q).parent())
        }
    }
    function G(O, Q) {
        var S = P(Q);
        g(Q).parent().remove();
        if (S) {
            if (!S.children || !S.children.length) {
                var R = g(S.target);
                R.find(".tree-icon").removeClass("tree-folder").addClass("tree-file");
                R.find(".tree-hit").remove();
                g('<span class="tree-indent"></span>').prependTo(R);
                R.next().remove()
            }
            E(O, S);
            j(O, S.target)
        }
        J(O, O);

        function P(V) {
            var U = g(V).attr("id");
            var X = m(O, V);
            var T = X ? X.children : g.data(O, "tree").data;
            for (var W = 0; W < T.length; W++) {
                if (T[W].domId == U) {
                    T.splice(W, 1);
                    break
                }
            }
            return X
        }
    }
    function E(Q, P) {
        var R = g.data(Q, "tree").options;
        var T = g(P.target);
        var O = u(Q, P.target);
        var S = O.checked;
        if (O.iconCls) {
            T.find(".tree-icon").removeClass(O.iconCls)
        }
        g.extend(O, P);
        T.find(".tree-title").html(R.formatter.call(Q, O));
        if (O.iconCls) {
            T.find(".tree-icon").addClass(O.iconCls)
        }
        if (S != O.checked) {
            x(Q, P.target, O.checked)
        }
    }
    function a(O) {
        var P = t(O);
        return P.length ? P[0] : null
    }
    function t(Q) {
        var P = g.data(Q, "tree").data;
        for (var O = 0; O < P.length; O++) {
            b(P[O])
        }
        return P
    }
    function i(S, P) {
        var R = [];
        var O = u(S, P);
        var Q = O ? O.children : g.data(S, "tree").data;
        N(Q, function (T) {
            R.push(b(T))
        });
        return R
    }
    function m(O, P) {
        var Q = g(P).closest("ul").prevAll("div.tree-node:first");
        return u(O, Q[0])
    }
    function h(Q, T) {
        T = T || "checked";
        if (!g.isArray(T)) {
            T = [T]
        }
        var O = [];
        for (var P = 0; P < T.length; P++) {
            var S = T[P];
            if (S == "checked") {
                O.push("span.tree-checkbox1")
            } else {
                if (S == "unchecked") {
                    O.push("span.tree-checkbox0")
                } else {
                    if (S == "indeterminate") {
                        O.push("span.tree-checkbox2")
                    }
                }
            }
        }
        var R = [];
        g(Q).find(O.join(",")).each(function () {
            var U = g(this).parent();
            R.push(u(Q, U[0]))
        });
        return R
    }
    function A(P) {
        var O = g(P).find("div.tree-node-selected");
        return O.length ? u(P, O[0]) : null
    }
    function v(O, P) {
        var Q = u(O, P);
        if (Q && Q.children) {
            N(Q.children, function (R) {
                b(R)
            })
        }
        return Q
    }
    function u(O, P) {
        return d(O, "domId", g(P).attr("id"))
    }
    function D(P, O) {
        return d(P, "id", O)
    }
    function d(P, R, O) {
        var S = g.data(P, "tree").data;
        var Q = null;
        N(S, function (T) {
            if (T[R] == O) {
                Q = b(T);
                return false
            }
        });
        return Q
    }
    function b(O) {
        var P = g("#" + O.domId);
        O.target = P[0];
        O.checked = P.find(".tree-checkbox").hasClass("tree-checkbox1");
        return O
    }
    function N(O, P) {
        var S = [];
        for (var Q = 0; Q < O.length; Q++) {
            S.push(O[Q])
        }
        while (S.length) {
            var R = S.shift();
            if (P(R) == false) {
                return
            }
            if (R.children) {
                for (var Q = R.children.length - 1; Q >= 0; Q--) {
                    S.unshift(R.children[Q])
                }
            }
        }
    }
    function k(R, P) {
        var O = g.data(R, "tree").options;
        var Q = u(R, P);
        if (Q && Q.text) {
            Q.text = Q.text.replace(/&amp;/g, "&");
            Q.text = Q.text.replace(/&quot;/g, '"');
            Q.text = Q.text.replace(/&#39;/g, "'");
            Q.text = Q.text.replace(/&lt;/g, "<");
            Q.text = Q.text.replace(/&gt;/g, ">")
        }
        if (O.onBeforeSelect.call(R, Q) == false) {
            return
        }
        g(R).find("div.tree-node-selected").removeClass("tree-node-selected");
        g(P).addClass("tree-node-selected");
        O.onSelect.call(R, Q)
    }
    function F(O, P) {
        return g(P).children("span.tree-hit").length == 0
    }
    function e(S, O) {
        var R = g.data(S, "tree").options;
        var U = u(S, O);
        if (R.onBeforeEdit.call(S, U) == false) {
            return
        }
        g(O).css("position", "relative");
        var T = g(O).find(".tree-title");
        var P = T.outerWidth();
        T.empty();
        var Q = g('<input class="tree-editor">').appendTo(T);
        Q.val(U.text).focus();
        Q.width(P + 20);
        Q.height(document.compatMode == "CSS1Compat" ? (18 - (Q.outerHeight() - Q.height())) : 18);
        Q.bind("click", function (V) {
            return false
        }).bind("mousedown", function (V) {
            V.stopPropagation()
        }).bind("mousemove", function (V) {
            V.stopPropagation()
        }).bind("keydown", function (V) {
            if (V.keyCode == 13) {
                q(S, O);
                return false
            } else {
                if (V.keyCode == 27) {
                    r(S, O);
                    return false
                }
            }
        }).bind("blur", function (V) {
            V.stopPropagation();
            q(S, O)
        })
    }
    function q(Q, O) {
        var R = g.data(Q, "tree").options;
        g(O).css("position", "");
        var S = g(O).find("input.tree-editor");
        var P = S.val();
        S.remove();
        var T = u(Q, O);
        T.text = P;
        E(Q, T);
        R.onAfterEdit.call(Q, T)
    }
    function r(Q, R) {
        var O = g.data(Q, "tree").options;
        g(R).css("position", "");
        g(R).find("input.tree-editor").remove();
        var P = u(Q, R);
        E(Q, P);
        O.onCancelEdit.call(Q, P)
    }
    g.fn.tree = function (O, P) {
        if (typeof O == "string") {
            return g.fn.tree.methods[O](this, P)
        }
        var O = O || {};
        return this.each(function () {
            var S = g.data(this, "tree");
            var Q;
            if (S) {
                Q = g.extend(S.options, O);
                S.options = Q
            } else {
                Q = g.extend({}, g.fn.tree.defaults, g.fn.tree.parseOptions(this), O);
                g.data(this, "tree", {
                    options: Q,
                    tree: M(this),
                    data: []
                });
                var R = g.fn.tree.parseData(this);
                if (R.length) {
                    l(this, this, R)
                }
            }
            s(this);
            if (Q.data) {
                l(this, this, g.extend(true, [], Q.data))
            }
            o(this, this)
        })
    };
    g.fn.tree.methods = {
        options: function (O) {
            return g.data(O[0], "tree").options
        },
        loadData: function (O, P) {
            return O.each(function () {
                l(this, this, P)
            })
        },
        getNode: function (O, P) {
            return u(O[0], P)
        },
        getData: function (O, P) {
            return v(O[0], P)
        },
        reload: function (O, P) {
            return O.each(function () {
                if (P) {
                    var Q = g(P);
                    var R = Q.children("span.tree-hit");
                    R.removeClass("tree-expanded tree-expanded-hover").addClass("tree-collapsed");
                    Q.next().remove();
                    C(this, P)
                } else {
                    g(this).empty();
                    o(this, this)
                }
            })
        },
        getRoot: function (O) {
            return a(O[0])
        },
        getRoots: function (O) {
            return t(O[0])
        },
        getParent: function (O, P) {
            return m(O[0], P)
        },
        getChildren: function (O, P) {
            return i(O[0], P)
        },
        getChecked: function (O, P) {
            return h(O[0], P)
        },
        getSelected: function (O) {
            return A(O[0])
        },
        isLeaf: function (O, P) {
            return F(O[0], P)
        },
        find: function (O, P) {
            return D(O[0], P)
        },
        select: function (O, P) {
            return O.each(function () {
                k(this, P)
            })
        },
        check: function (O, P) {
            return O.each(function () {
                x(this, P, true)
            })
        },
        uncheck: function (O, P) {
            return O.each(function () {
                x(this, P, false)
            })
        },
        collapse: function (O, P) {
            return O.each(function () {
                H(this, P)
            })
        },
        expand: function (O, P) {
            return O.each(function () {
                C(this, P)
            })
        },
        collapseAll: function (O, P) {
            return O.each(function () {
                L(this, P)
            })
        },
        expandAll: function (O, P) {
            return O.each(function () {
                z(this, P)
            })
        },
        expandTo: function (O, P) {
            return O.each(function () {
                y(this, P)
            })
        },
        scrollTo: function (O, P) {
            return O.each(function () {
                c(this, P)
            })
        },
        toggle: function (O, P) {
            return O.each(function () {
                n(this, P)
            })
        },
        append: function (O, P) {
            return O.each(function () {
                B(this, P)
            })
        },
        insert: function (O, P) {
            return O.each(function () {
                I(this, P)
            })
        },
        remove: function (O, P) {
            return O.each(function () {
                G(this, P)
            })
        },
        pop: function (Q, O) {
            var P = Q.tree("getData", O);
            Q.tree("remove", O);
            return P
        },
        update: function (O, P) {
            return O.each(function () {
                E(this, P)
            })
        },
        enableDnd: function (O) {
            return O.each(function () {
                p(this)
            })
        },
        disableDnd: function (O) {
            return O.each(function () {
                w(this)
            })
        },
        beginEdit: function (O, P) {
            return O.each(function () {
                e(this, P)
            })
        },
        endEdit: function (O, P) {
            return O.each(function () {
                q(this, P)
            })
        },
        cancelEdit: function (O, P) {
            return O.each(function () {
                r(this, P)
            })
        }
    };
    g.fn.tree.parseOptions = function (O) {
        var P = g(O);
        return g.extend({}, g.parser.parseOptions(O, ["url", "method",
            {
                checkbox: "boolean",
                cascadeCheck: "boolean",
                onlyLeafCheck: "boolean"
            }, {
                animate: "boolean",
                lines: "boolean",
                dnd: "boolean"
            }]))
    };
    g.fn.tree.parseData = function (Q) {
        var O = [];
        P(O, g(Q));
        return O;

        function P(S, R) {
            R.children("li").each(function () {
                var T = g(this);
                var U = g.extend({}, g.parser.parseOptions(this, ["id", "iconCls", "state"]), {
                    checked: (T.attr("checked") ? true : undefined)
                });
                U.text = T.children("span").html();
                if (!U.text) {
                    U.text = T.html()
                }
                var V = T.children("ul");
                if (V.length) {
                    U.children = [];
                    P(U.children, V)
                }
                S.push(U)
            })
        }
    };
    var K = 1;
    var f = {
        render: function (U, S, P) {
            var R = g.data(U, "tree").options;
            var O = g(S).prev("div.tree-node").find("span.tree-indent, span.tree-hit").length;
            var T = Q(O, P);
            g(S).append(T.join(""));

            function Q(X, V) {
                var ab = [];
                for (var Y = 0; Y < V.length; Y++) {
                    var ac = V[Y];
                    if (ac.state != "open" && ac.state != "closed") {
                        ac.state = "open"
                    }
                    ac.domId = "_easyui_tree_" + K++;
                    ab.push("<li>");
                    ab.push('<div id="' + ac.domId + '" class="tree-node">');
                    for (var W = 0; W < X; W++) {
                        ab.push('<span class="tree-indent"></span>')
                    }
                    var Z = false;
                    if (ac.state == "closed") {
                        ab.push('<span class="tree-hit tree-collapsed"></span>');
                        ab.push('<span class="tree-icon tree-folder ' + (ac.iconCls ? ac.iconCls : "") + '"></span>')
                    } else {
                        if (ac.children && ac.children.length) {
                            ab.push('<span class="tree-hit tree-expanded"></span>');
                            ab.push('<span class="tree-icon tree-folder tree-folder-open ' + (ac.iconCls ? ac.iconCls : "") + '"></span>')
                        } else {
                            ab.push('<span class="tree-indent"></span>');
                            ab.push('<span class="tree-icon tree-file ' + (ac.iconCls ? ac.iconCls : "") + '"></span>');
                            Z = true
                        }
                    }
                    if (R.checkbox) {
                        if ((!R.onlyLeafCheck) || Z) {
                            ab.push('<span class="tree-checkbox tree-checkbox0"></span>')
                        }
                    }
                    ab.push('<span class="tree-title">' + mText.encode(R.formatter.call(U, ac)) + "</span>");
                    ab.push("</div>");
                    if (ac.children && ac.children.length) {
                        var aa = Q(X + 1, ac.children);
                        ab.push('<ul style="display:' + (ac.state == "closed" ? "none" : "block") + '">');
                        ab = ab.concat(aa);
                        ab.push("</ul>")
                    }
                    ab.push("</li>")
                }
                return ab
            }
        }
    };
    g.fn.tree.defaults = {
        url: null,
        method: "post",
        animate: false,
        checkbox: false,
        cascadeCheck: true,
        onlyLeafCheck: false,
        lines: false,
        dnd: false,
        data: null,
        formatter: function (O) {
            return O.text
        },
        loader: function (Q, R, P) {
            var O = g(this).tree("options");
            if (!O.url) {
                return false
            }
            g.ajax({
                type: O.method,
                url: O.url,
                data: Q,
                dataType: "json",
                success: function (S) {
                    R(S.Data)
                },
                error: function () {
                    P.apply(this, arguments)
                }
            })
        },
        loadFilter: function (O, P) {
            return O
        },
        view: f,
        onBeforeLoad: function (O, P) { },
        onLoadSuccess: function (O, P) { },
        onLoadError: function () { },
        onClick: function (O) { },
        onDblClick: function (O) { },
        onBeforeExpand: function (O) { },
        onExpand: function (O) { },
        onBeforeCollapse: function (O) { },
        onCollapse: function (O) { },
        onBeforeCheck: function (O, P) { },
        onCheck: function (O, P) { },
        onBeforeSelect: function (O) { },
        onSelect: function (O) { },
        onContextMenu: function (P, O) { },
        onBeforeDrag: function (O) { },
        onStartDrag: function (O) { },
        onStopDrag: function (O) { },
        onDragEnter: function (P, O) { },
        onDragOver: function (O, P) { },
        onDragLeave: function (O, P) { },
        onBeforeDrop: function (P, Q, O) { },
        onDrop: function (Q, O, P) { },
        onBeforeEdit: function (O) { },
        onAfterEdit: function (O) { },
        onCancelEdit: function (O) { }
    }
})(jQuery);
(function (c) {
    function a(d) {
        c(d).addClass("progressbar");
        c(d).html('<div class="progressbar-text"></div><div class="progressbar-value"><div class="progressbar-text"></div></div>');
        return c(d)
    }
    function b(f, g) {
        var e = c.data(f, "progressbar").options;
        var d = c.data(f, "progressbar").bar;
        if (g) {
            e.width = g
        }
        d._outerWidth(e.width)._outerHeight(e.height);
        d.find("div.progressbar-text").width(d.width());
        d.find("div.progressbar-text,div.progressbar-value").css({
            height: d.height() + "px",
            lineHeight: d.height() + "px"
        })
    }
    c.fn.progressbar = function (e, f) {
        if (typeof e == "string") {
            var d = c.fn.progressbar.methods[e];
            if (d) {
                return d(this, f)
            }
        }
        e = e || {};
        return this.each(function () {
            var g = c.data(this, "progressbar");
            if (g) {
                c.extend(g.options, e)
            } else {
                g = c.data(this, "progressbar", {
                    options: c.extend({}, c.fn.progressbar.defaults, c.fn.progressbar.parseOptions(this), e),
                    bar: a(this)
                })
            }
            c(this).progressbar("setValue", g.options.value);
            b(this)
        })
    };
    c.fn.progressbar.methods = {
        options: function (d) {
            return c.data(d[0], "progressbar").options
        },
        resize: function (d, e) {
            return d.each(function () {
                b(this, e)
            })
        },
        getValue: function (d) {
            return c.data(d[0], "progressbar").options.value
        },
        setValue: function (d, e) {
            if (e < 0) {
                e = 0
            }
            if (e > 100) {
                e = 100
            }
            return d.each(function () {
                var f = c.data(this, "progressbar").options;
                var h = f.text.replace(/{value}/, e);
                var g = f.value;
                f.value = e;
                c(this).find("div.progressbar-value").width(e + "%");
                c(this).find("div.progressbar-text").html(h);
                if (g != e) {
                    f.onChange.call(this, e, g)
                }
            })
        }
    };
    c.fn.progressbar.parseOptions = function (d) {
        return c.extend({}, c.parser.parseOptions(d, ["width", "height", "text",
            {
                value: "number"
            }]))
    };
    c.fn.progressbar.defaults = {
        width: "auto",
        height: 25,
        value: 0,
        text: "{value}%",
        onChange: function (e, d) { }
    }
})(jQuery);
(function (d) {
    function c(j) {
        d(j).addClass("tooltip-f")
    }
    function h(j) {
        var k = d.data(j, "tooltip").options;
        d(j).unbind(".tooltip").bind(k.showEvent + ".tooltip", function (l) {
            b(j, l)
        }).bind(k.hideEvent + ".tooltip", function (l) {
            i(j, l)
        }).bind("mousemove.tooltip", function (l) {
            if (k.trackMouse) {
                k.trackMouseX = l.pageX;
                k.trackMouseY = l.pageY;
                a(j)
            }
        })
    }
    function g(j) {
        var k = d.data(j, "tooltip");
        if (k.showTimer) {
            clearTimeout(k.showTimer);
            k.showTimer = null
        }
        if (k.hideTimer) {
            clearTimeout(k.hideTimer);
            k.hideTimer = null
        }
    }
    function a(j) {
        var p = d.data(j, "tooltip");
        if (!p || !p.tip) {
            return
        }
        var k = p.options;
        var l = p.tip;
        if (k.trackMouse) {
            o = d();
            var m = k.trackMouseX + k.deltaX;
            var n = k.trackMouseY + k.deltaY
        } else {
            var o = d(j);
            var m = o.offset().left + k.deltaX;
            var n = o.offset().top + k.deltaY
        }
        switch (k.position) {
            case "right":
                m += o._outerWidth() + 12 + (k.trackMouse ? 12 : 0);
                n -= (l._outerHeight() - o._outerHeight()) / 2;
                break;
            case "left":
                m -= l._outerWidth() + 12 + (k.trackMouse ? 12 : 0);
                n -= (l._outerHeight() - o._outerHeight()) / 2;
                break;
            case "top":
                m -= (l._outerWidth() - o._outerWidth()) / 2;
                n -= l._outerHeight() + 12 + (k.trackMouse ? 12 : 0);
                break;
            case "bottom":
                m -= (l._outerWidth() - o._outerWidth()) / 2;
                n += o._outerHeight() + 12 + (k.trackMouse ? 12 : 0);
                break
        }
        if (!d(j).is(":visible")) {
            m = -100000;
            n = -100000
        }
        l.css({
            left: m,
            top: n,
            zIndex: (k.zIndex != undefined ? k.zIndex : (d.fn.window ? d.fn.window.defaults.zIndex++ : ""))
        });
        k.onPosition.call(j, m, n)
    }
    function b(k, n) {
        var m = d.data(k, "tooltip");
        var l = m.options;
        var j = m.tip;
        if (!j) {
            j = d('<div tabindex="-1" class="tooltip"><div class="tooltip-content"></div><div class="tooltip-arrow-outer"></div><div class="tooltip-arrow"></div></div>').appendTo("body");
            m.tip = j;
            f(k)
        }
        j.removeClass("tooltip-top tooltip-bottom tooltip-left tooltip-right").addClass("tooltip-" + l.position);
        g(k);
        m.showTimer = setTimeout(function () {
            a(k);
            j.show();
            l.onShow.call(k, n);
            var p = j.children(".tooltip-arrow-outer");
            var q = j.children(".tooltip-arrow");
            var o = "border-" + l.position + "-color";
            p.add(q).css({
                borderTopColor: "",
                borderBottomColor: "",
                borderLeftColor: "",
                borderRightColor: ""
            });
            p.css(o, j.css(o));
            q.css(o, j.css("backgroundColor"))
        }, l.showDelay)
    }
    function i(j, l) {
        var k = d.data(j, "tooltip");
        if (k && k.tip) {
            g(j);
            k.hideTimer = setTimeout(function () {
                k.tip.hide();
                k.options.onHide.call(j, l)
            }, k.options.hideDelay)
        }
    }
    function f(j, m) {
        var l = d.data(j, "tooltip");
        var k = l.options;
        if (m) {
            k.content = m
        }
        if (!l.tip) {
            return
        }
        var n = typeof k.content == "function" ? k.content.call(j) : k.content;
        l.tip.children(".tooltip-content").html(n);
        k.onUpdate.call(j, n)
    }
    function e(l) {
        var j = d.data(l, "tooltip");
        if (j) {
            g(l);
            var k = j.options;
            if (j.tip) {
                j.tip.remove()
            }
            if (k._title) {
                d(l).attr("etitle", k._title)
            }
            d.removeData(l, "tooltip");
            d(l).unbind(".tooltip").removeClass("tooltip-f");
            k.onDestroy.call(l)
        }
    }
    d.fn.tooltip = function (j, k) {
        if (typeof j == "string") {
            return d.fn.tooltip.methods[j](this, k)
        }
        j = j || {};
        return this.each(function () {
            var l = d.data(this, "tooltip");
            if (l) {
                d.extend(l.options, j)
            } else {
                d.data(this, "tooltip", {
                    options: d.extend({}, d.fn.tooltip.defaults, d.fn.tooltip.parseOptions(this), j)
                });
                c(this)
            }
            h(this);
            f(this)
        })
    };
    d.fn.tooltip.methods = {
        options: function (j) {
            return d.data(j[0], "tooltip").options
        },
        tip: function (j) {
            return d.data(j[0], "tooltip").tip
        },
        arrow: function (j) {
            return j.tooltip("tip").children(".tooltip-arrow-outer,.tooltip-arrow")
        },
        show: function (j, k) {
            return j.each(function () {
                b(this, k)
            })
        },
        hide: function (j, k) {
            return j.each(function () {
                i(this, k)
            })
        },
        update: function (j, k) {
            return j.each(function () {
                f(this, k)
            })
        },
        reposition: function (j) {
            return j.each(function () {
                a(this)
            })
        },
        destroy: function (j) {
            return j.each(function () {
                e(this)
            })
        }
    };
    d.fn.tooltip.parseOptions = function (l) {
        var k = d(l);
        var j = d.extend({}, d.parser.parseOptions(l, ["position", "showEvent", "hideEvent", "content",
            {
                deltaX: "number",
                deltaY: "number",
                showDelay: "number",
                hideDelay: "number"
            }]), {
                _title: k.attr("etitle")
            });
        k.attr("etitle", "");
        if (!j.content) {
            j.content = j._title
        }
        return j
    };
    d.fn.tooltip.defaults = {
        position: "bottom",
        content: null,
        trackMouse: false,
        deltaX: 0,
        deltaY: 0,
        showEvent: "mouseenter",
        hideEvent: "mouseleave",
        showDelay: 200,
        hideDelay: 100,
        onShow: function (j) { },
        onHide: function (j) { },
        onUpdate: function (j) { },
        onPosition: function (j, k) { },
        onDestroy: function () { }
    }
})(jQuery);
(function ($) {
    $.fn._remove = function () {
        return this.each(function () {
            $(this).remove();
            try {
                this.outerHTML = ""
            } catch (err) { }
        })
    };

    function _1e2(node) {
        node._remove()
    }
    function _1e3(_1e4, _1e5) {
        var opts = $.data(_1e4, "panel").options;
        var _1e6 = $.data(_1e4, "panel").panel;
        var _1e7 = _1e6.children("div.panel-header");
        var _1e8 = _1e6.children("div.panel-body");
        if (_1e5) {
            $.extend(opts, {
                width: _1e5.width,
                height: _1e5.height,
                left: _1e5.left,
                top: _1e5.top
            })
        }
        opts.fit ? $.extend(opts, _1e6._fit()) : _1e6._fit(false);
        _1e6.css({
            left: opts.left,
            top: opts.top
        });
        if (!isNaN(opts.width)) {
            _1e6._outerWidth(opts.width)
        } else {
            _1e6.width("auto")
        }
        _1e7.add(_1e8)._outerWidth(_1e6.width());
        if (!isNaN(opts.height)) {
            var items = _1e6.find(".combobox-item:visible,.combobox-group:visible");
            if (items.length > 0 && items.length < 6) {
                var heightSum = 0;
                items.each(function () {
                    heightSum += $(this).outerHeight()
                });
                if (heightSum + 2 < opts.height) {
                    _1e6._outerHeight(heightSum + 2)
                } else {
                    _1e6._outerHeight(opts.height)
                }
            } else {
                _1e6._outerHeight(opts.height)
            }
            _1e8._outerHeight(_1e6.height() - _1e7._outerHeight())
        } else {
            _1e8.height("auto")
        }
        _1e6.css("height", "");
        opts.onResize.apply(_1e4, [opts.width, opts.height]);
        $(_1e4).find(">div:visible,>form>div:visible").triggerHandler("_resize")
    }
    function _1e9(_1ea, _1eb) {
        var opts = $.data(_1ea, "panel").options;
        var _1ec = $.data(_1ea, "panel").panel;
        if (_1eb) {
            if (_1eb.left != null) {
                opts.left = _1eb.left
            }
            if (_1eb.top != null) {
                opts.top = _1eb.top
            }
        }
        _1ec.css({
            left: opts.left,
            top: opts.top
        });
        opts.onMove.apply(_1ea, [opts.left, opts.top])
    }
    function _1ed(_1ee) {
        $(_1ee).addClass("panel-body");
        var _1ef = $('<div class="panel"></div>').insertBefore(_1ee);
        _1ef[0].appendChild(_1ee);
        _1ef.bind("_resize", function () {
            var opts = $.data(_1ee, "panel").options;
            if (opts.fit == true) {
                _1e3(_1ee)
            }
            return false
        });
        return _1ef
    }
    function _1f0(_1f1) {
        var opts = $.data(_1f1, "panel").options;
        var _1f2 = $.data(_1f1, "panel").panel;
        if (opts.tools && typeof opts.tools == "string") {
            _1f2.find(">div.panel-header>div.panel-tool .panel-tool-a").appendTo(opts.tools)
        }
        _1e2(_1f2.children("div.panel-header"));
        if (opts.title && !opts.noheader) {
            var _1f3 = $('<div class="panel-header"><div class="panel-title">' + opts.title + "</div></div>").prependTo(_1f2);
            if (opts.iconCls) {
                _1f3.find(".panel-title").addClass("panel-with-icon");
                $('<div class="panel-icon"></div>').addClass(opts.iconCls).appendTo(_1f3)
            }
            var tool = $('<div class="panel-tool"></div>').appendTo(_1f3);
            tool.bind("click", function (e) {
                e.stopPropagation()
            });
            if (opts.tools) {
                if ($.isArray(opts.tools)) {
                    for (var i = 0; i < opts.tools.length; i++) {
                        var t = $('<a href="javascript:void(0)"></a>').addClass(opts.tools[i].iconCls).appendTo(tool);
                        if (opts.tools[i].handler) {
                            t.bind("click", eval(opts.tools[i].handler))
                        }
                    }
                } else {
                    $(opts.tools).children().each(function () {
                        $(this).addClass($(this).attr("iconCls")).addClass("panel-tool-a").appendTo(tool)
                    })
                }
            }
            if (opts.collapsible) {
                $('<a class="panel-tool-collapse" href="javascript:void(0)"></a>').appendTo(tool).bind("click", function () {
                    if (opts.collapsed == true) {
                        _210(_1f1, true)
                    } else {
                        _205(_1f1, true)
                    }
                    return false
                })
            }
            if (opts.minimizable) {
                $('<a class="panel-tool-min" href="javascript:void(0)"></a>').appendTo(tool).bind("click", function () {
                    _216(_1f1);
                    return false
                })
            }
            if (opts.maximizable) {
                $('<a class="panel-tool-max" href="javascript:void(0)"></a>').appendTo(tool).bind("click", function () {
                    if (opts.maximized == true) {
                        _219(_1f1)
                    } else {
                        _204(_1f1)
                    }
                    return false
                })
            }
            if (opts.closable) {
                $('<a class="panel-tool-close" href="javascript:void(0)"></a>').appendTo(tool).bind("click", function () {
                    _1f4(_1f1);
                    return false
                })
            }
            _1f2.children("div.panel-body").removeClass("panel-body-noheader")
        } else {
            _1f2.children("div.panel-body").addClass("panel-body-noheader")
        }
    }
    function _1f5(_1f6, _1f7) {
        var _1f8 = $.data(_1f6, "panel");
        var opts = _1f8.options;
        if (_1f9) {
            opts.queryParams = _1f7
        }
        if (opts.href) {
            if (!_1f8.isLoaded || !opts.cache) {
                var _1f9 = $.extend({}, opts.queryParams);
                if (opts.onBeforeLoad.call(_1f6, _1f9) == false) {
                    return
                }
                _1f8.isLoaded = false;
                _1fa(_1f6);
                if (opts.loadingMessage) {
                    $(_1f6).html($('<div class="panel-loading"></div>').html(opts.loadingMessage))
                }
                opts.loader.call(_1f6, _1f9, function (data) {
                    _1fb(opts.extractor.call(_1f6, data));
                    opts.onLoad.apply(_1f6, arguments);
                    _1f8.isLoaded = true
                }, function () {
                    opts.onLoadError.apply(_1f6, arguments)
                })
            }
        } else {
            if (opts.content) {
                if (!_1f8.isLoaded) {
                    _1fa(_1f6);
                    _1fb(opts.content);
                    _1f8.isLoaded = true
                }
            }
        }
        function _1fb(_1fc) {
            $(_1f6).html(_1fc);
            $.parser.parse($(_1f6))
        }
    }
    function _1fa(_1fd) {
        var t = $(_1fd);
        t.find(".combo-f").each(function () {
            $(this).combo("destroy")
        });
        t.find(".m-btn").each(function () {
            $(this).menubutton("destroy")
        });
        t.find(".s-btn").each(function () {
            $(this).splitbutton("destroy")
        });
        t.find(".tooltip-f").each(function () {
            $(this).tooltip("destroy")
        });
        t.children("div").each(function () {
            $(this)._fit(false)
        })
    }
    function _1fe(_1ff) {
        $(_1ff).find("div.panel:visible,div.accordion:visible,div.tabs-container:visible,div.layout:visible").each(function () {
            $(this).triggerHandler("_resize", [true])
        })
    }
    function _200(_201, _202) {
        var opts = $.data(_201, "panel").options;
        var _203 = $.data(_201, "panel").panel;
        if (_202 != true) {
            if (opts.onBeforeOpen.call(_201) == false) {
                return
            }
        }
        _203.show();
        opts.closed = false;
        opts.minimized = false;
        var tool = _203.children("div.panel-header").find("a.panel-tool-restore");
        if (tool.length) {
            opts.maximized = true
        }
        opts.onOpen.call(_201);
        if (opts.maximized == true) {
            opts.maximized = false;
            _204(_201)
        }
        if (opts.collapsed == true) {
            opts.collapsed = false;
            _205(_201)
        }
        if (!opts.collapsed) {
            _1f5(_201);
            _1fe(_201)
        }
    }
    function _1f4(_206, _207) {
        var opts = $.data(_206, "panel").options;
        var _208 = $.data(_206, "panel").panel;
        if (_207 != true) {
            if (opts.onBeforeClose.call(_206) == false) {
                return
            }
        }
        _208._fit(false);
        _208.hide();
        opts.closed = true;
        opts.onClose.call(_206)
    }
    function _209(_20a, _20b) {
        var opts = $.data(_20a, "panel").options;
        var _20c = $.data(_20a, "panel").panel;
        if (_20b != true) {
            if (opts.onBeforeDestroy.call(_20a) == false) {
                return
            }
        }
        _1fa(_20a);
        _1e2(_20c);
        opts.onDestroy.call(_20a)
    }
    function _205(_20d, _20e) {
        var opts = $.data(_20d, "panel").options;
        var _20f = $.data(_20d, "panel").panel;
        var body = _20f.children("div.panel-body");
        var tool = _20f.children("div.panel-header").find("a.panel-tool-collapse");
        if (opts.collapsed == true) {
            return
        }
        body.stop(true, true);
        if (opts.onBeforeCollapse.call(_20d) == false) {
            return
        }
        tool.addClass("panel-tool-expand");
        if (_20e == true) {
            body.slideUp("normal", function () {
                opts.collapsed = true;
                opts.onCollapse.call(_20d)
            })
        } else {
            body.hide();
            opts.collapsed = true;
            opts.onCollapse.call(_20d)
        }
    }
    function _210(_211, _212) {
        var opts = $.data(_211, "panel").options;
        var _213 = $.data(_211, "panel").panel;
        var body = _213.children("div.panel-body");
        var tool = _213.children("div.panel-header").find("a.panel-tool-collapse");
        if (opts.collapsed == false) {
            return
        }
        body.stop(true, true);
        if (opts.onBeforeExpand.call(_211) == false) {
            return
        }
        tool.removeClass("panel-tool-expand");
        if (_212 == true) {
            body.slideDown("normal", function () {
                opts.collapsed = false;
                opts.onExpand.call(_211);
                _1f5(_211);
                _1fe(_211)
            })
        } else {
            body.show();
            opts.collapsed = false;
            opts.onExpand.call(_211);
            _1f5(_211);
            _1fe(_211)
        }
    }
    function _204(_214) {
        var opts = $.data(_214, "panel").options;
        var _215 = $.data(_214, "panel").panel;
        var tool = _215.children("div.panel-header").find("a.panel-tool-max");
        if (opts.maximized == true) {
            return
        }
        tool.addClass("panel-tool-restore");
        if (!$.data(_214, "panel").original) {
            $.data(_214, "panel").original = {
                width: opts.width,
                height: opts.height,
                left: opts.left,
                top: opts.top,
                fit: opts.fit
            }
        }
        opts.left = 0;
        opts.top = 0;
        opts.fit = true;
        _1e3(_214);
        opts.minimized = false;
        opts.maximized = true;
        opts.onMaximize.call(_214)
    }
    function _216(_217) {
        var opts = $.data(_217, "panel").options;
        var _218 = $.data(_217, "panel").panel;
        _218._fit(false);
        _218.hide();
        opts.minimized = true;
        opts.maximized = false;
        opts.onMinimize.call(_217)
    }
    function _219(_21a) {
        var opts = $.data(_21a, "panel").options;
        var _21b = $.data(_21a, "panel").panel;
        var tool = _21b.children("div.panel-header").find("a.panel-tool-max");
        if (opts.maximized == false) {
            return
        }
        _21b.show();
        tool.removeClass("panel-tool-restore");
        $.extend(opts, $.data(_21a, "panel").original);
        _1e3(_21a);
        opts.minimized = false;
        opts.maximized = false;
        $.data(_21a, "panel").original = null;
        opts.onRestore.call(_21a)
    }
    function _21c(_21d) {
        var opts = $.data(_21d, "panel").options;
        var _21e = $.data(_21d, "panel").panel;
        var _21f = $(_21d).panel("header");
        var body = $(_21d).panel("body");
        _21e.css(opts.style);
        _21e.addClass(opts.cls);
        if (opts.border) {
            _21f.removeClass("panel-header-noborder");
            body.removeClass("panel-body-noborder")
        } else {
            _21f.addClass("panel-header-noborder");
            body.addClass("panel-body-noborder")
        }
        _21f.addClass(opts.headerCls);
        body.addClass(opts.bodyCls);
        if (opts.id) {
            $(_21d).attr("id", opts.id)
        } else {
            $(_21d).attr("id", "")
        }
    }
    function _220(_221, _222) {
        $.data(_221, "panel").options.title = _222;
        $(_221).panel("header").find("div.panel-title").html(_222)
    }
    var TO = false;
    var _223 = true;
    $(window).unbind(".panel").bind("resize.panel", function () {
        if (!_223) {
            return
        }
        if (TO !== false) {
            clearTimeout(TO)
        }
        TO = setTimeout(function () {
            _223 = false;
            var _224 = $("body.layout");
            if (_224.length) {
                _224.layout("resize")
            } else {
                $("body").children("div.panel:visible,div.accordion:visible,div.tabs-container:visible,div.layout:visible").triggerHandler("_resize")
            }
            _223 = true;
            TO = false
        }, 200)
    });
    $.fn.panel = function (_225, _226) {
        if (typeof _225 == "string") {
            return $.fn.panel.methods[_225](this, _226)
        }
        _225 = _225 || {};
        return this.each(function () {
            var _227 = $.data(this, "panel");
            var opts;
            if (_227) {
                opts = $.extend(_227.options, _225);
                _227.isLoaded = false
            } else {
                opts = $.extend({}, $.fn.panel.defaults, $.fn.panel.parseOptions(this), _225);
                $(this).attr("etitle", "");
                _227 = $.data(this, "panel", {
                    options: opts,
                    panel: _1ed(this),
                    isLoaded: false
                })
            }
            _1f0(this);
            _21c(this);
            if (opts.doSize == true) {
                _227.panel.css("display", "block");
                _1e3(this)
            }
            if (opts.closed == true || opts.minimized == true) {
                _227.panel.hide()
            } else {
                _200(this)
            }
        })
    };
    $.fn.panel.methods = {
        options: function (jq) {
            return $.data(jq[0], "panel").options
        },
        panel: function (jq) {
            return $.data(jq[0], "panel").panel
        },
        header: function (jq) {
            return $.data(jq[0], "panel").panel.find(">div.panel-header")
        },
        body: function (jq) {
            return $.data(jq[0], "panel").panel.find(">div.panel-body")
        },
        setTitle: function (jq, _228) {
            return jq.each(function () {
                _220(this, _228)
            })
        },
        open: function (jq, _229) {
            return jq.each(function () {
                _200(this, _229)
            })
        },
        close: function (jq, _22a) {
            return jq.each(function () {
                _1f4(this, _22a)
            })
        },
        destroy: function (jq, _22b) {
            return jq.each(function () {
                _209(this, _22b)
            })
        },
        refresh: function (jq, href) {
            return jq.each(function () {
                var _22c = $.data(this, "panel");
                _22c.isLoaded = false;
                if (href) {
                    if (typeof href == "string") {
                        _22c.options.href = href
                    } else {
                        _22c.options.queryParams = href
                    }
                }
                _1f5(this)
            })
        },
        resize: function (jq, _22d) {
            return jq.each(function () {
                _1e3(this, _22d)
            })
        },
        move: function (jq, _22e) {
            return jq.each(function () {
                _1e9(this, _22e)
            })
        },
        maximize: function (jq) {
            return jq.each(function () {
                _204(this)
            })
        },
        minimize: function (jq) {
            return jq.each(function () {
                _216(this)
            })
        },
        restore: function (jq) {
            return jq.each(function () {
                _219(this)
            })
        },
        collapse: function (jq, _22f) {
            return jq.each(function () {
                _205(this, _22f)
            })
        },
        expand: function (jq, _230) {
            return jq.each(function () {
                _210(this, _230)
            })
        }
    };
    $.fn.panel.parseOptions = function (_231) {
        var t = $(_231);
        return $.extend({}, $.parser.parseOptions(_231, ["id", "width", "height", "left", "top", "title", "iconCls", "cls", "headerCls", "bodyCls", "tools", "href", "method",
            {
                cache: "boolean",
                fit: "boolean",
                border: "boolean",
                noheader: "boolean"
            }, {
                collapsible: "boolean",
                minimizable: "boolean",
                maximizable: "boolean"
            }, {
                closable: "boolean",
                collapsed: "boolean",
                minimized: "boolean",
                maximized: "boolean",
                closed: "boolean"
            }]), {
                loadingMessage: (t.attr("loadingMessage") != undefined ? t.attr("loadingMessage") : undefined)
            })
    };
    $.fn.panel.defaults = {
        id: null,
        title: null,
        iconCls: null,
        width: "auto",
        height: "auto",
        left: null,
        top: null,
        cls: null,
        headerCls: null,
        bodyCls: null,
        style: {},
        href: null,
        cache: true,
        fit: false,
        border: true,
        doSize: true,
        noheader: false,
        content: null,
        collapsible: false,
        minimizable: false,
        maximizable: false,
        closable: false,
        collapsed: false,
        minimized: false,
        maximized: false,
        closed: false,
        tools: null,
        queryParams: {},
        method: "get",
        href: null,
        loadingMessage: HtmlLang.Write(LangModule.Common, "EasyUILoading", "Loading, please wait..."),
        loader: function (_232, _233, _234) {
            var opts = $(this).panel("options");
            if (!opts.href) {
                return false
            }
            $.ajax({
                type: opts.method,
                url: opts.href,
                cache: false,
                data: _232,
                dataType: "html",
                success: function (data) {
                    _233(data)
                },
                error: function () {
                    _234.apply(this, arguments)
                }
            })
        },
        extractor: function (data) {
            var _235 = /<body[^>]*>((.|[\n\r])*)<\/body>/im;
            var _236 = _235.exec(data);
            if (_236) {
                return _236[1]
            } else {
                return data
            }
        },
        onBeforeLoad: function (_237) { },
        onLoad: function () { },
        onLoadError: function () { },
        onBeforeOpen: function () { },
        onOpen: function () { },
        onBeforeClose: function () { },
        onClose: function () { },
        onBeforeDestroy: function () { },
        onDestroy: function () { },
        onResize: function (_238, _239) { },
        onMove: function (left, top) { },
        onMaximize: function () { },
        onRestore: function () { },
        onMinimize: function () { },
        onBeforeCollapse: function () { },
        onBeforeExpand: function () { },
        onCollapse: function () { },
        onExpand: function () { }
    }
})(jQuery);
(function (d) {
    function a(k, j) {
        var i = d.data(k, "window").options;
        if (j) {
            d.extend(i, j)
        }
        d(k).panel("resize", i)
    }
    function c(i, j) {
        var k = d.data(i, "window");
        if (j) {
            if (j.left != null) {
                k.options.left = j.left
            }
            if (j.top != null) {
                k.options.top = j.top
            }
        }
        d(i).panel("move", k.options);
        if (k.shadow) {
            k.shadow.css({
                left: k.options.left,
                top: k.options.top
            })
        }
    }
    function b(i, j) {
        var m = d.data(i, "window");
        var l = m.options;
        var k = l.width;
        if (isNaN(k)) {
            k = m.window._outerWidth()
        }
        if (l.inline) {
            var n = m.window.parent();
            l.left = (n.width() - k) / 2 + n.scrollLeft()
        } else {
            l.left = (d(window)._outerWidth() - k) / 2 + d(document).scrollLeft()
        }
        if (j) {
            c(i)
        }
    }
    function e(j, n) {
        var l = d.data(j, "window");
        var m = l.options;
        var i = m.height;
        if (isNaN(i)) {
            i = l.window._outerHeight()
        }
        if (m.inline) {
            var k = l.window.parent();
            m.top = (k.height() - i) / 2 + k.scrollTop()
        } else {
            m.top = (d(window)._outerHeight() - i) / 2 + d(document).scrollTop()
        }
        if (n) {
            c(j)
        }
    }
    function h(i) {
        var k = d.data(i, "window");
        var l = k.options.closed;
        var j = d(i).panel(d.extend({}, k.options, {
            border: false,
            doSize: true,
            closed: true,
            cls: "window",
            headerCls: "window-header",
            bodyCls: "window-body " + (k.options.noheader ? "window-body-noheader" : ""),
            onBeforeDestroy: function () {
                if (k.options.onBeforeDestroy.call(i) == false) {
                    return false
                }
                if (k.shadow) {
                    k.shadow.remove()
                }
                if (k.mask) {
                    k.mask.remove()
                }
            },
            onClose: function () {
                if (k.shadow) {
                    k.shadow.hide()
                }
                if (k.mask) {
                    k.mask.hide()
                }
                k.options.onClose.call(i)
            },
            onOpen: function () {
                if (k.mask) {
                    k.mask.css({
                        display: "block",
                        zIndex: d.fn.window.defaults.zIndex++
                    })
                }
                if (k.shadow) {
                    k.shadow.css({
                        display: "block",
                        zIndex: d.fn.window.defaults.zIndex++,
                        left: k.options.left,
                        top: k.options.top,
                        width: k.window._outerWidth(),
                        height: k.window._outerHeight()
                    })
                }
                k.window.css("z-index", d.fn.window.defaults.zIndex++);
                k.options.onOpen.call(i)
            },
            onResize: function (m, o) {
                var n = d(this).panel("options");
                d.extend(k.options, {
                    width: n.width,
                    height: n.height,
                    left: n.left,
                    top: n.top
                });
                if (k.shadow) {
                    k.shadow.css({
                        left: k.options.left,
                        top: k.options.top,
                        width: k.window._outerWidth(),
                        height: k.window._outerHeight()
                    })
                }
                k.options.onResize.call(i, m, o)
            },
            onMinimize: function () {
                if (k.shadow) {
                    k.shadow.hide()
                }
                if (k.mask) {
                    k.mask.hide()
                }
                k.options.onMinimize.call(i)
            },
            onBeforeCollapse: function () {
                if (k.options.onBeforeCollapse.call(i) == false) {
                    return false
                }
                if (k.shadow) {
                    k.shadow.hide()
                }
            },
            onExpand: function () {
                if (k.shadow) {
                    k.shadow.show()
                }
                k.options.onExpand.call(i)
            }
        }));
        k.window = j.panel("panel");
        if (k.mask) {
            k.mask.remove()
        }
        if (k.options.modal == true) {
            k.mask = d('<div class="window-mask"></div>').insertAfter(k.window);
            k.mask.css({
                width: (k.options.inline ? k.mask.parent().width() : f().width),
                height: (k.options.inline ? k.mask.parent().height() : f().height),
                display: "none"
            })
        }
        if (k.shadow) {
            k.shadow.remove()
        }
        if (k.options.shadow == true) {
            k.shadow = d('<div class="window-shadow"></div>').insertAfter(k.window);
            k.shadow.css({
                display: "none"
            })
        }
        if (k.options.left == null) {
            b(i)
        }
        if (k.options.top == null) {
            e(i)
        }
        c(i);
        if (!l) {
            j.window("open")
        }
    }
    function g(i) {
        var j = d.data(i, "window");
        j.window.draggable({
            handle: ">div.panel-header>div.panel-title",
            disabled: j.options.draggable == false,
            onStartDrag: function (k) {
                if (j.mask) {
                    j.mask.css("z-index", d.fn.window.defaults.zIndex++)
                }
                if (j.shadow) {
                    j.shadow.css("z-index", d.fn.window.defaults.zIndex++)
                }
                j.window.css("z-index", d.fn.window.defaults.zIndex++);
                if (!j.proxy) {
                    j.proxy = d('<div class="window-proxy"></div>').insertAfter(j.window)
                }
                j.proxy.css({
                    display: "none",
                    zIndex: d.fn.window.defaults.zIndex++,
                    left: k.data.left,
                    top: k.data.top
                });
                j.proxy._outerWidth(j.window._outerWidth());
                j.proxy._outerHeight(j.window._outerHeight());
                setTimeout(function () {
                    if (j.proxy) {
                        j.proxy.show()
                    }
                }, 500)
            },
            onDrag: function (k) {
                j.proxy.css({
                    display: "block",
                    left: k.data.left,
                    top: k.data.top
                });
                return false
            },
            onStopDrag: function (k) {
                j.options.left = k.data.left;
                j.options.top = k.data.top;
                d(i).window("move");
                j.proxy.remove();
                j.proxy = null
            }
        });
        j.window.resizable({
            disabled: j.options.resizable == false,
            onStartResize: function (k) {
                j.pmask = d('<div class="window-proxy-mask"></div>').insertAfter(j.window);
                j.pmask.css({
                    zIndex: d.fn.window.defaults.zIndex++,
                    left: k.data.left,
                    top: k.data.top,
                    width: j.window._outerWidth(),
                    height: j.window._outerHeight()
                });
                if (!j.proxy) {
                    j.proxy = d('<div class="window-proxy"></div>').insertAfter(j.window)
                }
                j.proxy.css({
                    zIndex: d.fn.window.defaults.zIndex++,
                    left: k.data.left,
                    top: k.data.top
                });
                j.proxy._outerWidth(k.data.width);
                j.proxy._outerHeight(k.data.height)
            },
            onResize: function (k) {
                j.proxy.css({
                    left: k.data.left,
                    top: k.data.top
                });
                j.proxy._outerWidth(k.data.width);
                j.proxy._outerHeight(k.data.height);
                return false
            },
            onStopResize: function (k) {
                d.extend(j.options, {
                    left: k.data.left,
                    top: k.data.top,
                    width: k.data.width,
                    height: k.data.height
                });
                a(i);
                j.pmask.remove();
                j.pmask = null;
                j.proxy.remove();
                j.proxy = null
            }
        })
    }
    function f() {
        if (document.compatMode == "BackCompat") {
            return {
                width: Math.max(document.body.scrollWidth, document.body.clientWidth),
                height: Math.max(document.body.scrollHeight, document.body.clientHeight)
            }
        } else {
            return {
                width: Math.max(document.documentElement.scrollWidth, document.documentElement.clientWidth),
                height: Math.max(document.documentElement.scrollHeight, document.documentElement.clientHeight)
            }
        }
    }
    d(window).resize(function () {
        d("body>div.window-mask").css({
            width: d(window)._outerWidth(),
            height: d(window)._outerHeight()
        });
        setTimeout(function () {
            d("body>div.window-mask").css({
                width: f().width,
                height: f().height
            })
        }, 50)
    });
    d.fn.window = function (i, j) {
        if (typeof i == "string") {
            var k = d.fn.window.methods[i];
            if (k) {
                return k(this, j)
            } else {
                return this.panel(i, j)
            }
        }
        i = i || {};
        return this.each(function () {
            var l = d.data(this, "window");
            if (l) {
                d.extend(l.options, i)
            } else {
                l = d.data(this, "window", {
                    options: d.extend({}, d.fn.window.defaults, d.fn.window.parseOptions(this), i)
                });
                if (!l.options.inline) {
                    document.body.appendChild(this)
                }
            }
            h(this);
            g(this)
        })
    };
    d.fn.window.methods = {
        options: function (k) {
            var i = k.panel("options");
            var j = d.data(k[0], "window").options;
            return d.extend(j, {
                closed: i.closed,
                collapsed: i.collapsed,
                minimized: i.minimized,
                maximized: i.maximized
            })
        },
        window: function (i) {
            return d.data(i[0], "window").window
        },
        resize: function (i, j) {
            return i.each(function () {
                a(this, j)
            })
        },
        move: function (i, j) {
            return i.each(function () {
                c(this, j)
            })
        },
        hcenter: function (i) {
            return i.each(function () {
                b(this, true)
            })
        },
        vcenter: function (i) {
            return i.each(function () {
                e(this, true)
            })
        },
        center: function (i) {
            return i.each(function () {
                b(this);
                e(this);
                c(this)
            })
        }
    };
    d.fn.window.parseOptions = function (i) {
        return d.extend({}, d.fn.panel.parseOptions(i), d.parser.parseOptions(i, [{
            draggable: "boolean",
            resizable: "boolean",
            shadow: "boolean",
            modal: "boolean",
            inline: "boolean"
        }]))
    };
    d.fn.window.defaults = d.extend({}, d.fn.panel.defaults, {
        zIndex: 9000,
        draggable: true,
        resizable: true,
        shadow: true,
        modal: false,
        inline: false,
        title: "New Window",
        collapsible: true,
        minimizable: true,
        maximizable: true,
        closable: true,
        closed: false
    })
})(jQuery);
(function ($) {
    function _260(_261) {
        var cp = document.createElement("div");
        while (_261.firstChild) {
            cp.appendChild(_261.firstChild)
        }
        _261.appendChild(cp);
        var _262 = $(cp);
        _262.attr("style", $(_261).attr("style"));
        $(_261).removeAttr("style").css("overflow", "hidden");
        _262.panel({
            border: false,
            doSize: false,
            bodyCls: "dialog-content"
        });
        return _262
    }
    function _263(_264) {
        var opts = $.data(_264, "dialog").options;
        var _265 = $.data(_264, "dialog").contentPanel;
        if (opts.toolbar) {
            if ($.isArray(opts.toolbar)) {
                $(_264).find("div.dialog-toolbar").remove();
                var _266 = $('<div class="dialog-toolbar"><table cellspacing="0" cellpadding="0"><tr></tr></table></div>').prependTo(_264);
                var tr = _266.find("tr");
                for (var i = 0; i < opts.toolbar.length; i++) {
                    var btn = opts.toolbar[i];
                    if (btn == "-") {
                        $('<td><div class="dialog-tool-separator"></div></td>').appendTo(tr)
                    } else {
                        var td = $("<td></td>").appendTo(tr);
                        var tool = $('<a href="javascript:void(0)"></a>').appendTo(td);
                        tool[0].onclick = eval(btn.handler ||
                            function () { });
                        tool.linkbutton($.extend({}, btn, {
                            plain: true
                        }))
                    }
                }
            } else {
                $(opts.toolbar).addClass("dialog-toolbar").prependTo(_264);
                $(opts.toolbar).show()
            }
        } else {
            $(_264).find("div.dialog-toolbar").remove()
        }
        if (opts.buttons) {
            if ($.isArray(opts.buttons)) {
                $(_264).find("div.dialog-button").remove();
                var _267 = $('<div class="dialog-button"></div>').appendTo(_264);
                for (var i = 0; i < opts.buttons.length; i++) {
                    var p = opts.buttons[i];
                    var _268 = $('<a href="javascript:void(0)"></a>').appendTo(_267);
                    if (p.handler) {
                        _268[0].onclick = p.handler
                    }
                    _268.linkbutton(p)
                }
            } else {
                $(opts.buttons).addClass("dialog-button").appendTo(_264);
                $(opts.buttons).show()
            }
        } else {
            $(_264).find("div.dialog-button").remove()
        }
        var _269 = opts.href;
        var _26a = opts.content;
        opts.href = null;
        opts.content = null;
        _265.panel({
            closed: opts.closed,
            cache: opts.cache,
            href: _269,
            content: _26a,
            onLoad: function () {
                if (opts.height == "auto") {
                    $(_264).window("resize")
                }
                opts.onLoad.apply(_264, arguments)
            }
        });
        $(_264).window($.extend({}, opts, {
            onOpen: function () {
                if (_265.panel("options").closed) {
                    _265.panel("open")
                }
                if (opts.onOpen) {
                    opts.onOpen.call(_264)
                }
            },
            onResize: function (_26b, _26c) {
                var _26d = $(_264);
                _265.panel("panel").show();
                _265.panel("resize", {
                    width: _26d.width(),
                    height: (_26c == "auto") ? "auto" : _26d.height() - _26d.children("div.dialog-toolbar")._outerHeight() - _26d.children("div.dialog-button")._outerHeight()
                });
                if (opts.onResize) {
                    opts.onResize.call(_264, _26b, _26c)
                }
            }
        }));
        opts.href = _269;
        opts.content = _26a
    }
    function _26e(_26f, href) {
        var _270 = $.data(_26f, "dialog").contentPanel;
        _270.panel("refresh", href)
    }
    $.fn.dialog = function (_271, _272) {
        if (typeof _271 == "string") {
            var _273 = $.fn.dialog.methods[_271];
            if (_273) {
                return _273(this, _272)
            } else {
                return this.window(_271, _272)
            }
        }
        _271 = _271 || {};
        return this.each(function () {
            var _274 = $.data(this, "dialog");
            if (_274) {
                $.extend(_274.options, _271)
            } else {
                $.data(this, "dialog", {
                    options: $.extend({}, $.fn.dialog.defaults, $.fn.dialog.parseOptions(this), _271),
                    contentPanel: _260(this)
                })
            }
            _263(this)
        })
    };
    $.fn.dialog.methods = {
        options: function (jq) {
            var _275 = $.data(jq[0], "dialog").options;
            var _276 = jq.panel("options");
            $.extend(_275, {
                closed: _276.closed,
                collapsed: _276.collapsed,
                minimized: _276.minimized,
                maximized: _276.maximized
            });
            var _277 = $.data(jq[0], "dialog").contentPanel;
            return _275
        },
        dialog: function (jq) {
            return jq.window("window")
        },
        refresh: function (jq, href) {
            return jq.each(function () {
                _26e(this, href)
            })
        }
    };
    $.fn.dialog.parseOptions = function (_278) {
        return $.extend({}, $.fn.window.parseOptions(_278), $.parser.parseOptions(_278, ["toolbar", "buttons"]))
    };
    $.fn.dialog.defaults = $.extend({}, $.fn.window.defaults, {
        title: "New Dialog",
        collapsible: false,
        minimizable: false,
        maximizable: false,
        resizable: false,
        toolbar: null,
        buttons: null
    })
})(jQuery);
(function ($) {
    function show(el, type, _279, _27a) {
        var win = $(el).window("window");
        if (!win) {
            return
        }
        switch (type) {
            case null:
                win.show();
                break;
            case "slide":
                win.slideDown(_279);
                break;
            case "fade":
                win.fadeIn(_279);
                break;
            case "show":
                win.show(_279);
                break
        }
        var _27b = null;
        if (_27a > 0) {
            _27b = setTimeout(function () {
                hide(el, type, _279)
            }, _27a)
        }
        win.hover(function () {
            if (_27b) {
                clearTimeout(_27b)
            }
        }, function () {
            if (_27a > 0) {
                _27b = setTimeout(function () {
                    hide(el, type, _279)
                }, _27a)
            }
        })
    }
    function hide(el, type, _27c) {
        if (el.locked == true) {
            return
        }
        el.locked = true;
        var win = $(el).window("window");
        if (!win) {
            return
        }
        switch (type) {
            case null:
                win.hide();
                break;
            case "slide":
                win.slideUp(_27c);
                break;
            case "fade":
                win.fadeOut(_27c);
                break;
            case "show":
                win.hide(_27c);
                break
        }
        setTimeout(function () {
            $(el).window("destroy")
        }, _27c)
    }
    function _27d(_27e) {
        var opts = $.extend({}, $.fn.window.defaults, {
            collapsible: false,
            minimizable: false,
            maximizable: false,
            shadow: false,
            draggable: false,
            resizable: false,
            closed: true,
            style: {
                left: "",
                top: "",
                right: 0,
                zIndex: $.fn.window.defaults.zIndex++,
                bottom: -document.body.scrollTop - document.documentElement.scrollTop
            },
            onBeforeOpen: function () {
                show(this, opts.showType, opts.showSpeed, opts.timeout);
                return false
            },
            onBeforeClose: function () {
                hide(this, opts.showType, opts.showSpeed);
                return false
            }
        }, {
                title: "",
                width: 250,
                height: 100,
                showType: "slide",
                showSpeed: 600,
                msg: "",
                timeout: 4000
            }, _27e);
        opts.style.zIndex = $.fn.window.defaults.zIndex++;
        var win = $('<div class="messager-body"></div>').html(opts.msg).appendTo("body");
        win.window(opts);
        win.window("window").css(opts.style);
        win.window("open");
        return win
    }
    function _27f(_280, _281, _282) {
        var win = $('<div class="messager-body"></div>').appendTo("body");
        win.append(_281);
        if (_282) {
            var tb = $('<div class="messager-button"></div>').appendTo(win);
            for (var _283 in _282) {
                $("<a></a>").attr("href", "javascript:void(0)").text(_283).css("margin-left", 10).bind("click", eval(_282[_283])).appendTo(tb).linkbutton()
            }
        }
        win.window({
            title: _280,
            noheader: (_280 ? false : true),
            width: 300,
            height: "auto",
            modal: true,
            collapsible: false,
            minimizable: false,
            maximizable: false,
            resizable: false,
            onClose: function () {
                setTimeout(function () {
                    win.window("destroy")
                }, 100)
            }
        });
        win.window("window").addClass("messager-window");
        win.children("div.messager-button").children("a:first").focus();
        return win
    }
    $.messager = {
        show: function (_284) {
            return _27d(_284)
        },
        alert: function (_285, msg, icon, fn) {
            var _286 = "<div>" + msg + "</div>";
            switch (icon) {
                case "error":
                    _286 = '<div class="messager-icon messager-error"></div>' + _286;
                    break;
                case "info":
                    _286 = '<div class="messager-icon messager-info"></div>' + _286;
                    break;
                case "question":
                    _286 = '<div class="messager-icon messager-question"></div>' + _286;
                    break;
                case "warning":
                    _286 = '<div class="messager-icon messager-warning"></div>' + _286;
                    break
            }
            _286 += '<div style="clear:both;"/>';
            var _287 = {};
            _287[$.messager.defaults.ok] = function () {
                win.window("close");
                if (fn) {
                    fn();
                    return false
                }
            };
            var win = _27f(_285, _286, _287);
            return win
        },
        confirm: function (_288, msg, fn) {
            var _289 = '<div class="messager-icon messager-question"></div><div>' + msg + '</div><div style="clear:both;"/>';
            var _28a = {};
            _28a[$.messager.defaults.ok] = function () {
                win.window("close");
                if (fn) {
                    fn(true);
                    return false
                }
            };
            _28a[$.messager.defaults.cancel] = function () {
                win.window("close");
                if (fn) {
                    fn(false);
                    return false
                }
            };
            var win = _27f(_288, _289, _28a);
            return win
        },
        prompt: function (_28b, msg, fn) {
            var _28c = '<div class="messager-icon messager-question"></div><div>' + msg + '</div><br/><div style="clear:both;"/><div><input class="messager-input" type="text"/></div>';
            var _28d = {};
            _28d[$.messager.defaults.ok] = function () {
                win.window("close");
                if (fn) {
                    fn($(".messager-input", win).val());
                    return false
                }
            };
            _28d[$.messager.defaults.cancel] = function () {
                win.window("close");
                if (fn) {
                    fn();
                    return false
                }
            };
            var win = _27f(_28b, _28c, _28d);
            win.children("input.messager-input").focus();
            return win
        },
        progress: function (_28e) {
            var _28f = {
                bar: function () {
                    return $("body>div.messager-window").find("div.messager-p-bar")
                },
                close: function () {
                    var win = $("body>div.messager-window>div.messager-body:has(div.messager-progress)");
                    if (win.length) {
                        win.window("close")
                    }
                }
            };
            if (typeof _28e == "string") {
                var _290 = _28f[_28e];
                return _290()
            }
            var opts = $.extend({
                title: "",
                msg: "",
                text: undefined,
                interval: 300
            }, _28e || {});
            var _291 = '<div class="messager-progress"><div class="messager-p-msg"></div><div class="messager-p-bar"></div></div>';
            var win = _27f(opts.title, _291, null);
            win.find("div.messager-p-msg").html(opts.msg);
            var bar = win.find("div.messager-p-bar");
            bar.progressbar({
                text: opts.text
            });
            win.window({
                closable: false,
                onClose: function () {
                    if (this.timer) {
                        clearInterval(this.timer)
                    }
                    $(this).window("destroy")
                }
            });
            if (opts.interval) {
                win[0].timer = setInterval(function () {
                    var v = bar.progressbar("getValue");
                    v += 10;
                    if (v > 100) {
                        v = 0
                    }
                    bar.progressbar("setValue", v)
                }, opts.interval)
            }
            return win
        }
    };
    $.messager.defaults = {
        ok: "Ok",
        cancel: "Cancel"
    }
})(jQuery);
(function (j) {
    function c(q) {
        var v = j.data(q, "accordion");
        var t = v.options;
        var s = v.panels;
        var y = j(q);
        t.fit ? j.extend(t, y._fit()) : y._fit(false);
        if (!isNaN(t.width)) {
            y._outerWidth(t.width)
        } else {
            y.css("width", "")
        }
        var x = 0;
        var u = "auto";
        var r = y.find(">div.panel>div.accordion-header");
        if (r.length) {
            x = j(r[0]).css("height", "")._outerHeight()
        }
        if (!isNaN(t.height)) {
            y._outerHeight(t.height);
            u = y.height() - x * r.length
        } else {
            y.css("height", "")
        }
        w(true, u - w(false) + 1);

        function w(B, F) {
            var C = 0;
            for (var A = 0; A < s.length; A++) {
                var D = s[A];
                var z = D.panel("header")._outerHeight(x);
                if (D.panel("options").collapsible == B) {
                    var E = isNaN(F) ? undefined : (F + x * z.length);
                    D.panel("resize", {
                        width: y.width(),
                        height: (B ? E : undefined)
                    });
                    C += D.panel("panel").outerHeight() - x
                }
            }
            return C
        }
    }
    function d(w, u, r, v) {
        var x = j.data(w, "accordion").panels;
        var t = [];
        for (var q = 0; q < x.length; q++) {
            var s = x[q];
            if (u) {
                if (s.panel("options")[u] == r) {
                    t.push(s)
                }
            } else {
                if (s[0] == j(r)[0]) {
                    return q
                }
            }
        }
        if (u) {
            return v ? t : (t.length ? t[0] : null)
        } else {
            return -1
        }
    }
    function i(q) {
        return d(q, "collapsed", false, true)
    }
    function p(r) {
        var q = i(r);
        return q.length ? q[0] : null
    }
    function b(q, r) {
        return d(q, null, r)
    }
    function m(r, s) {
        var q = j.data(r, "accordion").panels;
        if (typeof s == "number") {
            if (s < 0 || s >= q.length) {
                return null
            } else {
                return q[s]
            }
        }
        return d(r, "title", s)
    }
    function a(s) {
        var q = j.data(s, "accordion").options;
        var r = j(s);
        if (q.border) {
            r.removeClass("accordion-noborder")
        } else {
            r.addClass("accordion-noborder")
        }
    }
    function h(s) {
        var q = j.data(s, "accordion");
        var r = j(s);
        r.addClass("accordion");
        q.panels = [];
        r.children("div").each(function () {
            var u = j.extend({}, j.parser.parseOptions(this), {
                selected: (j(this).attr("selected") ? true : undefined)
            });
            var t = j(this);
            q.panels.push(t);
            o(s, t, u)
        });
        r.bind("_resize", function (v, u) {
            var t = j.data(s, "accordion").options;
            if (t.fit == true || u) {
                c(s)
            }
            return false
        })
    }
    function o(r, v, w) {
        var s = j.data(r, "accordion").options;
        v.panel(j.extend({}, {
            collapsible: true,
            minimizable: false,
            maximizable: false,
            closable: false,
            doSize: false,
            collapsed: true,
            headerCls: "accordion-header",
            bodyCls: "accordion-body"
        }, w, {
                onBeforeExpand: function () {
                    if (w.onBeforeExpand) {
                        if (w.onBeforeExpand.call(this) == false) {
                            return false
                        }
                    }
                    if (!s.multiple) {
                        var z = j.grep(i(r), function (A) {
                            return A.panel("options").collapsible
                        });
                        for (var t = 0; t < z.length; t++) {
                            g(r, b(r, z[t]))
                        }
                    }
                    var y = j(this).panel("header");
                    y.addClass("accordion-header-selected");
                    y.find(".accordion-collapse").removeClass("accordion-expand")
                },
                onExpand: function () {
                    if (w.onExpand) {
                        w.onExpand.call(this)
                    }
                    s.onSelect.call(r, j(this).panel("options").title, b(r, this))
                },
                onBeforeCollapse: function () {
                    if (w.onBeforeCollapse) {
                        if (w.onBeforeCollapse.call(this) == false) {
                            return false
                        }
                    }
                    var t = j(this).panel("header");
                    t.removeClass("accordion-header-selected");
                    t.find(".accordion-collapse").addClass("accordion-expand")
                },
                onCollapse: function () {
                    if (w.onCollapse) {
                        w.onCollapse.call(this)
                    }
                    s.onUnselect.call(r, j(this).panel("options").title, b(r, this))
                }
            }));
        var u = v.panel("header");
        var x = u.children("div.panel-tool");
        x.children("a.panel-tool-collapse").hide();
        var q = j('<a href="javascript:void(0)"></a>').addClass("accordion-collapse accordion-expand").appendTo(x);
        q.bind("click", function () {
            var t = b(r, v);
            if (v.panel("options").collapsed) {
                f(r, t)
            } else { }
            return false
        });
        v.panel("options").collapsible ? q.show() : q.hide();
        u.click(function () {
            j(this).find("a.accordion-collapse:visible").triggerHandler("click");
            return false
        })
    }
    function f(q, s) {
        var t = m(q, s);
        if (!t) {
            return
        }
        n(q);
        var r = j.data(q, "accordion").options;
        t.panel("expand", r.animate)
    }
    function g(t, s) {
        var r = m(t, s);
        if (!r) {
            return
        }
        n(t);
        var q = j.data(t, "accordion").options;
        r.panel("collapse", q.animate)
    }
    function e(s) {
        var r = j.data(s, "accordion").options;
        var t = d(s, "selected", true);
        if (t) {
            q(b(s, t))
        } else {
            q(r.selected)
        }
        function q(v) {
            var u = r.animate;
            r.animate = false;
            f(s, v);
            r.animate = u
        }
    }
    function n(r) {
        var s = j.data(r, "accordion").panels;
        for (var q = 0; q < s.length; q++) {
            s[q].stop(true, true)
        }
    }
    function l(v, s) {
        var q = j.data(v, "accordion");
        var t = q.options;
        var r = q.panels;
        if (s.selected == undefined) {
            s.selected = true
        }
        n(v);
        var u = j("<div></div>").appendTo(v);
        r.push(u);
        o(v, u, s);
        c(v);
        t.onAdd.call(v, s.title, r.length - 1);
        if (s.selected) {
            f(v, r.length - 1)
        }
    }
    function k(s, y) {
        var u = j.data(s, "accordion");
        var w = u.options;
        var x = u.panels;
        n(s);
        var t = m(s, y);
        var r = t.panel("options").title;
        var q = b(s, t);
        if (!t) {
            return
        }
        if (w.onBeforeRemove.call(s, r, q) == false) {
            return
        }
        x.splice(q, 1);
        t.panel("destroy");
        if (x.length) {
            c(s);
            var v = p(s);
            if (!v) {
                f(s, 0)
            }
        }
        w.onRemove.call(s, r, q)
    }
    j.fn.accordion = function (q, r) {
        if (typeof q == "string") {
            return j.fn.accordion.methods[q](this, r)
        }
        q = q || {};
        return this.each(function () {
            var s = j.data(this, "accordion");
            if (s) {
                j.extend(s.options, q)
            } else {
                j.data(this, "accordion", {
                    options: j.extend({}, j.fn.accordion.defaults, j.fn.accordion.parseOptions(this), q),
                    accordion: j(this).addClass("accordion"),
                    panels: []
                });
                h(this)
            }
            a(this);
            c(this);
            e(this)
        })
    };
    j.fn.accordion.methods = {
        options: function (q) {
            return j.data(q[0], "accordion").options
        },
        panels: function (q) {
            return j.data(q[0], "accordion").panels
        },
        resize: function (q) {
            return q.each(function () {
                c(this)
            })
        },
        getSelections: function (q) {
            return i(q[0])
        },
        getSelected: function (q) {
            return p(q[0])
        },
        getPanel: function (q, r) {
            return m(q[0], r)
        },
        getPanelIndex: function (q, r) {
            return b(q[0], r)
        },
        select: function (q, r) {
            return q.each(function () {
                f(this, r)
            })
        },
        unselect: function (q, r) {
            return q.each(function () {
                g(this, r)
            })
        },
        add: function (q, r) {
            return q.each(function () {
                l(this, r)
            })
        },
        remove: function (q, r) {
            return q.each(function () {
                k(this, r)
            })
        }
    };
    j.fn.accordion.parseOptions = function (r) {
        var q = j(r);
        return j.extend({}, j.parser.parseOptions(r, ["width", "height",
            {
                fit: "boolean",
                border: "boolean",
                animate: "boolean",
                multiple: "boolean",
                selected: "number"
            }]))
    };
    j.fn.accordion.defaults = {
        width: "auto",
        height: "auto",
        fit: false,
        border: true,
        animate: true,
        multiple: false,
        selected: 0,
        onSelect: function (q, r) { },
        onUnselect: function (q, r) { },
        onAdd: function (q, r) { },
        onBeforeRemove: function (r, q) { },
        onRemove: function (r, q) { }
    }
})(jQuery);
(function ($) {
    function _2e8(_2e9) {
        var opts = $.data(_2e9, "tabs").options;
        if (opts.tabPosition == "left" || opts.tabPosition == "right" || !opts.showHeader) {
            return
        }
        var _2ea = $(_2e9).children("div.tabs-header");
        var tool = _2ea.children("div.tabs-tool");
        var _2eb = _2ea.children("div.tabs-scroller-left");
        var _2ec = _2ea.children("div.tabs-scroller-right");
        var wrap = _2ea.children("div.tabs-wrap");
        var _2ed = _2ea.outerHeight();
        if (opts.plain) {
            _2ed -= _2ed - _2ea.height()
        }
        tool._outerHeight(_2ed);
        var _2ee = 0;
        $("ul.tabs li", _2ea).each(function () {
            _2ee += $(this).outerWidth(true)
        });
        var _2ef = _2ea.width() - tool._outerWidth();
        if (_2ee > _2ef) {
            _2eb.add(_2ec).show()._outerHeight(_2ed);
            if (opts.toolPosition == "left") {
                tool.css({
                    left: _2eb.outerWidth(),
                    right: ""
                });
                wrap.css({
                    marginLeft: _2eb.outerWidth() + tool._outerWidth(),
                    marginRight: _2ec._outerWidth(),
                    width: _2ef - _2eb.outerWidth() - _2ec.outerWidth()
                })
            } else {
                tool.css({
                    left: "",
                    right: _2ec.outerWidth()
                });
                wrap.css({
                    marginLeft: _2eb.outerWidth(),
                    marginRight: _2ec.outerWidth() + tool._outerWidth(),
                    width: _2ef - _2eb.outerWidth() - _2ec.outerWidth()
                })
            }
        } else {
            _2eb.add(_2ec).hide();
            if (opts.toolPosition == "left") {
                tool.css({
                    left: 0,
                    right: ""
                });
                wrap.css({
                    marginLeft: tool._outerWidth(),
                    marginRight: 0,
                    width: _2ef
                })
            } else {
                tool.css({
                    left: "",
                    right: 0
                });
                wrap.css({
                    marginLeft: 0,
                    marginRight: tool._outerWidth(),
                    width: _2ef
                })
            }
        }
    }
    function _2f0(_2f1) {
        var opts = $.data(_2f1, "tabs").options;
        var _2f2 = $(_2f1).children("div.tabs-header");
        if (opts.tools) {
            if (typeof opts.tools == "string") {
                $(opts.tools).addClass("tabs-tool").appendTo(_2f2);
                $(opts.tools).show()
            } else {
                _2f2.children("div.tabs-tool").remove();
                var _2f3 = $('<div class="tabs-tool"><table cellspacing="0" cellpadding="0" style="height:100%"><tr></tr></table></div>').appendTo(_2f2);
                var tr = _2f3.find("tr");
                for (var i = 0; i < opts.tools.length; i++) {
                    var td = $("<td></td>").appendTo(tr);
                    var tool = $('<a href="javascript:void(0);"></a>').appendTo(td);
                    tool[0].onclick = eval(opts.tools[i].handler ||
                        function () { });
                    tool.linkbutton($.extend({}, opts.tools[i], {
                        plain: true
                    }))
                }
            }
        } else {
            _2f2.children("div.tabs-tool").remove()
        }
    }
    function _2f4(_2f5) {
        var _2f6 = $.data(_2f5, "tabs");
        var opts = _2f6.options;
        var cc = $(_2f5);
        opts.fit ? $.extend(opts, cc._fit()) : cc._fit(false);
        cc.width(opts.width).height(opts.height);
        var _2f7 = $(_2f5).children("div.tabs-header");
        var _2f8 = $(_2f5).children("div.tabs-panels");
        var wrap = _2f7.find("div.tabs-wrap");
        var ul = wrap.find(".tabs");
        for (var i = 0; i < _2f6.tabs.length; i++) {
            var _2f9 = _2f6.tabs[i].panel("options");
            var p_t = _2f9.tab.find("a.tabs-inner");
            var _2fa = parseInt(_2f9.tabWidth || opts.tabWidth) || undefined;
            if (_2fa) {
                p_t._outerWidth(_2fa)
            } else {
                p_t.css("width", "")
            }
            p_t._outerHeight(opts.tabHeight);
            p_t.css("lineHeight", p_t.height() + "px")
        }
        if (opts.tabPosition == "left" || opts.tabPosition == "right") {
            _2f7._outerWidth(opts.showHeader ? opts.headerWidth : 0);
            _2f8._outerWidth(cc.width() - _2f7.outerWidth());
            _2f7.add(_2f8)._outerHeight(opts.height);
            wrap._outerWidth(_2f7.width());
            ul._outerWidth(wrap.width()).css("height", "")
        } else {
            var lrt = _2f7.children("div.tabs-scroller-left,div.tabs-scroller-right,div.tabs-tool");
            _2f7._outerWidth(opts.width).css("height", "");
            if (opts.showHeader) {
                _2f7.css("background-color", "");
                wrap.css("height", "");
                lrt.show()
            } else {
                _2f7.css("background-color", "transparent");
                _2f7._outerHeight(0);
                wrap._outerHeight(0);
                lrt.hide()
            }
            ul._outerHeight(opts.tabHeight).css("width", "");
            _2e8(_2f5);
            var _2fb = opts.height;
            if (!isNaN(_2fb)) {
                _2f8._outerHeight(_2fb - _2f7.outerHeight())
            } else {
                _2f8.height("auto")
            }
            var _2fa = opts.width;
            if (!isNaN(_2fa)) {
                _2f8._outerWidth(_2fa)
            } else {
                _2f8.width("auto")
            }
        }
    }
    function _2fc(_2fd) {
        var opts = $.data(_2fd, "tabs").options;
        var tab = _2fe(_2fd);
        if (tab) {
            var _2ff = $(_2fd).children("div.tabs-panels");
            var _300 = opts.width == "auto" ? "auto" : _2ff.width();
            var _301 = opts.height == "auto" ? "auto" : _2ff.height();
            tab.panel("resize", {
                width: _300,
                height: _301
            })
        }
    }
    function _302(_303) {
        var tabs = $.data(_303, "tabs").tabs;
        var cc = $(_303);
        cc.addClass("tabs-container");
        var pp = $('<div class="tabs-panels"></div>').insertBefore(cc);
        cc.children("div").each(function () {
            pp[0].appendChild(this)
        });
        cc[0].appendChild(pp[0]);
        $('<div class="tabs-header"><div class="tabs-scroller-left"></div><div class="tabs-scroller-right"></div><div class="tabs-wrap"><ul class="tabs"></ul></div></div>').prependTo(_303);
        cc.children("div.tabs-panels").children("div").each(function (i) {
            var opts = $.extend({}, $.parser.parseOptions(this), {
                selected: ($(this).attr("selected") ? true : undefined)
            });
            var pp = $(this);
            tabs.push(pp);
            _310(_303, pp, opts)
        });
        cc.children("div.tabs-header").find(".tabs-scroller-left, .tabs-scroller-right").hover(function () {
            $(this).addClass("tabs-scroller-over")
        }, function () {
            $(this).removeClass("tabs-scroller-over")
        });
        cc.bind("_resize", function (e, _304) {
            var opts = $.data(_303, "tabs").options;
            if (opts.fit == true || _304) {
                _2f4(_303);
                _2fc(_303)
            }
            return false
        })
    }
    function _305(_306) {
        var _307 = $.data(_306, "tabs");
        var opts = _307.options;
        $(_306).children("div.tabs-header").unbind().bind("click", function (e) {
            if ($(e.target).hasClass("tabs-scroller-left")) {
                $(_306).tabs("scrollBy", -opts.scrollIncrement)
            } else {
                if ($(e.target).hasClass("tabs-scroller-right")) {
                    $(_306).tabs("scrollBy", opts.scrollIncrement)
                } else {
                    var li = $(e.target).closest("li");
                    if (li.hasClass("tabs-disabled")) {
                        return
                    }
                    var a = $(e.target).closest("a.tabs-close");
                    if (a.length) {
                        _321(_306, _308(li))
                    } else {
                        if (li.length) {
                            var _309 = _308(li);
                            var _30a = _307.tabs[_309].panel("options");
                            if (_30a.collapsible) {
                                _30a.closed ? _317(_306, _309) : _338(_306, _309)
                            } else {
                                _317(_306, _309)
                            }
                        }
                    }
                }
            }
        }).bind("contextmenu", function (e) {
            var li = $(e.target).closest("li");
            if (li.hasClass("tabs-disabled")) {
                return
            }
            if (li.length) {
                opts.onContextMenu.call(_306, e, li.find("span.tabs-title").html(), _308(li))
            }
        });

        function _308(li) {
            var _30b = 0;
            li.parent().children("li").each(function (i) {
                if (li[0] == this) {
                    _30b = i;
                    return false
                }
            });
            return _30b
        }
    }
    function _30c(_30d) {
        var opts = $.data(_30d, "tabs").options;
        var _30e = $(_30d).children("div.tabs-header");
        var _30f = $(_30d).children("div.tabs-panels");
        _30e.removeClass("tabs-header-top tabs-header-bottom tabs-header-left tabs-header-right");
        _30f.removeClass("tabs-panels-top tabs-panels-bottom tabs-panels-left tabs-panels-right");
        if (opts.tabPosition == "top") {
            _30e.insertBefore(_30f)
        } else {
            if (opts.tabPosition == "bottom") {
                _30e.insertAfter(_30f);
                _30e.addClass("tabs-header-bottom");
                _30f.addClass("tabs-panels-top")
            } else {
                if (opts.tabPosition == "left") {
                    _30e.addClass("tabs-header-left");
                    _30f.addClass("tabs-panels-right")
                } else {
                    if (opts.tabPosition == "right") {
                        _30e.addClass("tabs-header-right");
                        _30f.addClass("tabs-panels-left")
                    }
                }
            }
        }
        if (opts.plain == true) {
            _30e.addClass("tabs-header-plain")
        } else {
            _30e.removeClass("tabs-header-plain")
        }
        if (opts.border == true) {
            _30e.removeClass("tabs-header-noborder");
            _30f.removeClass("tabs-panels-noborder")
        } else {
            _30e.addClass("tabs-header-noborder");
            _30f.addClass("tabs-panels-noborder")
        }
    }
    function _310(_311, pp, _312) {
        var _313 = $.data(_311, "tabs");
        _312 = _312 || {};
        pp.panel($.extend({}, _312, {
            border: false,
            noheader: true,
            closed: true,
            doSize: false,
            iconCls: (_312.icon ? _312.icon : undefined),
            onLoad: function () {
                if (_312.onLoad) {
                    _312.onLoad.call(this, arguments)
                }
                _313.options.onLoad.call(_311, $(this))
            }
        }));
        var opts = pp.panel("options");
        var tabs = $(_311).children("div.tabs-header").find("ul.tabs");
        opts.tab = $("<li></li>").appendTo(tabs);
        opts.tab.append('<a href="javascript:void(0)" class="tabs-inner"><span class="tabs-title"></span><span class="tabs-icon"></span></a>');
        $(_311).tabs("update", {
            tab: pp,
            options: opts
        });
        var panelTitle = $(pp).attr("title");
        panelTitle ? $(pp).removeAttr("title") : ""
    }
    function _314(_315, _316) {
        var opts = $.data(_315, "tabs").options;
        var tabs = $.data(_315, "tabs").tabs;
        if (_316.selected == undefined) {
            _316.selected = true
        }
        var pp = $("<div></div>").appendTo($(_315).children("div.tabs-panels"));
        tabs.push(pp);
        _310(_315, pp, _316);
        opts.onAdd.call(_315, _316.title, tabs.length - 1);
        _2f4(_315);
        if (_316.selected) {
            _317(_315, tabs.length - 1)
        }
    }
    function _318(_319, _31a) {
        var _31b = $.data(_319, "tabs").selectHis;
        var pp = _31a.tab;
        var _31c = pp.panel("options").title;
        pp.panel($.extend({}, _31a.options, {
            iconCls: (_31a.options.icon ? _31a.options.icon : undefined)
        }));
        var opts = pp.panel("options");
        var tab = opts.tab;
        var _31d = tab.find("span.tabs-title");
        var _31e = tab.find("span.tabs-icon");
        _31d.html(mText.encode(opts.title));
        _31e.attr("class", "tabs-icon");
        tab.find("a.tabs-close").remove();
        if (opts.closable) {
            _31d.addClass("tabs-closable");
            $('<a href="javascript:void(0)" class="tabs-close"></a>').appendTo(tab)
        } else {
            _31d.removeClass("tabs-closable")
        }
        if (opts.iconCls) {
            _31d.addClass("tabs-with-icon");
            _31e.addClass(opts.iconCls)
        } else {
            _31d.removeClass("tabs-with-icon")
        }
        if (_31c != opts.title) {
            for (var i = 0; i < _31b.length; i++) {
                if (_31b[i] == _31c) {
                    _31b[i] = opts.title
                }
            }
        }
        tab.find("span.tabs-p-tool").remove();
        if (opts.tools) {
            var _31f = $('<span class="tabs-p-tool"></span>').insertAfter(tab.find("a.tabs-inner"));
            if ($.isArray(opts.tools)) {
                for (var i = 0; i < opts.tools.length; i++) {
                    var t = $('<a href="javascript:void(0)"></a>').appendTo(_31f);
                    t.addClass(opts.tools[i].iconCls);
                    if (opts.tools[i].handler) {
                        t.bind("click", {
                            handler: opts.tools[i].handler
                        }, function (e) {
                            if ($(this).parents("li").hasClass("tabs-disabled")) {
                                return
                            }
                            e.data.handler.call(this)
                        })
                    }
                }
            } else {
                $(opts.tools).children().appendTo(_31f)
            }
            var pr = _31f.children().length * 12;
            if (opts.closable) {
                pr += 8
            } else {
                pr -= 3;
                _31f.css("right", "5px")
            }
            _31d.css("padding-right", pr + "px")
        }
        _2f4(_319);
        $.data(_319, "tabs").options.onUpdate.call(_319, opts.title, _320(_319, pp))
    }
    function _321(_322, _323) {
        var opts = $.data(_322, "tabs").options;
        var tabs = $.data(_322, "tabs").tabs;
        var _324 = $.data(_322, "tabs").selectHis;
        if (!_325(_322, _323)) {
            return
        }
        var tab = _326(_322, _323);
        var _327 = tab.panel("options").title;
        var _328 = _320(_322, tab);
        if (opts.onBeforeClose.call(_322, _327, _328) == false) {
            return
        }
        var tab = _326(_322, _323, true);
        tab.panel("options").tab.remove();
        tab.panel("destroy");
        opts.onClose.call(_322, _327, _328);
        _2f4(_322);
        for (var i = 0; i < _324.length; i++) {
            if (_324[i] == _327) {
                _324.splice(i, 1);
                i--
            }
        }
        var _329 = _324.pop();
        if (_329) {
            _317(_322, _329)
        } else {
            if (tabs.length) {
                _317(_322, 0)
            }
        }
    }
    function _326(_32a, _32b, _32c) {
        var tabs = $.data(_32a, "tabs").tabs;
        if (typeof _32b == "number") {
            if (_32b < 0 || _32b >= tabs.length) {
                return null
            } else {
                var tab = tabs[_32b];
                if (_32c) {
                    tabs.splice(_32b, 1)
                }
                return tab
            }
        }
        for (var i = 0; i < tabs.length; i++) {
            var tab = tabs[i];
            if (tab.panel("options").title == _32b) {
                if (_32c) {
                    tabs.splice(i, 1)
                }
                return tab
            }
        }
        return null
    }
    function _320(_32d, tab) {
        var tabs = $.data(_32d, "tabs").tabs;
        for (var i = 0; i < tabs.length; i++) {
            if (tabs[i][0] == $(tab)[0]) {
                return i
            }
        }
        return -1
    }
    function _2fe(_32e) {
        var tabs = $.data(_32e, "tabs").tabs;
        for (var i = 0; i < tabs.length; i++) {
            var tab = tabs[i];
            if (tab.panel("options").closed == false) {
                return tab
            }
        }
        return null
    }
    function _32f(_330) {
        var _331 = $.data(_330, "tabs");
        var tabs = _331.tabs;
        for (var i = 0; i < tabs.length; i++) {
            if (tabs[i].panel("options").selected) {
                _317(_330, i);
                return
            }
        }
        _317(_330, _331.options.selected)
    }
    function _317(_332, _333) {
        var _334 = $.data(_332, "tabs");
        var opts = _334.options;
        var tabs = _334.tabs;
        var _335 = _334.selectHis;
        if (tabs.length == 0) {
            return
        }
        var _336 = _326(_332, _333);
        if (!_336) {
            return
        }
        var _337 = _2fe(_332);
        if (_337) {
            if (_336[0] == _337[0]) {
                _2fc(_332);
                return
            }
            _338(_332, _320(_332, _337));
            if (!_337.panel("options").closed) {
                return
            }
        }
        _336.panel("open");
        var _339 = _336.panel("options").title;
        _335.push(_339);
        var tab = _336.panel("options").tab;
        tab.addClass("tabs-selected");
        var wrap = $(_332).find(">div.tabs-header>div.tabs-wrap");
        var left = tab.position().left;
        var _33a = left + tab.outerWidth();
        if (left < 0 || _33a > wrap.width()) {
            var _33b = left - (wrap.width() - tab.width()) / 2;
            $(_332).tabs("scrollBy", _33b)
        } else {
            $(_332).tabs("scrollBy", 0)
        }
        _2fc(_332);
        opts.onSelect.call(_332, _339, _320(_332, _336))
    }
    function _338(_33c, _33d) {
        var _33e = $.data(_33c, "tabs");
        var p = _326(_33c, _33d);
        if (p) {
            var opts = p.panel("options");
            if (!opts.closed) {
                p.panel("close");
                if (opts.closed) {
                    opts.tab.removeClass("tabs-selected");
                    _33e.options.onUnselect.call(_33c, opts.title, _320(_33c, p))
                }
            }
        }
    }
    function _325(_33f, _340) {
        return _326(_33f, _340) != null
    }
    function _341(_342, _343) {
        var opts = $.data(_342, "tabs").options;
        opts.showHeader = _343;
        $(_342).tabs("resize")
    }
    $.fn.tabs = function (_344, _345) {
        if (typeof _344 == "string") {
            return $.fn.tabs.methods[_344](this, _345)
        }
        _344 = _344 || {};
        return this.each(function () {
            var _346 = $.data(this, "tabs");
            var opts;
            if (_346) {
                opts = $.extend(_346.options, _344);
                _346.options = opts
            } else {
                $.data(this, "tabs", {
                    options: $.extend({}, $.fn.tabs.defaults, $.fn.tabs.parseOptions(this), _344),
                    tabs: [],
                    selectHis: []
                });
                _302(this)
            }
            _2f0(this);
            _30c(this);
            _2f4(this);
            _305(this);
            _32f(this)
        })
    };
    $.fn.tabs.methods = {
        options: function (jq) {
            var cc = jq[0];
            var opts = $.data(cc, "tabs").options;
            var s = _2fe(cc);
            opts.selected = s ? _320(cc, s) : -1;
            return opts
        },
        tabs: function (jq) {
            return $.data(jq[0], "tabs").tabs
        },
        resize: function (jq) {
            return jq.each(function () {
                _2f4(this);
                _2fc(this)
            })
        },
        add: function (jq, _347) {
            return jq.each(function () {
                _314(this, _347)
            })
        },
        close: function (jq, _348) {
            return jq.each(function () {
                _321(this, _348)
            })
        },
        getTab: function (jq, _349) {
            return _326(jq[0], _349)
        },
        getTabIndex: function (jq, tab) {
            return _320(jq[0], tab)
        },
        getSelected: function (jq) {
            return _2fe(jq[0])
        },
        select: function (jq, _34a) {
            return jq.each(function () {
                _317(this, _34a)
            })
        },
        unselect: function (jq, _34b) {
            return jq.each(function () {
                _338(this, _34b)
            })
        },
        exists: function (jq, _34c) {
            return _325(jq[0], _34c)
        },
        update: function (jq, _34d) {
            return jq.each(function () {
                _318(this, _34d)
            })
        },
        enableTab: function (jq, _34e) {
            return jq.each(function () {
                $(this).tabs("getTab", _34e).panel("options").tab.removeClass("tabs-disabled")
            })
        },
        disableTab: function (jq, _34f) {
            return jq.each(function () {
                $(this).tabs("getTab", _34f).panel("options").tab.addClass("tabs-disabled")
            })
        },
        showHeader: function (jq) {
            return jq.each(function () {
                _341(this, true)
            })
        },
        hideHeader: function (jq) {
            return jq.each(function () {
                _341(this, false)
            })
        },
        scrollBy: function (jq, _350) {
            return jq.each(function () {
                var opts = $(this).tabs("options");
                var wrap = $(this).find(">div.tabs-header>div.tabs-wrap");
                var pos = Math.min(wrap._scrollLeft() + _350, _351());
                wrap.animate({
                    scrollLeft: pos
                }, opts.scrollDuration);

                function _351() {
                    var w = 0;
                    var ul = wrap.children("ul");
                    ul.children("li").each(function () {
                        w += $(this).outerWidth(true)
                    });
                    return w - wrap.width() + (ul.outerWidth() - ul.width())
                }
            })
        }
    };
    $.fn.tabs.parseOptions = function (_352) {
        return $.extend({}, $.parser.parseOptions(_352, ["width", "height", "tools", "toolPosition", "tabPosition",
            {
                fit: "boolean",
                border: "boolean",
                plain: "boolean",
                headerWidth: "number",
                tabWidth: "number",
                tabHeight: "number",
                selected: "number",
                showHeader: "boolean"
            }]))
    };
    $.fn.tabs.defaults = {
        width: "auto",
        height: "auto",
        headerWidth: 150,
        tabWidth: "auto",
        tabHeight: 27,
        selected: 0,
        showHeader: true,
        plain: false,
        fit: false,
        border: true,
        tools: null,
        toolPosition: "right",
        tabPosition: "top",
        scrollIncrement: 100,
        scrollDuration: 400,
        onLoad: function (_353) { },
        onSelect: function (_354, _355) { },
        onUnselect: function (_356, _357) { },
        onBeforeClose: function (_358, _359) { },
        onClose: function (_35a, _35b) { },
        onAdd: function (_35c, _35d) { },
        onUpdate: function (_35e, _35f) { },
        onContextMenu: function (e, _360, _361) { }
    }
})(jQuery);
(function (f) {
    var h = false;

    function b(r) {
        var m = f.data(r, "layout");
        var p = m.options;
        var k = m.panels;
        var t = f(r);
        if (r.tagName == "BODY") {
            t._fit()
        } else {
            p.fit ? t.css(t._fit()) : t._fit(false)
        }
        var l = {
            top: 0,
            left: 0,
            width: t.width(),
            height: t.height()
        };
        n(a(k.expandNorth) ? k.expandNorth : k.north, "n");
        n(a(k.expandSouth) ? k.expandSouth : k.south, "s");
        s(a(k.expandEast) ? k.expandEast : k.east, "e");
        s(a(k.expandWest) ? k.expandWest : k.west, "w");
        k.center.panel("resize", l);

        function q(u) {
            var v = u.panel("options");
            return Math.min(Math.max(v.height, v.minHeight), v.maxHeight)
        }
        function o(u) {
            var v = u.panel("options");
            return Math.min(Math.max(v.width, v.minWidth), v.maxWidth)
        }
        function n(u, w) {
            if (!u.length || !a(u)) {
                return
            }
            var v = u.panel("options");
            var x = q(u);
            u.panel("resize", {
                width: t.width(),
                height: x,
                left: 0,
                top: (w == "n" ? 0 : t.height() - x)
            });
            l.height -= x;
            if (w == "n") {
                l.top += x;
                if (!v.split && v.border) {
                    l.top--
                }
            }
            if (!v.split && v.border) {
                l.height++
            }
        }
        function s(v, x) {
            if (!v.length || !a(v)) {
                return
            }
            var w = v.panel("options");
            var u = o(v);
            v.panel("resize", {
                width: u,
                height: l.height,
                left: (x == "e" ? t.width() - u : 0),
                top: l.top
            });
            l.width -= u;
            if (x == "w") {
                l.left += u;
                if (!w.split && w.border) {
                    l.left--
                }
            }
            if (!w.split && w.border) {
                l.width++
            }
        }
    }
    function d(m) {
        var l = f(m);
        l.addClass("layout");

        function k(n) {
            n.children("div").each(function () {
                var o = f.fn.layout.parsePanelOptions(this);
                if ("north,south,east,west,center".indexOf(o.region) >= 0) {
                    c(m, o, this)
                }
            })
        }
        l.children("form").length ? k(l.children("form")) : k(l);
        l.append('<div class="layout-split-proxy-h"></div><div class="layout-split-proxy-v"></div>');
        l.bind("_resize", function (p, n) {
            var o = f.data(m, "layout").options;
            if (o.fit == true || n) {
                b(m)
            }
            return false
        })
    }
    function c(s, m, p) {
        m.region = m.region || "center";
        var k = f.data(s, "layout").panels;
        var t = f(s);
        var r = m.region;
        if (k[r].length) {
            return
        }
        var q = f(p);
        if (!q.length) {
            q = f("<div></div>").appendTo(t)
        }
        var l = f.extend({}, f.fn.layout.paneldefaults, {
            width: (q.length ? parseInt(q[0].style.width) || q.outerWidth() : "auto"),
            height: (q.length ? parseInt(q[0].style.height) || q.outerHeight() : "auto"),
            doSize: false,
            collapsible: true,
            cls: ("layout-panel layout-panel-" + r),
            bodyCls: "layout-body",
            onOpen: function () {
                var v = f(this).panel("header").children("div.panel-tool");
                v.children("a.panel-tool-collapse").hide();
                var x = {
                    north: "up",
                    south: "down",
                    east: "right",
                    west: "left"
                };
                if (!x[r]) {
                    return
                }
                var u = "layout-button-" + x[r];
                var w = v.children("a." + u);
                if (!w.length) {
                    w = f('<a href="javascript:void(0)"></a>').addClass(u).appendTo(v);
                    w.bind("click", {
                        dir: r
                    }, function (y) {
                        j(s, y.data.dir);
                        return false
                    })
                }
                f(this).panel("options").collapsible ? w.show() : w.hide()
            }
        }, m);
        q.panel(l);
        k[r] = q;
        if (q.panel("options").split) {
            var n = q.panel("panel");
            n.addClass("layout-split-" + r);
            var o = "";
            if (r == "north") {
                o = "s"
            }
            if (r == "south") {
                o = "n"
            }
            if (r == "east") {
                o = "w"
            }
            if (r == "west") {
                o = "e"
            }
            n.resizable(f.extend({}, {
                handles: o,
                onStartResize: function (A) {
                    h = true;
                    if (r == "north" || r == "south") {
                        var u = f(">div.layout-split-proxy-v", s)
                    } else {
                        var u = f(">div.layout-split-proxy-h", s)
                    }
                    var z = 0,
                        y = 0,
                        v = 0,
                        x = 0;
                    var w = {
                        display: "block"
                    };
                    if (r == "north") {
                        w.top = parseInt(n.css("top")) + n.outerHeight() - u.height();
                        w.left = parseInt(n.css("left"));
                        w.width = n.outerWidth();
                        w.height = u.height()
                    } else {
                        if (r == "south") {
                            w.top = parseInt(n.css("top"));
                            w.left = parseInt(n.css("left"));
                            w.width = n.outerWidth();
                            w.height = u.height()
                        } else {
                            if (r == "east") {
                                w.top = parseInt(n.css("top")) || 0;
                                w.left = parseInt(n.css("left")) || 0;
                                w.width = u.width();
                                w.height = n.outerHeight()
                            } else {
                                if (r == "west") {
                                    w.top = parseInt(n.css("top")) || 0;
                                    w.left = n.outerWidth() - u.width();
                                    w.width = u.width();
                                    w.height = n.outerHeight()
                                }
                            }
                        }
                    }
                    u.css(w);
                    f('<div class="layout-mask"></div>').css({
                        left: 0,
                        top: 0,
                        width: t.width(),
                        height: t.height()
                    }).appendTo(t)
                },
                onResize: function (u) {
                    if (r == "north" || r == "south") {
                        var v = f(">div.layout-split-proxy-v", s);
                        v.css("top", u.pageY - f(s).offset().top - v.height() / 2)
                    } else {
                        var v = f(">div.layout-split-proxy-h", s);
                        v.css("left", u.pageX - f(s).offset().left - v.width() / 2)
                    }
                    return false
                },
                onStopResize: function (u) {
                    t.children("div.layout-split-proxy-v,div.layout-split-proxy-h").hide();
                    q.panel("resize", u.data);
                    b(s);
                    h = false;
                    t.find(">div.layout-mask").remove()
                }
            }, m))
        }
    }
    function g(k, n) {
        var l = f.data(k, "layout").panels;
        if (l[n].length) {
            l[n].panel("destroy");
            l[n] = f();
            var m = "expand" + n.substring(0, 1).toUpperCase() + n.substring(1);
            if (l[m]) {
                l[m].panel("destroy");
                l[m] = undefined
            }
        }
    }
    function j(o, k, s) {
        if (s == undefined) {
            s = "normal"
        }
        var m = f.data(o, "layout").panels;
        var r = m[k];
        var u = r.panel("options");
        if (u.onBeforeCollapse.call(r) == false) {
            return
        }
        var q = "expand" + k.substring(0, 1).toUpperCase() + k.substring(1);
        if (!m[q]) {
            m[q] = l(k);
            m[q].panel("panel").bind("click", function () {
                var p = t();
                r.panel("expand", false).panel("open").panel("resize", p.collapse);
                r.panel("panel").animate(p.expand, function () {
                    f(this).unbind(".layout").bind("mouseleave.layout", {
                        region: k
                    }, function (v) {
                        if (h == true) {
                            return
                        }
                        j(o, v.data.region)
                    })
                });
                return false
            })
        }
        var n = t();
        if (!a(m[q])) {
            m.center.panel("resize", n.resizeC)
        }
        r.panel("panel").animate(n.collapse, s, function () {
            r.panel("collapse", false).panel("close");
            m[q].panel("open").panel("resize", n.expandP);
            f(this).unbind(".layout")
        });

        function l(w) {
            var v;
            if (w == "east") {
                v = "layout-button-left"
            } else {
                if (w == "west") {
                    v = "layout-button-right"
                } else {
                    if (w == "north") {
                        v = "layout-button-down"
                    } else {
                        if (w == "south") {
                            v = "layout-button-up"
                        }
                    }
                }
            }
            var x = f("<div></div>").appendTo(o);
            x.panel(f.extend({}, f.fn.layout.paneldefaults, {
                cls: ("layout-expand layout-expand-" + w),
                title: "&nbsp;",
                closed: true,
                minWidth: 0,
                minHeight: 0,
                doSize: false,
                tools: [{
                    iconCls: v,
                    handler: function () {
                        e(o, k);
                        return false
                    }
                }]
            }));
            x.panel("panel").hover(function () {
                f(this).addClass("layout-expand-over")
            }, function () {
                f(this).removeClass("layout-expand-over")
            });
            return x
        }
        function t() {
            var w = f(o);
            var y = m.center.panel("options");
            var p = u.collapsedSize;
            if (k == "east") {
                var v = y.width + u.width - p;
                if (u.split || !u.border) {
                    v++
                }
                return {
                    resizeC: {
                        width: v
                    },
                    expand: {
                        left: w.width() - u.width
                    },
                    expandP: {
                        top: y.top,
                        left: w.width() - p,
                        width: p,
                        height: y.height
                    },
                    collapse: {
                        left: w.width(),
                        top: y.top,
                        height: y.height
                    }
                }
            } else {
                if (k == "west") {
                    var v = y.width + u.width - p;
                    if (u.split || !u.border) {
                        v++
                    }
                    return {
                        resizeC: {
                            width: v,
                            left: p - 1
                        },
                        expand: {
                            left: 0
                        },
                        expandP: {
                            left: 0,
                            top: y.top,
                            width: p,
                            height: y.height
                        },
                        collapse: {
                            left: -u.width,
                            top: y.top,
                            height: y.height
                        }
                    }
                } else {
                    if (k == "north") {
                        var x = y.height;
                        if (!a(m.expandNorth)) {
                            x += u.height - p + ((u.split || !u.border) ? 1 : 0)
                        }
                        m.east.add(m.west).add(m.expandEast).add(m.expandWest).panel("resize", {
                            top: p - 1,
                            height: x
                        });
                        return {
                            resizeC: {
                                top: p - 1,
                                height: x
                            },
                            expand: {
                                top: 0
                            },
                            expandP: {
                                top: 0,
                                left: 0,
                                width: w.width(),
                                height: p
                            },
                            collapse: {
                                top: -u.height,
                                width: w.width()
                            }
                        }
                    } else {
                        if (k == "south") {
                            var x = y.height;
                            if (!a(m.expandSouth)) {
                                x += u.height - p + ((u.split || !u.border) ? 1 : 0)
                            }
                            m.east.add(m.west).add(m.expandEast).add(m.expandWest).panel("resize", {
                                height: x
                            });
                            return {
                                resizeC: {
                                    height: x
                                },
                                expand: {
                                    top: w.height() - u.height
                                },
                                expandP: {
                                    top: w.height() - p,
                                    left: 0,
                                    width: w.width(),
                                    height: p
                                },
                                collapse: {
                                    top: w.height(),
                                    width: w.width()
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    function e(n, o) {
        var l = f.data(n, "layout").panels;
        var q = l[o];
        var r = q.panel("options");
        if (r.onBeforeExpand.call(q) == false) {
            return
        }
        var m = s();
        var k = "expand" + o.substring(0, 1).toUpperCase() + o.substring(1);
        if (l[k]) {
            l[k].panel("close");
            q.panel("panel").stop(true, true);
            q.panel("expand", false).panel("open").panel("resize", m.collapse);
            q.panel("panel").animate(m.expand, function () {
                b(n)
            })
        }
        function s() {
            var p = f(n);
            var t = l.center.panel("options");
            if (o == "east" && l.expandEast) {
                return {
                    collapse: {
                        left: p.width(),
                        top: t.top,
                        height: t.height
                    },
                    expand: {
                        left: p.width() - l.east.panel("options").width
                    }
                }
            } else {
                if (o == "west" && l.expandWest) {
                    return {
                        collapse: {
                            left: -l.west.panel("options").width,
                            top: t.top,
                            height: t.height
                        },
                        expand: {
                            left: 0
                        }
                    }
                } else {
                    if (o == "north" && l.expandNorth) {
                        return {
                            collapse: {
                                top: -l.north.panel("options").height,
                                width: p.width()
                            },
                            expand: {
                                top: 0
                            }
                        }
                    } else {
                        if (o == "south" && l.expandSouth) {
                            return {
                                collapse: {
                                    top: p.height(),
                                    width: p.width()
                                },
                                expand: {
                                    top: p.height() - l.south.panel("options").height
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    function a(k) {
        if (!k) {
            return false
        }
        if (k.length) {
            return k.panel("panel").is(":visible")
        } else {
            return false
        }
    }
    function i(k) {
        var l = f.data(k, "layout").panels;
        if (l.east.length && l.east.panel("options").collapsed) {
            j(k, "east", 0)
        }
        if (l.west.length && l.west.panel("options").collapsed) {
            j(k, "west", 0)
        }
        if (l.north.length && l.north.panel("options").collapsed) {
            j(k, "north", 0)
        }
        if (l.south.length && l.south.panel("options").collapsed) {
            j(k, "south", 0)
        }
    }
    f.fn.layout = function (k, l) {
        if (typeof k == "string") {
            return f.fn.layout.methods[k](this, l)
        }
        k = k || {};
        return this.each(function () {
            var m = f.data(this, "layout");
            if (m) {
                f.extend(m.options, k)
            } else {
                var n = f.extend({}, f.fn.layout.defaults, f.fn.layout.parseOptions(this), k);
                f.data(this, "layout", {
                    options: n,
                    panels: {
                        center: f(),
                        north: f(),
                        south: f(),
                        east: f(),
                        west: f()
                    }
                });
                d(this)
            }
            b(this);
            i(this)
        })
    };
    f.fn.layout.methods = {
        resize: function (k) {
            return k.each(function () {
                b(this)
            })
        },
        panel: function (k, l) {
            return f.data(k[0], "layout").panels[l]
        },
        collapse: function (k, l) {
            return k.each(function () {
                j(this, l)
            })
        },
        expand: function (k, l) {
            return k.each(function () {
                e(this, l)
            })
        },
        add: function (k, l) {
            return k.each(function () {
                c(this, l);
                b(this);
                if (f(this).layout("panel", l.region).panel("options").collapsed) {
                    j(this, l.region, 0)
                }
            })
        },
        remove: function (k, l) {
            return k.each(function () {
                g(this, l);
                b(this)
            })
        }
    };
    f.fn.layout.parseOptions = function (k) {
        return f.extend({}, f.parser.parseOptions(k, [{
            fit: "boolean"
        }]))
    };
    f.fn.layout.defaults = {
        fit: false
    };
    f.fn.layout.parsePanelOptions = function (k) {
        var l = f(k);
        return f.extend({}, f.fn.panel.parseOptions(k), f.parser.parseOptions(k, ["region",
            {
                split: "boolean",
                collpasedSize: "number",
                minWidth: "number",
                minHeight: "number",
                maxWidth: "number",
                maxHeight: "number"
            }]))
    };
    f.fn.layout.paneldefaults = f.extend({}, f.fn.panel.defaults, {
        region: null,
        split: false,
        collapsedSize: 28,
        minWidth: 10,
        minHeight: 10,
        maxWidth: 10000,
        maxHeight: 10000
    })
})(jQuery);
(function ($) {
    function init(_3a6) {
        $(_3a6).appendTo("body");
        $(_3a6).addClass("menu-top");
        $(document).unbind(".menu").bind("mousedown.menu", function (e) {
            var m = $(e.target).closest("div.menu,div.combo-p");
            if (m.length) {
                return
            }
            $("body>div.menu-top:visible").menu("hide")
        });
        var _3a7 = _3a8($(_3a6));
        for (var i = 0; i < _3a7.length; i++) {
            _3a9(_3a7[i])
        }
        function _3a8(menu) {
            var _3aa = [];
            menu.addClass("menu");
            _3aa.push(menu);
            if (!menu.hasClass("menu-content")) {
                menu.children("div").each(function () {
                    var _3ab = $(this).children("div");
                    if (_3ab.length) {
                        _3ab.insertAfter(_3a6);
                        this.submenu = _3ab;
                        var mm = _3a8(_3ab);
                        _3aa = _3aa.concat(mm)
                    }
                })
            }
            return _3aa
        }
        function _3a9(menu) {
            var wh = $.parser.parseOptions(menu[0], ["width", "height"]);
            menu[0].originalHeight = wh.height || 0;
            if (menu.hasClass("menu-content")) {
                menu[0].originalWidth = wh.width || menu._outerWidth()
            } else {
                menu[0].originalWidth = wh.width || 0;
                menu.children("div").each(function () {
                    var item = $(this);
                    var _3ac = $.extend({}, $.parser.parseOptions(this, ["name", "iconCls", "href",
                        {
                            separator: "boolean"
                        }]), {
                            disabled: (item.attr("disabled") ? true : undefined)
                        });
                    if (_3ac.separator) {
                        item.addClass("menu-sep")
                    }
                    if (!item.hasClass("menu-sep")) {
                        item[0].itemName = _3ac.name || "";
                        item[0].itemHref = _3ac.href || "";
                        var text = item.addClass("menu-item").html();
                        item.empty().append($('<div class="menu-text"></div>').html(text));
                        if (_3ac.iconCls) {
                            $('<div class="menu-icon"></div>').addClass(_3ac.iconCls).appendTo(item)
                        }
                        if (_3ac.disabled) {
                            _3ad(_3a6, item[0], true)
                        }
                        if (item[0].submenu) {
                            $('<div class="menu-rightarrow"></div>').appendTo(item)
                        }
                        _3ae(_3a6, item)
                    }
                });
                $('<div class="menu-line"></div>').prependTo(menu)
            }
            _3af(_3a6, menu);
            menu.hide();
            _3b0(_3a6, menu)
        }
    }
    function _3af(_3b1, menu) {
        var opts = $.data(_3b1, "menu").options;
        var _3b2 = menu.attr("style") || "";
        menu.css({
            display: "block",
            left: -10000,
            height: "auto",
            overflow: "hidden"
        });
        var el = menu[0];
        var _3b3 = el.originalWidth || 0;
        if (!_3b3) {
            _3b3 = 0;
            menu.find("div.menu-text").each(function () {
                if (_3b3 < $(this)._outerWidth()) {
                    _3b3 = $(this)._outerWidth()
                }
                $(this).closest("div.menu-item")._outerHeight($(this)._outerHeight() + 2)
            });
            _3b3 += 40
        }
        _3b3 = Math.max(_3b3, opts.minWidth);
        var _3b4 = el.originalHeight || menu.outerHeight();
        var _3b5 = Math.max(el.originalHeight, menu.outerHeight()) - 2;
        menu._outerWidth(_3b3)._outerHeight(_3b4);
        menu.children("div.menu-line")._outerHeight(_3b5);
        _3b2 += ";width:" + el.style.width + ";height:" + el.style.height;
        menu.attr("style", _3b2)
    }
    function _3b0(_3b6, menu) {
        var _3b7 = $.data(_3b6, "menu");
        menu.unbind(".menu").bind("mouseenter.menu", function () {
            if (_3b7.timer) {
                clearTimeout(_3b7.timer);
                _3b7.timer = null
            }
        }).bind("mouseleave.menu", function () {
            if (_3b7.options.hideOnUnhover) {
                _3b7.timer = setTimeout(function () {
                    _3b8(_3b6)
                }, 100)
            }
        })
    }
    function _3ae(_3b9, item) {
        if (!item.hasClass("menu-item")) {
            return
        }
        item.unbind(".menu");
        item.bind("click.menu", function () {
            if ($(this).hasClass("menu-item-disabled")) {
                return
            }
            if (!this.submenu) {
                _3b8(_3b9);
                var href = $(this).attr("href");
                if (href) {
                    location.href = href
                }
            }
            var item = $(_3b9).menu("getItem", this);
            $.data(_3b9, "menu").options.onClick.call(_3b9, item)
        }).bind("mouseenter.menu", function (e) {
            item.siblings().each(function () {
                if (this.submenu) {
                    _3bc(this.submenu)
                }
                $(this).removeClass("menu-active")
            });
            item.addClass("menu-active");
            if ($(this).hasClass("menu-item-disabled")) {
                item.addClass("menu-active-disabled");
                return
            }
            var _3ba = item[0].submenu;
            if (_3ba) {
                $(_3b9).menu("show", {
                    menu: _3ba,
                    parent: item
                })
            }
        }).bind("mouseleave.menu", function (e) {
            item.removeClass("menu-active menu-active-disabled");
            var _3bb = item[0].submenu;
            if (_3bb) {
                if (e.pageX >= parseInt(_3bb.css("left"))) {
                    item.addClass("menu-active")
                } else {
                    _3bc(_3bb)
                }
            } else {
                item.removeClass("menu-active")
            }
        })
    }
    function _3b8(_3bd) {
        var _3be = $.data(_3bd, "menu");
        if (_3be) {
            if ($(_3bd).is(":visible")) {
                _3bc($(_3bd));
                _3be.options.onHide.call(_3bd)
            }
        }
        return false
    }
    function _3bf(_3c0, _3c1) {
        var left, top;
        _3c1 = _3c1 || {};
        var menu = $(_3c1.menu || _3c0);
        if (menu.hasClass("menu-top")) {
            var opts = $.data(_3c0, "menu").options;
            $.extend(opts, _3c1);
            left = opts.left;
            top = opts.top;
            if (opts.alignTo) {
                var at = $(opts.alignTo);
                left = at.offset().left;
                top = at.offset().top + at._outerHeight();
                if (opts.align == "right") {
                    left += at.outerWidth() - menu.outerWidth()
                }
            }
            if (left + menu.outerWidth() > $(window)._outerWidth() + $(document)._scrollLeft()) {
                left = at.offset().left + at._outerWidth() - menu.outerWidth()
            }
            if (left < 0) {
                left = 0
            }
            if (top + menu.outerHeight() > $(window)._outerHeight() + $(document).scrollTop()) {
                top = $(window)._outerHeight() + $(document).scrollTop() - menu.outerHeight() - at._outerHeight() - 5 - 5
            }
        } else {
            var _3c2 = _3c1.parent;
            left = _3c2.offset().left + _3c2.outerWidth() - 2;
            if (left + menu.outerWidth() + 5 > $(window)._outerWidth() + $(document).scrollLeft()) {
                left = _3c2.offset().left - menu.outerWidth() + 2
            }
            var top = _3c2.offset().top - 3;
            if (top + menu.outerHeight() > $(window)._outerHeight() + $(document).scrollTop()) {
                top = $(window)._outerHeight() + $(document).scrollTop() - menu.outerHeight() - at._outerHeight() - 5 - 5
            }
        }
        menu.css({
            left: left,
            top: top
        });
        menu.show(0, function () {
            if (!menu[0].shadow) {
                menu[0].shadow = $('<div class="menu-shadow"></div>').insertAfter(menu)
            }
            menu[0].shadow.css({
                display: "block",
                zIndex: $.fn.menu.defaults.zIndex++,
                left: menu.css("left"),
                top: menu.css("top"),
                width: menu.outerWidth(),
                height: menu.outerHeight()
            });
            menu.css("z-index", $.fn.menu.defaults.zIndex++);
            if (menu.hasClass("menu-top")) {
                $.data(menu[0], "menu").options.onShow.call(menu[0])
            }
        })
    }
    function _3bc(menu) {
        if (!menu) {
            return
        }
        _3c3(menu);
        menu.find("div.menu-item").each(function () {
            if (this.submenu) {
                _3bc(this.submenu)
            }
            $(this).removeClass("menu-active")
        });

        function _3c3(m) {
            m.stop(true, true);
            if (m[0].shadow) {
                m[0].shadow.hide()
            }
            m.hide()
        }
    }
    function _3c4(_3c5, text) {
        var _3c6 = null;
        var tmp = $("<div></div>");

        function find(menu) {
            menu.children("div.menu-item").each(function () {
                var item = $(_3c5).menu("getItem", this);
                var s = tmp.empty().html(item.text).text();
                if (text == $.trim(s)) {
                    _3c6 = item
                } else {
                    if (this.submenu && !_3c6) {
                        find(this.submenu)
                    }
                }
            })
        }
        find($(_3c5));
        tmp.remove();
        return _3c6
    }
    function _3ad(_3c7, _3c8, _3c9) {
        var t = $(_3c8);
        if (!t.hasClass("menu-item")) {
            return
        }
        if (_3c9) {
            t.addClass("menu-item-disabled");
            if (_3c8.onclick) {
                _3c8.onclick1 = _3c8.onclick;
                _3c8.onclick = null
            }
        } else {
            t.removeClass("menu-item-disabled");
            if (_3c8.onclick1) {
                _3c8.onclick = _3c8.onclick1;
                _3c8.onclick1 = null
            }
        }
    }
    function _3ca(_3cb, _3cc) {
        var menu = $(_3cb);
        if (_3cc.parent) {
            if (!_3cc.parent.submenu) {
                var _3cd = $('<div class="menu"><div class="menu-line"></div></div>').appendTo("body");
                _3cd.hide();
                _3cc.parent.submenu = _3cd;
                $('<div class="menu-rightarrow"></div>').appendTo(_3cc.parent)
            }
            menu = _3cc.parent.submenu
        }
        if (_3cc.separator) {
            var item = $('<div class="menu-sep"></div>').appendTo(menu)
        } else {
            var item = $('<div class="menu-item"></div>').appendTo(menu);
            $('<div class="menu-text"></div>').html(_3cc.text).appendTo(item)
        }
        if (_3cc.iconCls) {
            $('<div class="menu-icon"></div>').addClass(_3cc.iconCls).appendTo(item)
        }
        if (_3cc.id) {
            item.attr("id", _3cc.id)
        }
        if (_3cc.name) {
            item[0].itemName = _3cc.name
        }
        if (_3cc.href) {
            item[0].itemHref = _3cc.href
        }
        if (_3cc.onclick) {
            if (typeof _3cc.onclick == "string") {
                item.attr("onclick", _3cc.onclick)
            } else {
                item[0].onclick = eval(_3cc.onclick)
            }
        }
        if (_3cc.handler) {
            item[0].onclick = eval(_3cc.handler)
        }
        if (_3cc.disabled) {
            _3ad(_3cb, item[0], true)
        }
        _3ae(_3cb, item);
        _3b0(_3cb, menu);
        _3af(_3cb, menu)
    }
    function _3ce(_3cf, _3d0) {
        function _3d1(el) {
            if (el.submenu) {
                el.submenu.children("div.menu-item").each(function () {
                    _3d1(this)
                });
                var _3d2 = el.submenu[0].shadow;
                if (_3d2) {
                    _3d2.remove()
                }
                el.submenu.remove()
            }
            $(el).remove()
        }
        _3d1(_3d0)
    }
    function _3d3(_3d4) {
        $(_3d4).children("div.menu-item").each(function () {
            _3ce(_3d4, this)
        });
        if (_3d4.shadow) {
            _3d4.shadow.remove()
        }
        $(_3d4).remove()
    }
    $.fn.menu = function (_3d5, _3d6) {
        if (typeof _3d5 == "string") {
            return $.fn.menu.methods[_3d5](this, _3d6)
        }
        _3d5 = _3d5 || {};
        return this.each(function () {
            var _3d7 = $.data(this, "menu");
            if (_3d7) {
                $.extend(_3d7.options, _3d5)
            } else {
                _3d7 = $.data(this, "menu", {
                    options: $.extend({}, $.fn.menu.defaults, $.fn.menu.parseOptions(this), _3d5)
                });
                init(this)
            }
            $(this).css({
                left: _3d7.options.left,
                top: _3d7.options.top
            })
        })
    };
    $.fn.menu.methods = {
        options: function (jq) {
            return $.data(jq[0], "menu").options
        },
        show: function (jq, pos) {
            return jq.each(function () {
                _3bf(this, pos)
            })
        },
        hide: function (jq) {
            return jq.each(function () {
                _3b8(this)
            })
        },
        destroy: function (jq) {
            return jq.each(function () {
                _3d3(this)
            })
        },
        setText: function (jq, _3d8) {
            return jq.each(function () {
                $(_3d8.target).children("div.menu-text").html(_3d8.text)
            })
        },
        setIcon: function (jq, _3d9) {
            return jq.each(function () {
                $(_3d9.target).children("div.menu-icon").remove();
                if (_3d9.iconCls) {
                    $('<div class="menu-icon"></div>').addClass(_3d9.iconCls).appendTo(_3d9.target)
                }
            })
        },
        getItem: function (jq, _3da) {
            var t = $(_3da);
            var item = {
                target: _3da,
                id: t.attr("id"),
                text: $.trim(t.children("div.menu-text").html()),
                disabled: t.hasClass("menu-item-disabled"),
                name: _3da.itemName,
                href: _3da.itemHref,
                onclick: _3da.onclick
            };
            var icon = t.children("div.menu-icon");
            if (icon.length) {
                var cc = [];
                var aa = icon.attr("class").split(" ");
                for (var i = 0; i < aa.length; i++) {
                    if (aa[i] != "menu-icon") {
                        cc.push(aa[i])
                    }
                }
                item.iconCls = cc.join(" ")
            }
            return item
        },
        findItem: function (jq, text) {
            return _3c4(jq[0], text)
        },
        appendItem: function (jq, _3db) {
            return jq.each(function () {
                _3ca(this, _3db)
            })
        },
        removeItem: function (jq, _3dc) {
            return jq.each(function () {
                _3ce(this, _3dc)
            })
        },
        enableItem: function (jq, _3dd) {
            return jq.each(function () {
                _3ad(this, _3dd, false)
            })
        },
        disableItem: function (jq, _3de) {
            return jq.each(function () {
                _3ad(this, _3de, true)
            })
        }
    };
    $.fn.menu.parseOptions = function (_3df) {
        return $.extend({}, $.parser.parseOptions(_3df, ["left", "top",
            {
                minWidth: "number",
                hideOnUnhover: "boolean"
            }]))
    };
    $.fn.menu.defaults = {
        zIndex: 110000,
        left: 0,
        top: 0,
        alignTo: null,
        align: "left",
        minWidth: 120,
        hideOnUnhover: true,
        onShow: function () { },
        onHide: function () { },
        onClick: function (item) { }
    }
})(jQuery);
(function (d) {
    function a(e) {
        var h = d.data(e, "menubutton").options;
        var j = d(e);
        j.linkbutton(h);
        j.removeClass(h.cls.btn1 + " " + h.cls.btn2).addClass("m-btn");
        j.removeClass("m-btn-small m-btn-medium m-btn-large").addClass("m-btn-" + h.size);
        var i = j.find(".l-btn-left");
        d("<span></span>").addClass(h.cls.arrow).appendTo(i);
        d("<span></span>").addClass("m-btn-line").appendTo(i);
        if (h.menu) {
            d(h.menu).menu();
            var f = d(h.menu).menu("options");
            var k = f.onShow;
            var g = f.onHide;
            d.extend(f, {
                onShow: function () {
                    var l = d(this).menu("options");
                    var n = d(l.alignTo);
                    var m = n.menubutton("options");
                    n.addClass((m.plain == true) ? m.cls.btn2 : m.cls.btn1);
                    k.call(this)
                },
                onHide: function () {
                    var n = d(this).menu("options");
                    var m = d(n.alignTo);
                    var l = m.menubutton("options");
                    m.removeClass((l.plain == true) ? l.cls.btn2 : l.cls.btn1);
                    g.call(this)
                }
            })
        }
        b(e, h.disabled)
    }
    function b(i, j) {
        var g = d.data(i, "menubutton").options;
        g.disabled = j;
        var h = d(i);
        var e = h.find("." + g.cls.trigger);
        if (!e.length) {
            e = h
        }
        e.unbind(".menubutton");
        if (j) {
            h.linkbutton("disable")
        } else {
            h.linkbutton("enable");
            if (g.showMenuOnClick === true) {
                h.unbind(".menubutton").bind("click.menubutton", function () {
                    c(i);
                    return false
                })
            }
            var f = null;
            e.bind("click.menubutton", function () {
                c(i);
                return false
            }).bind("mouseenter.menubutton", function () {
                f = setTimeout(function () {
                    c(i)
                }, g.duration);
                return false
            }).bind("mouseleave.menubutton", function () {
                if (f) {
                    clearTimeout(f)
                }
            })
        }
    }
    function c(g) {
        var e = d.data(g, "menubutton").options;
        if (e.disabled || !e.menu) {
            return
        }
        d("body>div.menu-top").menu("hide");
        var f = d(g);
        var h = d(e.menu);
        if (h.length) {
            h.menu("options").alignTo = f;
            h.menu("show", {
                alignTo: f,
                align: e.menuAlign
            })
        }
        f.blur()
    }
    d.fn.menubutton = function (g, e) {
        if (typeof g == "string") {
            var f = d.fn.menubutton.methods[g];
            if (f) {
                return f(this, e)
            } else {
                return this.linkbutton(g, e)
            }
        }
        g = g || {};
        return this.each(function () {
            var h = d.data(this, "menubutton");
            if (h) {
                d.extend(h.options, g)
            } else {
                d.data(this, "menubutton", {
                    options: d.extend({}, d.fn.menubutton.defaults, d.fn.menubutton.parseOptions(this), g)
                });
                d(this).removeAttr("disabled")
            }
            a(this)
        })
    };
    d.fn.menubutton.methods = {
        options: function (g) {
            var f = g.linkbutton("options");
            var e = d.data(g[0], "menubutton").options;
            e.toggle = f.toggle;
            e.selected = f.selected;
            return e
        },
        enable: function (e) {
            return e.each(function () {
                b(this, false)
            })
        },
        disable: function (e) {
            return e.each(function () {
                b(this, true)
            })
        },
        destroy: function (e) {
            return e.each(function () {
                var f = d(this).menubutton("options");
                if (f.menu) {
                    d(f.menu).menu("destroy")
                }
                d(this).remove()
            })
        }
    };
    d.fn.menubutton.parseOptions = function (e) {
        var f = d(e);
        return d.extend({}, d.fn.linkbutton.parseOptions(e), d.parser.parseOptions(e, ["menu",
            {
                plain: "boolean",
                duration: "number"
            }]))
    };
    d.fn.menubutton.defaults = d.extend({}, d.fn.linkbutton.defaults, {
        plain: true,
        menu: null,
        menuAlign: "left",
        duration: 100,
        cls: {
            btn1: "m-btn-active",
            btn2: "m-btn-plain-active",
            arrow: "m-btn-downarrow",
            trigger: "m-btn"
        }
    })
})(jQuery);
(function (b) {
    function a(d) {
        var c = b.data(d, "splitbutton").options;
        b(d).menubutton(c);
        b(d).addClass("s-btn")
    }
    b.fn.splitbutton = function (d, e) {
        if (typeof d == "string") {
            var c = b.fn.splitbutton.methods[d];
            if (c) {
                return c(this, e)
            } else {
                return this.menubutton(d, e)
            }
        }
        d = d || {};
        return this.each(function () {
            var f = b.data(this, "splitbutton");
            if (f) {
                b.extend(f.options, d)
            } else {
                b.data(this, "splitbutton", {
                    options: b.extend({}, b.fn.splitbutton.defaults, b.fn.splitbutton.parseOptions(this), d)
                });
                b(this).removeAttr("disabled")
            }
            a(this)
        })
    };
    b.fn.splitbutton.methods = {
        options: function (e) {
            var d = e.menubutton("options");
            var c = b.data(e[0], "splitbutton").options;
            b.extend(c, {
                disabled: d.disabled,
                toggle: d.toggle,
                selected: d.selected
            });
            return c
        }
    };
    b.fn.splitbutton.parseOptions = function (d) {
        var c = b(d);
        return b.extend({}, b.fn.linkbutton.parseOptions(d), b.parser.parseOptions(d, ["menu",
            {
                plain: "boolean",
                duration: "number"
            }]))
    };
    b.fn.splitbutton.defaults = b.extend({}, b.fn.linkbutton.defaults, {
        plain: true,
        menu: null,
        duration: 100,
        cls: {
            btn1: "m-btn-active s-btn-active",
            btn2: "m-btn-plain-active s-btn-plain-active",
            arrow: "m-btn-downarrow",
            trigger: "m-btn-line"
        }
    })
})(jQuery);
(function ($) {
    function init(_3fc) {
        $(_3fc).addClass("searchbox-f").hide();
        var span = $('<span class="searchbox"></span>').insertAfter(_3fc);
        var _3fd = $('<input type="text" class="searchbox-text">').appendTo(span);
        $('<span><span class="searchbox-button"></span></span>').appendTo(span);
        var name = $(_3fc).attr("name");
        if (name) {
            _3fd.attr("name", name);
            $(_3fc).removeAttr("name").attr("searchboxName", name)
        }
        return span
    }
    function _3fe(_3ff, _400) {
        var opts = $.data(_3ff, "searchbox").options;
        var sb = $.data(_3ff, "searchbox").searchbox;
        if (_400) {
            opts.width = _400
        }
        sb.appendTo("body");
        if (isNaN(opts.width)) {
            opts.width = sb._outerWidth()
        }
        var _401 = sb.find("span.searchbox-button");
        var menu = sb.find("a.searchbox-menu");
        var _402 = sb.find("input.searchbox-text");
        sb._outerWidth(opts.width)._outerHeight(opts.height);
        _402._outerWidth(sb.width() - menu._outerWidth() - _401._outerWidth());
        _402.css({
            height: sb.height() + "px",
            lineHeight: sb.height() + "px"
        });
        menu._outerHeight(sb.height());
        _401._outerHeight(sb.height());
        var _403 = menu.find("span.l-btn-left");
        _403._outerHeight(sb.height());
        _403.find("span.l-btn-text").css({
            height: _403.height() + "px",
            lineHeight: _403.height() + "px"
        });
        sb.insertAfter(_3ff)
    }
    function _404(_405) {
        var _406 = $.data(_405, "searchbox");
        var opts = _406.options;
        if (opts.menu) {
            _406.menu = $(opts.menu).menu({
                onClick: function (item) {
                    _407(item)
                }
            });
            var item = _406.menu.children("div.menu-item:not(.no-need-show)").first();
            _406.menu.children("div.menu-item").each(function () {
                var _408 = $.extend({}, $.parser.parseOptions(this), {
                    selected: ($(this).attr("selected") ? true : undefined)
                });
                if (_408.selected) {
                    item = $(this);
                    return false
                }
            });
            item.triggerHandler("click")
        } else {
            _406.searchbox.find("a.searchbox-menu").remove();
            _406.menu = null
        }
        function _407(item) {
            _406.searchbox.find("a.searchbox-menu").remove();
            var mb = $('<a class="searchbox-menu" href="javascript:void(0)"></a>').html(item.text);
            mb.prependTo(_406.searchbox).menubutton({
                menu: _406.menu,
                iconCls: item.iconCls
            });
            _406.searchbox.find("input.searchbox-text").attr("name", item.name || item.text);
            _3fe(_405)
        }
    }
    function _409(_40a) {
        var _40b = $.data(_40a, "searchbox");
        var opts = _40b.options;
        var _40c = _40b.searchbox.find("input.searchbox-text");
        var _40d = _40b.searchbox.find(".searchbox-button");
        _40c.unbind(".searchbox");
        _40d.unbind(".searchbox");
        if (!opts.disabled) {
            _40c.bind("blur.searchbox", function (e) {
                opts.value = $(this).val();
                if (opts.value == "") {
                    $(this).val(opts.prompt);
                    $(this).addClass("searchbox-prompt")
                } else {
                    $(this).removeClass("searchbox-prompt")
                }
            }).bind("focus.searchbox", function (e) {
                if ($(this).val() != opts.value) {
                    $(this).val(opts.value)
                }
                $(this).removeClass("searchbox-prompt")
            }).bind("keydown.searchbox", function (e) {
                if (e.keyCode == 13) {
                    e.preventDefault();
                    opts.value = $(this).val();
                    opts.searcher.call(_40a, opts.value, _40c._propAttr("name"));
                    return false
                }
            });
            _40d.bind("click.searchbox", function () {
                opts.searcher.call(_40a, opts.value, _40c._propAttr("name"))
            }).bind("mouseenter.searchbox", function () {
                $(this).addClass("searchbox-button-hover")
            }).bind("mouseleave.searchbox", function () {
                $(this).removeClass("searchbox-button-hover")
            })
        }
    }
    function _40e(_40f, _410) {
        var _411 = $.data(_40f, "searchbox");
        var opts = _411.options;
        var _412 = _411.searchbox.find("input.searchbox-text");
        var mb = _411.searchbox.find("a.searchbox-menu");
        if (_410) {
            opts.disabled = true;
            $(_40f).attr("disabled", true);
            _412.attr("disabled", true);
            if (mb.length) {
                mb.menubutton("disable")
            }
        } else {
            opts.disabled = false;
            $(_40f).removeAttr("disabled");
            _412.removeAttr("disabled");
            if (mb.length) {
                mb.menubutton("enable")
            }
        }
    }
    function _413(_414) {
        var _415 = $.data(_414, "searchbox");
        var opts = _415.options;
        var _416 = _415.searchbox.find("input.searchbox-text");
        opts.originalValue = opts.value;
        if (opts.value) {
            _416.val(opts.value);
            _416.removeClass("searchbox-prompt")
        } else {
            _416.val(opts.prompt);
            _416.addClass("searchbox-prompt")
        }
    }
    $.fn.searchbox = function (_417, _418) {
        if (typeof _417 == "string") {
            return $.fn.searchbox.methods[_417](this, _418)
        }
        _417 = _417 || {};
        return this.each(function () {
            var _419 = $.data(this, "searchbox");
            if (_419) {
                $.extend(_419.options, _417)
            } else {
                _419 = $.data(this, "searchbox", {
                    options: $.extend({}, $.fn.searchbox.defaults, $.fn.searchbox.parseOptions(this), _417),
                    searchbox: init(this)
                })
            }
            _404(this);
            _413(this);
            _409(this);
            _40e(this, _419.options.disabled);
            _3fe(this)
        })
    };
    $.fn.searchbox.methods = {
        options: function (jq) {
            return $.data(jq[0], "searchbox").options
        },
        menu: function (jq) {
            return $.data(jq[0], "searchbox").menu
        },
        textbox: function (jq) {
            return $.data(jq[0], "searchbox").searchbox.find("input.searchbox-text")
        },
        getValue: function (jq) {
            return $.data(jq[0], "searchbox").options.value
        },
        setValue: function (jq, _41a) {
            return jq.each(function () {
                $(this).searchbox("options").value = _41a;
                $(this).searchbox("textbox").val(_41a);
                $(this).searchbox("textbox").blur()
            })
        },
        clear: function (jq) {
            return jq.each(function () {
                $(this).searchbox("setValue", "")
            })
        },
        reset: function (jq) {
            return jq.each(function () {
                var opts = $(this).searchbox("options");
                $(this).searchbox("setValue", opts.originalValue)
            })
        },
        getName: function (jq) {
            return $.data(jq[0], "searchbox").searchbox.find("input.searchbox-text").attr("name")
        },
        selectName: function (jq, name) {
            return jq.each(function () {
                var menu = $.data(this, "searchbox").menu;
                if (menu) {
                    menu.children('div.menu-item[name="' + name + '"]').triggerHandler("click")
                }
            })
        },
        destroy: function (jq) {
            return jq.each(function () {
                var menu = $(this).searchbox("menu");
                if (menu) {
                    menu.menu("destroy")
                }
                $.data(this, "searchbox").searchbox.remove();
                $(this).remove()
            })
        },
        resize: function (jq, _41b) {
            return jq.each(function () {
                _3fe(this, _41b)
            })
        },
        disable: function (jq) {
            return jq.each(function () {
                _40e(this, true);
                _409(this)
            })
        },
        enable: function (jq) {
            return jq.each(function () {
                _40e(this, false);
                _409(this)
            })
        }
    };
    $.fn.searchbox.parseOptions = function (_41c) {
        var t = $(_41c);
        return $.extend({}, $.parser.parseOptions(_41c, ["width", "height", "prompt", "menu"]), {
            value: (t.val() || undefined),
            disabled: (t.attr("disabled") ? true : undefined),
            searcher: (t.attr("searcher") ? eval(t.attr("searcher")) : undefined)
        })
    };
    $.fn.searchbox.defaults = {
        width: "auto",
        height: 25,
        prompt: "",
        value: "",
        menu: null,
        disabled: false,
        searcher: function (_41d, name) { }
    }
})(jQuery);
(function ($) {
    function init(_41e) {
        $(_41e).addClass("validatebox-text")
    }
    function _41f(_420) {
        var _421 = $.data(_420, "validatebox");
        _421.validating = false;
        if (_421.timer) {
            clearTimeout(_421.timer)
        }
        $(_420).tooltip("destroy");
        $(_420).unbind();
        $(_420).remove()
    }
    function _422(_423) {
        var box = $(_423);
        var _424 = $.data(_423, "validatebox");
        box.unbind(".validatebox");
        if (_424.options.novalidate) {
            return
        }
        box.bind("focus.validatebox", function () {
            box.removeClass("validatebox-invalid");
            _425(_423);
            _424.validating = true;
            _424.value = undefined;
            (function () {
                if (_424.validating) {
                    if (_424.value != box.val()) {
                        _424.value = box.val();
                        if (_424.timer) {
                            clearTimeout(_424.timer)
                        }
                        _424.timer = setTimeout(function () {
                            $(_423).validatebox("validate")
                        }, 5000)
                    } else {
                        _429(_423)
                    }
                    setTimeout(arguments.callee, 200)
                }
            })()
        }).bind("blur.validatebox", function () {
            if (_424.timer) {
                clearTimeout(_424.timer);
                _424.timer = undefined
            }
            _424.validating = false;
            _425(_423);
            setTimeout(function () {
                $(_423).validatebox("validate")
            }, 200)
        }).bind("mouseenter.validatebox", function () {
            if (box.hasClass("validatebox-invalid")) {
                _426(_423)
            }
        }).bind("mouseleave.validatebox", function () {
            if (!_424.validating) {
                _425(_423)
            }
        })
    }
    function _426(_427) {
        var _428 = $.data(_427, "validatebox");
        var opts = _428.options;
        $(_427).tooltip($.extend({}, opts.tipOptions, {
            content: _428.message,
            position: opts.tipPosition,
            deltaX: opts.deltaX
        })).tooltip("show");
        _428.tip = true
    }
    function _429(_42a) {
        var _42b = $.data(_42a, "validatebox");
        if (_42b && _42b.tip) {
            $(_42a).tooltip("reposition")
        }
    }
    function _425(_42c) {
        var _42d = $.data(_42c, "validatebox");
        _42d.tip = false;
        $(_42c).tooltip("hide")
    }
    function _42e(_42f) {
        var _430 = $.data(_42f, "validatebox");
        if (_430 == undefined) {
            return
        }
        var opts = _430.options;
        var box = $(_42f);
        var _431 = box.val();

        function _432(msg) {
            _430.message = msg
        }
        function _433(_434, _435) {
            var _436 = /([a-zA-Z_]+)(.*)/.exec(_434);
            var rule = opts.rules[_436[1]];
            if (rule && _431) {
                var _437 = _435 || opts.validParams || eval(_436[2]);
                if (!rule.validator.call(_42f, _431, _437)) {
                    box.addClass("validatebox-invalid");
                    var _438 = rule.message;
                    if (_437) {
                        for (var i = 0; i < _437.length; i++) {
                            _438 = _438.replace(new RegExp("\\{" + i + "\\}", "g"), _437[i])
                        }
                    }
                    _432(opts.invalidMessage || _438);
                    if (_430.validating) {
                        _426(_42f)
                    }
                    return false
                }
            }
            return true
        }
        box.removeClass("validatebox-invalid");
        _425(_42f);
        if (opts.novalidate || box.is(":disabled")) {
            return true
        }
        if (opts.required) {
            if (_431.trim() == "") {
                box.addClass("validatebox-invalid");
                _432(opts.missingMessage);
                if (_430.validating) {
                    _426(_42f)
                }
                return false
            }
        }
        if (opts.validType) {
            if ($.isArray(opts.validType)) {
                for (var i = 0; i < opts.validType.length; i++) {
                    if (!_433(opts.validType[i])) {
                        return false
                    }
                }
            } else {
                if (typeof opts.validType == "string") {
                    if (!_433(opts.validType)) {
                        return false
                    }
                } else {
                    for (var _439 in opts.validType) {
                        var _43a = opts.validType[_439];
                        if (!_433(_439, _43a)) {
                            return false
                        }
                    }
                }
            }
        }
        return true
    }
    function _43b(_43c, _43d) {
        var opts = $.data(_43c, "validatebox").options;
        if (_43d != undefined) {
            opts.novalidate = _43d
        }
        if (opts.novalidate) {
            $(_43c).removeClass("validatebox-invalid");
            _425(_43c)
        }
        _422(_43c)
    }
    $.fn.validatebox = function (_43e, _43f) {
        if (typeof _43e == "string") {
            var result = $.fn.validatebox.methods[_43e](this, _43f);
            return result
        }
        _43e = _43e || {};
        return this.each(function () {
            var _440 = $.data(this, "validatebox");
            if (_440) {
                $.extend(_440.options, _43e)
            } else {
                init(this);
                $.data(this, "validatebox", {
                    options: $.extend({}, $.fn.validatebox.defaults, $.fn.validatebox.parseOptions(this), _43e)
                })
            }
            _43b(this);
            _42e(this)
        })
    };
    $.fn.validatebox.methods = {
        options: function (jq) {
            return $.data(jq[0], "validatebox").options
        },
        destroy: function (jq) {
            return jq.each(function () {
                _41f(this)
            })
        },
        validate: function (jq) {
            return jq.each(function () {
                _42e(this)
            })
        },
        isValid: function (jq) {
            return _42e(jq[0])
        },
        enableValidation: function (jq) {
            return jq.each(function () {
                _43b(this, false)
            })
        },
        disableValidation: function (jq) {
            return jq.each(function () {
                _43b(this, true)
            })
        }
    };
    $.fn.validatebox.parseOptions = function (_441) {
        var t = $(_441);
        return $.extend({}, $.parser.parseOptions(_441, ["validType", "missingMessage", "invalidMessage", "tipPosition",
            {
                delay: "number",
                deltaX: "number"
            }]), {
                required: (t.attr("required") ? true : undefined),
                novalidate: (t.attr("novalidate") != undefined ? true : undefined)
            })
    };
    $.fn.validatebox.defaults = {
        required: false,
        validType: null,
        validParams: null,
        delay: 200,
        missingMessage: HtmlLang.Write(LangModule.Common, "required", "Required."),
        invalidMessage: null,
        tipPosition: "right",
        deltaX: 0,
        novalidate: false,
        tipOptions: {
            showEvent: "none",
            hideEvent: "none",
            showDelay: 0,
            hideDelay: 0,
            zIndex: "",
            onShow: function () {
                $(this).tooltip("tip").css({
                    color: "#000",
                    borderColor: "#CC9933",
                    backgroundColor: "#FFFFCC"
                })
            },
            onHide: function () {
                $(this).tooltip("destroy")
            }
        },
        rules: {
            email: {
                validator: function (_442) {
                    _442 = $.trim(_442);
                    return /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(_442)
                },
                message: HtmlLang.Write(LangModule.Common, "invalidaddress", "Please enter a valid email address.")
            },
            url: {
                validator: function (_443) {
                    return /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(_443)
                },
                message: HtmlLang.Write(LangModule.Common, "entervalidurl", "Please enter a valid URL.")
            },
            length: {
                validator: function (_444, _445) {
                    var len = $.trim(_444).length;
                    return len >= _445[0] && len <= _445[1]
                },
                message: HtmlLang.Write(LangModule.Common, "entervaluebetween", "Please enter a value between {0} and {1}.")
            },
            remote: {
                validator: function (_446, _447) {
                    var data = {};
                    data[_447[1]] = _446;
                    var _448 = $.ajax({
                        url: _447[0],
                        dataType: "json",
                        data: data,
                        async: false,
                        cache: false,
                        type: "post"
                    }).responseText;
                    return _448 == "true"
                },
                message: HtmlLang.Write(LangModule.Common, "fixfiled", "Please fix this field.")
            }
        }
    }
})(jQuery);
(function (f) {
    function h(k, v) {
        v = v || {};
        var m = {};
        if (v.onSubmit) {
            if (v.onSubmit.call(k, m) == false) {
                return
            }
        }
        var j = f(k);
        if (v.url) {
            j.attr("action", v.url)
        }
        var x = "easyui_frame_" + (new Date().getTime());
        var w = f("<iframe id=" + x + " name=" + x + "></iframe>").attr("src", window.ActiveXObject ? "javascript:false" : "about:blank").css({
            position: "absolute",
            top: -1000,
            left: -1000
        });
        var l = j.attr("target"),
            r = j.attr("action");
        j.attr("target", x);
        var o = f();
        try {
            w.appendTo("body");
            w.bind("load", p);
            for (var q in m) {
                var u = f('<input type="hidden" name="' + q + '">').val(m[q]).appendTo(j);
                o = o.add(u)
            }
            s();
            j[0].submit()
        } finally {
            j.attr("action", r);
            l ? j.attr("target", l) : j.removeAttr("target");
            o.remove()
        }
        function s() {
            var n = f("#" + x);
            if (!n.length) {
                return
            }
            try {
                var t = n.contents()[0].readyState;
                if (t && t.toLowerCase() == "uninitialized") {
                    setTimeout(s, 100)
                }
            } catch (y) {
                p()
            }
        }
        var i = 10;

        function p() {
            var z = f("#" + x);
            if (!z.length) {
                return
            }
            z.unbind();
            var n = "";
            try {
                var t = z.contents().find("body");
                n = t.html();
                if (n == "") {
                    if (--i) {
                        setTimeout(p, 100);
                        return
                    }
                }
                var B = t.find(">textarea");
                if (B.length) {
                    n = B.val()
                } else {
                    var y = t.find(">pre");
                    if (y.length) {
                        n = y.html()
                    }
                }
            } catch (A) { }
            if (v.success) {
                v.success(n)
            }
            setTimeout(function () {
                z.unbind();
                z.remove()
            }, 100)
        }
    }
    function e(i, m) {
        if (!f.data(i, "form")) {
            f.data(i, "form", {
                options: f.extend({}, f.fn.form.defaults)
            })
        }
        var n = f.data(i, "form").options;
        if (typeof m == "string") {
            var o = {};
            if (n.onBeforeLoad.call(i, o) == false) {
                return
            }
            f.ajax({
                url: m,
                data: o,
                dataType: "json",
                success: function (q) {
                    p(q.Data)
                },
                error: function () {
                    n.onLoadError.apply(i, arguments)
                }
            })
        } else {
            p(m)
        }
        function p(q) {
            var r = f(i);
            for (var t in q) {
                var s = q[t];
                var v = l(t, s);
                if (!v.length) {
                    var u = j(t, s);
                    if (!u) {
                        f('input[name="' + t + '"]', r).val(s);
                        f('textarea[name="' + t + '"]', r).val(s);
                        f('select[name="' + t + '"]', r).val(s)
                    }
                }
                k(t, s)
            }
            n.onLoadSuccess.call(i, q);
            g(i)
        }
        function l(s, r) {
            var q = f(i).find('input[name="' + s + '"][type=radio], input[name="' + s + '"][type=checkbox]');
            q._propAttr("checked", false);
            q.each(function () {
                var t = f(this);
                if (t.val() == String(r) || f.inArray(t.val(), f.isArray(r) ? r : [r]) >= 0) {
                    t._propAttr("checked", true)
                }
            });
            return q
        }
        function j(v, s) {
            var r = 0;
            var u = ["numberbox", "slider"];
            for (var q = 0; q < u.length; q++) {
                var t = u[q];
                var w = f(i).find("input[" + t + 'Name="' + v + '"]');
                if (w.length) {
                    w[t]("setValue", s);
                    r += w.length
                }
            }
            return r
        }
        function k(v, s) {
            var r = f(i);
            var w = ["combobox", "combotree", "combogrid", "datetimebox", "datebox", "combo"];
            var u = r.find('[comboName="' + v + '"]');
            if (u.length) {
                for (var q = 0; q < w.length; q++) {
                    var t = w[q];
                    if (u.hasClass(t + "-f")) {
                        if (u[t]("options").multiple) {
                            u[t]("setValues", s)
                        } else {
                            u[t]("setValue", s)
                        }
                        return
                    }
                }
            }
        }
    }
    function d(o) {
        f("input,select,textarea", o).each(function () {
            var p = this.type,
                i = this.tagName.toLowerCase();
            if (p == "text" || p == "hidden" || p == "password" || i == "textarea") {
                this.value = ""
            } else {
                if (p == "file") {
                    var q = f(this);
                    var r = q.clone().val("");
                    r.insertAfter(q);
                    if (q.data("validatebox")) {
                        q.validatebox("destroy");
                        r.validatebox()
                    } else {
                        q.remove()
                    }
                } else {
                    if (p == "checkbox" || p == "radio") {
                        this.checked = false
                    } else {
                        if (i == "select") {
                            this.selectedIndex = -1
                        }
                    }
                }
            }
        });
        var n = f(o);
        var k = ["combo", "combobox", "combotree", "combogrid", "slider"];
        for (var j = 0; j < k.length; j++) {
            var m = k[j];
            var l = n.find("." + m + "-f");
            if (l.length && l[m]) {
                l[m]("clear")
            }
        }
        g(o)
    }
    function b(m) {
        m.reset();
        var n = f(m);
        var k = ["combo", "combobox", "combotree", "combogrid", "datebox", "datetimebox", "spinner", "timespinner", "numberbox", "numberspinner", "slider"];
        for (var j = 0; j < k.length; j++) {
            var o = k[j];
            var l = n.find("." + o + "-f");
            if (l.length && l[o]) {
                l[o]("reset")
            }
        }
        g(m)
    }
    function c(k) {
        var j = f.data(k, "form").options;
        var i = f(k);
        i.unbind(".form").bind("submit.form", function () {
            setTimeout(function () {
                h(k, j)
            }, 0);
            return false
        })
    }
    function g(i) {
        if (f.fn.validatebox) {
            var j = f(i);
            j.find(".validatebox-text:not(:disabled)").validatebox("validate");
            var k = j.find(".validatebox-invalid");
            k.filter(":not(:disabled):first").focus();
            return k.length == 0
        }
        return true
    }
    function a(j, i) {
        f(j).find(".validatebox-text:not(:disabled)").validatebox(i ? "disableValidation" : "enableValidation")
    }
    f.fn.form = function (i, j) {
        if (typeof i == "string") {
            return f.fn.form.methods[i](this, j)
        }
        i = i || {};
        return this.each(function () {
            if (!f.data(this, "form")) {
                f.data(this, "form", {
                    options: f.extend({}, f.fn.form.defaults, i)
                })
            }
            c(this)
        })
    };
    f.fn.form.methods = {
        submit: function (i, j) {
            return i.each(function () {
                var k = f.extend({}, f.fn.form.defaults, f.data(this, "form") ? f.data(this, "form").options : {}, j || {});
                h(this, k)
            })
        },
        load: function (i, j) {
            return i.each(function () {
                e(this, j)
            })
        },
        clear: function (i) {
            return i.each(function () {
                d(this)
            })
        },
        reset: function (i) {
            return i.each(function () {
                b(this)
            })
        },
        validate: function (i) {
            return g(i[0])
        },
        disableValidation: function (i) {
            return i.each(function () {
                a(this, true)
            })
        },
        enableValidation: function (i) {
            return i.each(function () {
                a(this, false)
            })
        }
    };
    f.fn.form.defaults = {
        url: null,
        onSubmit: function (i) {
            return f(this).form("validate")
        },
        success: function (i) { },
        onBeforeLoad: function (i) { },
        onLoadSuccess: function (i) { },
        onLoadError: function () { }
    }
})(jQuery);
(function (e) {
    function c(l) {
        e(l).addClass("numberbox numberbox-f");
        var m = e('<input type="hidden">').insertAfter(l);
        var n = e(l).attr("name");
        if (n) {
            m.attr("name", n);
            e(l).removeAttr("name").attr("numberboxName", n)
        }
        return m
    }
    function f(l) {
        var m = e.data(l, "numberbox").options;
        var n = m.onChange;
        m.onChange = function () { };
        i(l, m.parser.call(l, m.value));
        m.onChange = n;
        m.originalValue = b(l)
    }
    function k(l, o) {
        var m = e.data(l, "numberbox").options;
        if (o) {
            m.width = o
        }
        var n = e(l);
        var p = e('<div style="display:none"></div>').insertBefore(n);
        n.appendTo("body");
        if (isNaN(m.width)) {
            m.width = n.outerWidth()
        }
        n._outerWidth(m.width)._outerHeight(m.height < 27 ? 27 : m.height);
        n.css("line-height", (n.height() < 25 ? 25 : n.height()) + "px");
        n.insertAfter(p);
        p.remove()
    }
    function b(l) {
        return e.data(l, "numberbox").field.val()
    }
    function i(m, p) {
        var l = e.data(m, "numberbox");
        var n = l.options;
        var o = b(m);
        p = n.parser.call(m, p);
        n.value = p;
        l.field.val(p);
        e(m).val(n.formatter.call(m, p));
        e(m).validatebox && e(m).validatebox("validate");
        if (o != p) {
            n.onChange.call(m, p, o)
        }
    }
    function a(m) {
        var l = e.data(m, "numberbox").options;
        e(m).unbind(".numberbox").bind("keypress.numberbox", function (n) {
            return l.filter.call(m, n)
        }).bind("blur.numberbox", function () {
            i(m, e(this).val());
            e(this).val(l.formatter.call(m, b(m)))
        }).bind("focus.numberbox", function () {
            var n = b(m);
            if (n != l.parser.call(m, e(this).val())) {
                e(this).val(l.formatter.call(m, n))
            }
        }).bind("keyup.numberbox", function (q) {
            if (q.keyCode == 9 || q.which == 9 || q.keyCode == 16 || q.which == 16) {
                return true
            }
            if (this.value == "-" || this.value == "+") {
                return true
            }
            var r = e(this).data("allowChar");
            if (r && r.length > 0 && !!this.value) {
                var w = false;
                r = r.distinct();
                for (var n = 0; n < r.length; n++) {
                    var s = true;
                    for (var o = 0; o < this.value.length; o++) {
                        s &= (this.value[o] === r[n])
                    }
                    w |= s
                }
                if (w) {
                    return true
                }
            }
            var t = j(this);
            var u = e(this).val();
            if (!e.isNumeric(u) && u.length > 0) {
                u = u.replace(/,|，/g, "")
            }
            while (!e.isNumeric(u) && u && u != "-" && u != "+" && u.length > 0) {
                u = u.substring(0, u.length - 1)
            }
            if (u != e(this)[0].value) {
                e(this).val(u);
                t = t > u.length ? u.length : t;
                h(this, t)
            }
            return true
        })
    }
    function j(m) {
        var n = 0;
        if (document.selection) {
            var l = document.selection.createRange();
            l.moveStart("character", -m.value.length);
            n = l.text.length
        } else {
            if (m.selectionStart || m.selectionStart == "0") {
                n = m.selectionStart
            }
        }
        return (n)
    }
    function h(n, l) {
        if (n.setSelectionRange) {
            n.focus();
            n.setSelectionRange(l, l)
        } else {
            if (n.createTextRange) {
                var m = n.createTextRange();
                m.collapse(true);
                m.moveEnd("character", l);
                m.moveStart("character", l);
                m.select()
            }
        }
    }
    function d(l) {
        if (e.fn.validatebox) {
            var m = e.data(l, "numberbox").options;
            e(l).validatebox(m)
        }
    }
    function g(m, n) {
        var l = e.data(m, "numberbox").options;
        if (n) {
            l.disabled = true;
            e(m).attr("disabled", true)
        } else {
            l.disabled = false;
            e(m).removeAttr("disabled")
        }
    }
    e.fn.numberbox = function (m, l) {
        if (typeof m == "string") {
            var n = e.fn.numberbox.methods[m];
            if (n) {
                return n(this, l)
            } else {
                return this.validatebox(m, l)
            }
        }
        m = m || {};
        return this.each(function () {
            var o = e.data(this, "numberbox");
            if (o) {
                e.extend(o.options, m)
            } else {
                o = e.data(this, "numberbox", {
                    options: e.extend({}, e.fn.numberbox.defaults, e.fn.numberbox.parseOptions(this), m),
                    field: c(this)
                });
                e(this).removeAttr("disabled");
                e(this).css({
                    imeMode: "disabled"
                })
            }
            g(this, o.options.disabled);
            k(this);
            a(this);
            d(this);
            f(this)
        })
    };
    e.fn.numberbox.methods = {
        options: function (l) {
            return e.data(l[0], "numberbox").options
        },
        destroy: function (l) {
            return l.each(function () {
                e.data(this, "numberbox").field.remove();
                e(this).validatebox("destroy");
                e(this).remove()
            })
        },
        resize: function (l, m) {
            return l.each(function () {
                k(this, m)
            })
        },
        disable: function (l) {
            return l.each(function () {
                g(this, true)
            })
        },
        enable: function (l) {
            return l.each(function () {
                g(this, false)
            })
        },
        fix: function (l) {
            return l.each(function () {
                i(this, e(this).val())
            })
        },
        setValue: function (l, m) {
            return l.each(function () {
                i(this, m)
            })
        },
        getValue: function (l) {
            return b(l[0])
        },
        clear: function (l) {
            return l.each(function () {
                var m = e.data(this, "numberbox");
                m.field.val("");
                e(this).val("")
            })
        },
        reset: function (l) {
            return l.each(function () {
                var m = e(this).numberbox("options");
                e(this).numberbox("setValue", m.originalValue)
            })
        }
    };
    e.fn.numberbox.parseOptions = function (m) {
        var l = e(m);
        return e.extend({}, e.fn.validatebox.parseOptions(m), e.parser.parseOptions(m, ["width", "height", "decimalSeparator", "groupSeparator", "suffix",
            {
                min: "number",
                max: "number",
                precision: "number"
            }]), {
                prefix: (l.attr("prefix") ? l.attr("prefix") : undefined),
                disabled: (l.attr("disabled") ? true : undefined),
                value: (l.val() || undefined)
            })
    };
    e.fn.numberbox.defaults = e.extend({}, e.fn.validatebox.defaults, {
        width: "auto",
        height: 25,
        disabled: false,
        value: "",
        min: null,
        max: null,
        precision: 0,
        decimalSeparator: ".",
        groupSeparator: "",
        prefix: "",
        suffix: "",
        filter: function (n) {
            var l = e(this).numberbox("options");
            if (n.which == 45) {
                return (e(this).val().indexOf("-") == -1 ? true : false)
            }
            var m = String.fromCharCode(n.which);
            if (m == l.decimalSeparator) {
                return (e(this).val().indexOf(m) == -1 ? true : false)
            } else {
                if (m == l.groupSeparator) {
                    return true
                } else {
                    if ((n.which >= 48 && n.which <= 57 && n.ctrlKey == false && n.shiftKey == false) || n.which == 0 || n.which == 8) {
                        return true
                    } else {
                        if (n.ctrlKey == true && (n.which == 99 || n.which == 118)) {
                            return true
                        } else {
                            if (n.shiftKey == true && n.which >= 48 && n.which <= 57) {
                                return true
                            } else {
                                if (n.which == 61 && e(this).data("allowChar") && e(this).data("allowChar").contains("=")) {
                                    return true
                                } else {
                                    return false
                                }
                            }
                        }
                    }
                }
            }
        },
        formatter: function (n) {
            if (!n) {
                return n
            }
            n = n + "";
            var o = e(this).numberbox("options");
            var q = n,
                r = "";
            var l = n.indexOf(".");
            if (l >= 0) {
                q = n.substring(0, l);
                r = n.substring(l + 1, n.length)
            }
            if (o.groupSeparator) {
                var m = /(\d+)(\d{3})/;
                while (m.test(q)) {
                    q = q.replace(m, "$1" + o.groupSeparator + "$2")
                }
            }
            if (r) {
                return o.prefix + q + o.decimalSeparator + r + o.suffix
            } else {
                return o.prefix + q + o.suffix
            }
        },
        parser: function (m) {
            m = m + "";
            var l = e(this).numberbox("options");
            if (parseFloat(m) != m) {
                m = e.trim(m.replace(new RegExp("\\,", "g"), ""));
                m = e.trim(m.replace(new RegExp("\\，", "g"), ""));
                if (l.prefix) {
                    m = e.trim(m.replace(new RegExp("\\" + e.trim(l.prefix), "g"), ""))
                }
                if (l.suffix) {
                    m = e.trim(m.replace(new RegExp("\\" + e.trim(l.suffix), "g"), ""))
                }
                if (l.groupSeparator) {
                    m = e.trim(m.replace(new RegExp("\\" + l.groupSeparator, "g"), ""))
                }
                if (l.decimalSeparator) {
                    m = e.trim(m.replace(new RegExp("\\" + l.decimalSeparator, "g"), "."))
                }
                m = m.replace(/\s/g, "")
            }
            var p = l.precision;
            if (l.minPrecision != undefined) {
                p = l.minPrecision;
                if (m != null && m != "" && String(m).indexOf(".") > -1) {
                    m = m.replace(new RegExp(",", "g"), "");
                    var o = m.split(".");
                    if (o.length == 1 || o[1].length <= l.minPrecision) {
                        p = l.minPrecision
                    } else {
                        if (o[1].length < l.precision) {
                            p = o[1].length
                        } else {
                            p = l.precision
                        }
                    }
                }
            }
            var n = parseFloat(m).toFixed(p);
            if (isNaN(n)) {
                n = ""
            } else {
                if (typeof (l.min) == "number" && n < l.min) {
                    n = l.min.toFixed(p)
                } else {
                    if (typeof (l.max) == "number" && n > l.max) {
                        n = l.max.toFixed(p)
                    } else {
                        if (l.keepText === true) {
                            return m
                        }
                    }
                }
            }
            return n
        },
        onChange: function (m, l) { }
    })
})(jQuery);
(function (d) {
    function e(k) {
        var i = d.data(k, "calendar").options;
        var j = d(k);
        i.fit ? d.extend(i, j._fit()) : j._fit(false);
        var l = j.find(".calendar-header");
        j._outerWidth(i.width);
        j._outerHeight(i.height);
        j.find(".calendar-body")._outerHeight(j.height() - l._outerHeight())
    }
    function b(i) {
        d(i).addClass("calendar").html('<div class="calendar-header"><div class="calendar-prevmonth"></div><div class="calendar-nextmonth"></div><div class="calendar-prevyear"></div><div class="calendar-nextyear"></div><div class="calendar-title"><span>Aprial 2010</span></div></div><div class="calendar-body"><div class="calendar-menu"><div class="calendar-menu-year-inner"><span class="calendar-menu-prev"></span><span><input class="calendar-menu-year" type="text"></input></span><span class="calendar-menu-next"></span></div><div class="calendar-menu-month-inner"></div></div></div>');
        d(i).find(".calendar-title span").hover(function () {
            d(this).addClass("calendar-menu-hover")
        }, function () {
            d(this).removeClass("calendar-menu-hover")
        }).click(function () {
            var j = d(i).find(".calendar-menu");
            if (j.is(":visible")) {
                j.hide()
            } else {
                a(i)
            }
        });
        d(".calendar-prevmonth,.calendar-nextmonth,.calendar-prevyear,.calendar-nextyear", i).hover(function () {
            d(this).addClass("calendar-nav-hover")
        }, function () {
            d(this).removeClass("calendar-nav-hover")
        });
        d(i).find(".calendar-nextmonth").click(function () {
            h(i, 1)
        });
        d(i).find(".calendar-prevmonth").click(function () {
            h(i, -1)
        });
        d(i).find(".calendar-nextyear").click(function () {
            g(i, 1)
        });
        d(i).find(".calendar-prevyear").click(function () {
            g(i, -1)
        });
        d(i).bind("_resize", function () {
            var j = d.data(i, "calendar").options;
            if (j.fit == true) {
                e(i)
            }
            return false
        })
    }
    function h(j, i) {
        var k = d.data(j, "calendar").options;
        k.month += i;
        if (k.month > 12) {
            k.year++;
            k.month = 1
        } else {
            if (k.month < 1) {
                k.year--;
                k.month = 12
            }
        }
        f(j);
        var l = d(j).find(".calendar-menu-month-inner");
        l.find("td.calendar-selected").removeClass("calendar-selected");
        l.find("td:eq(" + (k.month - 1) + ")").addClass("calendar-selected")
    }
    function g(k, l) {
        var i = d.data(k, "calendar").options;
        i.year += l;
        f(k);
        var j = d(k).find(".calendar-menu-year");
        j.val(i.year)
    }
    function a(l) {
        var q = d.data(l, "calendar").options;
        d(l).find(".calendar-menu").show();
        if (d(l).find(".calendar-menu-month-inner").is(":empty")) {
            d(l).find(".calendar-menu-month-inner").empty();
            var s = d('<table class="calendar-mtable"></table>').appendTo(d(l).find(".calendar-menu-month-inner"));
            var u = 0;
            for (var k = 0; k < 3; k++) {
                var o = d("<tr></tr>").appendTo(s);
                for (var n = 0; n < 4; n++) {
                    d('<td class="calendar-menu-month"></td>').html(q.months[u++]).attr("abbr", u).appendTo(o)
                }
            }
            d(l).find(".calendar-menu-prev,.calendar-menu-next").hover(function () {
                d(this).addClass("calendar-menu-hover")
            }, function () {
                d(this).removeClass("calendar-menu-hover")
            });
            d(l).find(".calendar-menu-next").click(function () {
                var i = d(l).find(".calendar-menu-year");
                if (!isNaN(i.val())) {
                    i.val(parseInt(i.val()) + 1);
                    m()
                }
            });
            d(l).find(".calendar-menu-prev").click(function () {
                var i = d(l).find(".calendar-menu-year");
                if (!isNaN(i.val())) {
                    i.val(parseInt(i.val() - 1));
                    m()
                }
            });
            d(l).find(".calendar-menu-year").keypress(function (i) {
                if (i.keyCode == 13) {
                    m(true)
                }
            });
            d(l).find(".calendar-menu-month").hover(function () {
                d(this).addClass("calendar-menu-hover")
            }, function () {
                d(this).removeClass("calendar-menu-hover")
            }).click(function () {
                var i = d(l).find(".calendar-menu");
                i.find(".calendar-selected").removeClass("calendar-selected");
                d(this).addClass("calendar-selected");
                m(true)
            })
        }
        function m(i) {
            var j = d(l).find(".calendar-menu");
            var x = j.find(".calendar-menu-year").val();
            var t = j.find(".calendar-selected").attr("abbr");
            if (!isNaN(x)) {
                q.year = parseInt(x);
                q.month = parseInt(t);
                f(l)
            }
            if (i) {
                j.hide()
            }
        }
        var v = d(l).find(".calendar-body");
        var r = d(l).find(".calendar-menu");
        var p = r.find(".calendar-menu-year-inner");
        var w = r.find(".calendar-menu-month-inner");
        p.find("input").val(q.year).focus();
        w.find("td.calendar-selected").removeClass("calendar-selected");
        w.find("td:eq(" + (q.month - 1) + ")").addClass("calendar-selected");
        r._outerWidth(v._outerWidth());
        r._outerHeight(v._outerHeight());
        w._outerHeight(r.height() - p._outerHeight())
    }
    function c(x, m, q) {
        var l = d.data(x, "calendar").options;
        var j = [];
        var v = new Date(m, q, 0).getDate();
        for (var r = 1; r <= v; r++) {
            j.push([m, q, r])
        }
        var k = [],
            u = [];
        var t = -1;
        while (j.length > 0) {
            var w = j.shift();
            u.push(w);
            var s = new Date(w[0], w[1] - 1, w[2]).getDay();
            if (t == s) {
                s = 0
            } else {
                if (s == (l.firstDay == 0 ? 7 : l.firstDay) - 1) {
                    k.push(u);
                    u = []
                }
            }
            t = s
        }
        if (u.length) {
            k.push(u)
        }
        var o = k[0];
        if (o.length < 7) {
            while (o.length < 7) {
                var n = o[0];
                var w = new Date(n[0], n[1] - 1, n[2] - 1);
                o.unshift([w.getFullYear(), w.getMonth() + 1, w.getDate()])
            }
        } else {
            var n = o[0];
            var u = [];
            for (var r = 1; r <= 7; r++) {
                var w = new Date(n[0], n[1] - 1, n[2] - r);
                u.unshift([w.getFullYear(), w.getMonth() + 1, w.getDate()])
            }
            k.unshift(u)
        }
        var p = k[k.length - 1];
        while (p.length < 7) {
            var y = p[p.length - 1];
            var w = new Date(y[0], y[1] - 1, y[2] + 1);
            p.push([w.getFullYear(), w.getMonth() + 1, w.getDate()])
        }
        if (k.length < 6) {
            var y = p[p.length - 1];
            var u = [];
            for (var r = 1; r <= 7; r++) {
                var w = new Date(y[0], y[1] - 1, y[2] + r);
                u.push([w.getFullYear(), w.getMonth() + 1, w.getDate()])
            }
            k.push(u)
        }
        return k
    }
    function f(l) {
        var m = d.data(l, "calendar").options;
        if (m.current && !m.validator.call(l, m.current)) {
            m.current = null
        }
        var r = new Date();
        var D = r.getFullYear() + "," + (r.getMonth() + 1) + "," + r.getDate();
        var E = m.current ? (m.current.getFullYear() + "," + (m.current.getMonth() + 1) + "," + m.current.getDate()) : "";
        var n = 6 - m.firstDay;
        var G = n + 1;
        if (n >= 7) {
            n -= 7
        }
        if (G >= 7) {
            G -= 7
        }
        d(l).find(".calendar-title span").html(!m.current ? "" : (m.months[m.month - 1] + " " + m.year));
        var H = d(l).find("div.calendar-body");
        H.children("table").remove();
        var C = ['<table class="calendar-dtable" cellspacing="0" cellpadding="0" border="0">'];
        C.push("<thead><tr>");
        for (var v = m.firstDay; v < m.weeks.length; v++) {
            C.push("<th>" + m.weeks[v] + "</th>")
        }
        for (var v = 0; v < m.firstDay; v++) {
            C.push("<th>" + m.weeks[v] + "</th>")
        }
        C.push("</tr></thead>");
        C.push("<tbody>");
        var q = c(l, m.year, m.month);
        for (var v = 0; v < q.length; v++) {
            var x = q[v];
            var F = "";
            if (v == 0) {
                F = "calendar-first"
            } else {
                if (v == q.length - 1) {
                    F = "calendar-last"
                }
            }
            C.push('<tr class="' + F + '">');
            for (var w = 0; w < x.length; w++) {
                var y = x[w];
                var o = y[0] + "," + y[1] + "," + y[2];
                var k = new Date(y[0], parseInt(y[1]) - 1, y[2]);
                var A = m.formatter.call(l, k);
                var z = m.styler.call(l, k);
                var u = "";
                var B = "";
                if (typeof z == "string") {
                    B = z
                } else {
                    if (z) {
                        u = z["class"] || "";
                        B = z.style || ""
                    }
                }
                var F = "calendar-day";
                if (!(m.year == y[0] && m.month == y[1])) {
                    F += " calendar-other-month"
                }
                if (o == D) {
                    F += " calendar-today"
                }
                if (o == E) {
                    F += " calendar-selected"
                }
                if (w == n) {
                    F += " calendar-saturday"
                } else {
                    if (w == G) {
                        F += " calendar-sunday"
                    }
                }
                if (w == 0) {
                    F += " calendar-first"
                } else {
                    if (w == x.length - 1) {
                        F += " calendar-last"
                    }
                }
                F += " " + u;
                if (!m.validator.call(l, k)) {
                    F += " calendar-disabled"
                }
                C.push('<td class="' + F + '" abbr="' + o + '" style="' + B + '">' + A + "</td>")
            }
            C.push("</tr>")
        }
        C.push("</tbody>");
        C.push("</table>");
        H.append(C.join(""));
        var p = H.children("table.calendar-dtable").prependTo(H);
        p.find("td.calendar-day:not(.calendar-disabled)").hover(function () {
            d(this).addClass("calendar-hover")
        }, function () {
            d(this).removeClass("calendar-hover")
        }).click(function (s) {
            var i = m.current;
            p.find(".calendar-selected").removeClass("calendar-selected");
            d(this).addClass("calendar-selected");
            var j = d(this).attr("abbr").split(",");
            m.current = new Date(j[0], parseInt(j[1]) - 1, j[2]);
            m.onSelect.call(l, m.current);
            if (!i || i.getTime() != m.current.getTime()) {
                m.onChange.call(l, m.current, i)
            }
            if (s.stopPropagation) {
                s.stopPropagation()
            } else {
                if (window.event) {
                    window.event.cancelBubble = true
                }
            }
        })
    }
    d.fn.calendar = function (j, i) {
        if (typeof j == "string") {
            return d.fn.calendar.methods[j](this, i)
        }
        j = j || {};
        return this.each(function () {
            var k = d.data(this, "calendar");
            if (k) {
                d.extend(k.options, j)
            } else {
                k = d.data(this, "calendar", {
                    options: d.extend({}, d.fn.calendar.defaults, d.fn.calendar.parseOptions(this), j)
                });
                b(this)
            }
            if (k.options.border == false) {
                d(this).addClass("calendar-noborder")
            }
            e(this);
            f(this);
            d(this).find("div.calendar-menu").hide()
        })
    };
    d.fn.calendar.methods = {
        options: function (i) {
            return d.data(i[0], "calendar").options
        },
        resize: function (i) {
            return i.each(function () {
                e(this)
            })
        },
        moveTo: function (i, j) {
            return i.each(function () {
                var l = d(this).calendar("options");
                if (l.validator.call(this, j)) {
                    var k = l.current;
                    d(this).calendar({
                        year: j.getFullYear(),
                        month: j.getMonth() + 1,
                        current: j
                    });
                    if (!k || k.getTime() != j.getTime()) {
                        l.onChange.call(this, l.current, k)
                    }
                } else {
                    d(this).calendar({
                        year: 0,
                        month: 0,
                        current: null
                    })
                }
            })
        }
    };
    d.fn.calendar.parseOptions = function (i) {
        var j = d(i);
        return d.extend({}, d.parser.parseOptions(i, ["width", "height",
            {
                firstDay: "number",
                fit: "boolean",
                border: "boolean"
            }]))
    };
    d.fn.calendar.defaults = {
        width: 180,
        height: 180,
        fit: false,
        border: true,
        firstDay: 0,
        weeks: ["S", "M", "T", "W", "T", "F", "S"],
        months: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
        year: new Date().getFullYear(),
        month: new Date().getMonth() + 1,
        current: (function () {
            var i = new Date();
            return new Date(i.getFullYear(), i.getMonth(), i.getDate())
        })(),
        formatter: function (i) {
            return i.getDate()
        },
        styler: function (i) {
            return ""
        },
        validator: function (i) {
            return true
        },
        onSelect: function (i) { },
        onChange: function (j, i) { }
    }
})(jQuery);
(function (e) {
    function c(g) {
        var h = e('<span class="spinner"><span class="spinner-arrow"><span class="spinner-arrow-up"></span><span class="spinner-arrow-down"></span></span></span>').insertAfter(g);
        e(g).addClass("spinner-text spinner-f").prependTo(h);
        return h
    }
    function b(l, i) {
        var j = e.data(l, "spinner").options;
        var g = e.data(l, "spinner").spinner;
        if (i) {
            j.width = i
        }
        var k = e('<div style="display:none"></div>').insertBefore(g);
        g.appendTo("body");
        if (isNaN(j.width)) {
            j.width = e(l).outerWidth()
        }
        var h = g.find(".spinner-arrow");
        g._outerWidth(j.width)._outerHeight(j.height);
        e(l)._outerWidth(g.width() - h.outerWidth());
        e(l).css({
            height: g.height() + "px",
            lineHeight: g.height() + "px"
        });
        h._outerHeight(g.height());
        h.find("span")._outerHeight(h.height() / 2);
        g.insertAfter(k);
        k.remove()
    }
    function f(i) {
        var g = e.data(i, "spinner").options;
        var h = e.data(i, "spinner").spinner;
        e(i).unbind(".spinner");
        h.find(".spinner-arrow-up,.spinner-arrow-down").unbind(".spinner");
        if (!g.disabled && !g.readonly) {
            h.find(".spinner-arrow-up").bind("mouseenter.spinner", function () {
                e(this).addClass("spinner-arrow-hover")
            }).bind("mouseleave.spinner", function () {
                e(this).removeClass("spinner-arrow-hover")
            }).bind("click.spinner", function () {
                g.spin.call(i, false);
                g.onSpinUp.call(i);
                e(i).validatebox("validate")
            });
            h.find(".spinner-arrow-down").bind("mouseenter.spinner", function () {
                e(this).addClass("spinner-arrow-hover")
            }).bind("mouseleave.spinner", function () {
                e(this).removeClass("spinner-arrow-hover")
            }).bind("click.spinner", function () {
                g.spin.call(i, true);
                g.onSpinDown.call(i);
                e(i).validatebox("validate")
            });
            e(i).bind("change.spinner", function () {
                e(this).spinner("setValue", e(this).val())
            })
        }
    }
    function a(g, i) {
        var h = e.data(g, "spinner").options;
        if (i) {
            h.disabled = true;
            e(g).attr("disabled", true)
        } else {
            h.disabled = false;
            e(g).removeAttr("disabled")
        }
    }
    function d(j, k) {
        var i = e.data(j, "spinner");
        var h = i.options;
        h.readonly = k == undefined ? true : k;
        var g = h.readonly ? true : (!h.editable);
        e(j).attr("readonly", g).css("cursor", g ? "pointer" : "")
    }
    e.fn.spinner = function (h, i) {
        if (typeof h == "string") {
            var g = e.fn.spinner.methods[h];
            if (g) {
                return g(this, i)
            } else {
                return this.validatebox(h, i)
            }
        }
        h = h || {};
        return this.each(function () {
            var j = e.data(this, "spinner");
            if (j) {
                e.extend(j.options, h)
            } else {
                j = e.data(this, "spinner", {
                    options: e.extend({}, e.fn.spinner.defaults, e.fn.spinner.parseOptions(this), h),
                    spinner: c(this)
                });
                e(this).removeAttr("disabled")
            }
            j.options.originalValue = j.options.value;
            e(this).val(j.options.value);
            a(this, j.options.disabled);
            d(this, j.options.readonly);
            b(this);
            e(this).validatebox(j.options);
            f(this)
        })
    };
    e.fn.spinner.methods = {
        options: function (g) {
            var h = e.data(g[0], "spinner").options;
            return e.extend(h, {
                value: g.val()
            })
        },
        destroy: function (g) {
            return g.each(function () {
                var h = e.data(this, "spinner").spinner;
                e(this).validatebox("destroy");
                h.remove()
            })
        },
        resize: function (g, h) {
            return g.each(function () {
                b(this, h)
            })
        },
        enable: function (g) {
            return g.each(function () {
                a(this, false);
                f(this)
            })
        },
        disable: function (g) {
            return g.each(function () {
                a(this, true);
                f(this)
            })
        },
        readonly: function (g, h) {
            return g.each(function () {
                d(this, h);
                f(this)
            })
        },
        getValue: function (g) {
            return g.val()
        },
        setValue: function (g, h) {
            return g.each(function () {
                var j = e.data(this, "spinner").options;
                var i = j.value;
                j.value = h;
                e(this).val(h);
                if (i != h) {
                    j.onChange.call(this, h, i)
                }
            })
        },
        clear: function (g) {
            return g.each(function () {
                var h = e.data(this, "spinner").options;
                h.value = "";
                e(this).val("")
            })
        },
        reset: function (g) {
            return g.each(function () {
                var h = e(this).spinner("options");
                e(this).spinner("setValue", h.originalValue)
            })
        }
    };
    e.fn.spinner.parseOptions = function (g) {
        var h = e(g);
        return e.extend({}, e.fn.validatebox.parseOptions(g), e.parser.parseOptions(g, ["width", "height", "min", "max",
            {
                increment: "number",
                editable: "boolean"
            }]), {
                value: (h.val() || undefined),
                disabled: (h.attr("disabled") ? true : undefined),
                readonly: (h.attr("readonly") ? true : undefined)
            })
    };
    e.fn.spinner.defaults = e.extend({}, e.fn.validatebox.defaults, {
        width: "auto",
        height: 25,
        deltaX: 19,
        value: "",
        min: null,
        max: null,
        increment: 1,
        editable: true,
        disabled: false,
        readonly: false,
        spin: function (g) { },
        onSpinUp: function () { },
        onSpinDown: function () { },
        onChange: function (h, g) { }
    })
})(jQuery);
(function (a) {
    function c(d) {
        a(d).addClass("numberspinner-f");
        var e = a.data(d, "numberspinner").options;
        a(d).spinner(e).numberbox(a.extend({}, e, {
            width: "auto"
        }))
    }
    function b(e, g) {
        var d = a.data(e, "numberspinner").options;
        var f = parseFloat(a(e).numberbox("getValue") || d.value) || 0;
        if (g == true) {
            f -= d.increment
        } else {
            f += d.increment
        }
        a(e).numberbox("setValue", f)
    }
    a.fn.numberspinner = function (d, e) {
        if (typeof d == "string") {
            var f = a.fn.numberspinner.methods[d];
            if (f) {
                return f(this, e)
            } else {
                return this.spinner(d, e)
            }
        }
        d = d || {};
        return this.each(function () {
            var g = a.data(this, "numberspinner");
            if (g) {
                a.extend(g.options, d)
            } else {
                a.data(this, "numberspinner", {
                    options: a.extend({}, a.fn.numberspinner.defaults, a.fn.numberspinner.parseOptions(this), d)
                })
            }
            c(this)
        })
    };
    a.fn.numberspinner.methods = {
        options: function (d) {
            var e = a.data(d[0], "numberspinner").options;
            return a.extend(e, {
                value: d.numberbox("getValue"),
                originalValue: d.numberbox("options").originalValue
            })
        },
        setValue: function (d, e) {
            return d.each(function () {
                a(this).numberbox("setValue", e)
            })
        },
        getValue: function (d) {
            return d.numberbox("getValue")
        },
        clear: function (d) {
            return d.each(function () {
                a(this).spinner("clear");
                a(this).numberbox("clear")
            })
        },
        reset: function (d) {
            return d.each(function () {
                var e = a(this).numberspinner("options");
                a(this).numberspinner("setValue", e.originalValue)
            })
        }
    };
    a.fn.numberspinner.parseOptions = function (d) {
        return a.extend({}, a.fn.spinner.parseOptions(d), a.fn.numberbox.parseOptions(d), {})
    };
    a.fn.numberspinner.defaults = a.extend({}, a.fn.spinner.defaults, a.fn.numberbox.defaults, {
        spin: function (d) {
            b(this, d)
        }
    })
})(jQuery);
(function (c) {
    function e(g) {
        var h = c.data(g, "timespinner").options;
        c(g).addClass("timespinner-f");
        c(g).spinner(h);
        c(g).unbind(".timespinner");
        c(g).bind("click.timespinner", function () {
            var j = 0;
            if (this.selectionStart != null) {
                j = this.selectionStart
            } else {
                if (this.createTextRange) {
                    var k = g.createTextRange();
                    var i = document.selection.createRange();
                    i.setEndPoint("StartToStart", k);
                    j = i.text.length
                }
            }
            if (j >= 0 && j <= 2) {
                h.highlight = 0
            } else {
                if (j >= 3 && j <= 5) {
                    h.highlight = 1
                } else {
                    if (j >= 6 && j <= 8) {
                        h.highlight = 2
                    }
                }
            }
            f(g)
        }).bind("blur.timespinner", function () {
            a(g)
        })
    }
    function f(k) {
        var h = c.data(k, "timespinner").options;
        var i = 0,
            g = 0;
        if (h.highlight == 0) {
            i = 0;
            g = 2
        } else {
            if (h.highlight == 1) {
                i = 3;
                g = 5
            } else {
                if (h.highlight == 2) {
                    i = 6;
                    g = 8
                }
            }
        }
        if (k.selectionStart != null) {
            k.setSelectionRange(i, g)
        } else {
            if (k.createTextRange) {
                var j = k.createTextRange();
                j.collapse();
                j.moveEnd("character", g);
                j.moveStart("character", i);
                j.select()
            }
        }
        c(k).focus()
    }
    function b(g, k) {
        var h = c.data(g, "timespinner").options;
        if (!k) {
            return null
        }
        var l = k.split(h.separator);
        for (var j = 0; j < l.length; j++) {
            if (isNaN(l[j])) {
                return null
            }
        }
        while (l.length < 3) {
            l.push(0)
        }
        return new Date(1900, 0, 0, l[0], l[1], l[2])
    }
    function a(g) {
        var j = c.data(g, "timespinner").options;
        var l = c(g).val();
        var m = b(g, l);
        if (!m) {
            j.value = "";
            c(g).spinner("setValue", "");
            return
        }
        var i = b(g, j.min);
        var o = b(g, j.max);
        if (i && i > m) {
            m = i
        }
        if (o && o < m) {
            m = o
        }
        var h = [k(m.getHours()), k(m.getMinutes())];
        if (j.showSeconds) {
            h.push(k(m.getSeconds()))
        }
        var n = h.join(j.separator);
        j.value = n;
        c(g).spinner("setValue", n);

        function k(p) {
            return (p < 10 ? "0" : "") + p
        }
    }
    function d(l, m) {
        var k = c.data(l, "timespinner").options;
        var h = c(l).val();
        if (h == "") {
            h = [0, 0, 0].join(k.separator)
        }
        var j = h.split(k.separator);
        for (var g = 0; g < j.length; g++) {
            j[g] = parseInt(j[g], 10)
        }
        if (m == true) {
            j[k.highlight] -= k.increment
        } else {
            j[k.highlight] += k.increment
        }
        c(l).val(j.join(k.separator));
        a(l);
        f(l)
    }
    c.fn.timespinner = function (g, h) {
        if (typeof g == "string") {
            var i = c.fn.timespinner.methods[g];
            if (i) {
                return i(this, h)
            } else {
                return this.spinner(g, h)
            }
        }
        g = g || {};
        return this.each(function () {
            var j = c.data(this, "timespinner");
            if (j) {
                c.extend(j.options, g)
            } else {
                c.data(this, "timespinner", {
                    options: c.extend({}, c.fn.timespinner.defaults, c.fn.timespinner.parseOptions(this), g)
                })
            }
            e(this)
        })
    };
    c.fn.timespinner.methods = {
        options: function (g) {
            var h = c.data(g[0], "timespinner").options;
            return c.extend(h, {
                value: g.val(),
                originalValue: g.spinner("options").originalValue
            })
        },
        setValue: function (g, h) {
            return g.each(function () {
                c(this).val(h);
                a(this)
            })
        },
        getHours: function (i) {
            var g = c.data(i[0], "timespinner").options;
            var h = i.val().split(g.separator);
            return parseInt(h[0], 10)
        },
        getMinutes: function (i) {
            var g = c.data(i[0], "timespinner").options;
            var h = i.val().split(g.separator);
            return parseInt(h[1], 10)
        },
        getSeconds: function (i) {
            var g = c.data(i[0], "timespinner").options;
            var h = i.val().split(g.separator);
            return parseInt(h[2], 10) || 0
        }
    };
    c.fn.timespinner.parseOptions = function (g) {
        return c.extend({}, c.fn.spinner.parseOptions(g), c.parser.parseOptions(g, ["separator",
            {
                showSeconds: "boolean",
                highlight: "number"
            }]))
    };
    c.fn.timespinner.defaults = c.extend({}, c.fn.spinner.defaults, {
        separator: ":",
        showSeconds: false,
        highlight: 0,
        spin: function (g) {
            d(this, g)
        }
    })
})(jQuery);
(function ($) {
    var _501 = 0;

    function _502(a, o) {
        for (var i = 0, len = a.length; i < len; i++) {
            if (a[i] == o) {
                return i
            }
        }
        return -1
    }
    function _503(a, o, id) {
        if (typeof o == "string") {
            for (var i = 0, len = a.length; i < len; i++) {
                if (a[i][o] == id) {
                    a.splice(i, 1);
                    return
                }
            }
        } else {
            var _504 = _502(a, o);
            if (_504 != -1) {
                a.splice(_504, 1)
            }
        }
    }
    function _505(a, o, r) {
        for (var i = 0, len = a.length; i < len; i++) {
            if (a[i][o] == r[o]) {
                return
            }
        }
        a.push(r)
    }
    function _506(_507) {
        var _508 = $.data(_507, "datagrid");
        var opts = _508.options;
        var _509 = _508.panel;
        var dc = _508.dc;
        var ss = null;
        if (opts.sharedStyleSheet) {
            ss = typeof opts.sharedStyleSheet == "boolean" ? "head" : opts.sharedStyleSheet
        } else {
            ss = _509.closest("div.datagrid-view");
            if (!ss.length) {
                ss = dc.view
            }
        }
        var cc = $(ss);
        var _50a = $.data(cc[0], "ss");
        if (!_50a) {
            _50a = $.data(cc[0], "ss", {
                cache: {},
                dirty: []
            })
        }
        return {
            add: function (_50b) {
                var ss = ['<style type="text/css" easyui="true">'];
                for (var i = 0; i < _50b.length; i++) {
                    _50a.cache[_50b[i][0]] = {
                        width: _50b[i][1]
                    }
                }
                var _50c = 0;
                for (var s in _50a.cache) {
                    var item = _50a.cache[s];
                    item.index = _50c++;
                    ss.push(s + "{width:" + item.width + "}")
                }
                ss.push("</style>");
                $(ss.join("\n")).appendTo(cc);
                cc.children("style[easyui]:not(:last)").remove()
            },
            getRule: function (_50d) {
                var _50e = cc.children("style[easyui]:last")[0];
                var _50f = _50e.styleSheet ? _50e.styleSheet : (_50e.sheet || document.styleSheets[document.styleSheets.length - 1]);
                var _510 = _50f.cssRules || _50f.rules;
                return _510[_50d]
            },
            set: function (_511, _512) {
                var item = _50a.cache[_511];
                if (item) {
                    item.width = _512;
                    var rule = this.getRule(item.index);
                    if (rule) {
                        rule.style.width = _512
                    }
                }
            },
            remove: function (_513) {
                var tmp = [];
                for (var s in _50a.cache) {
                    if (s.indexOf(_513) == -1) {
                        tmp.push([s, _50a.cache[s].width])
                    }
                }
                _50a.cache = {};
                this.add(tmp)
            },
            dirty: function (_514) {
                if (_514) {
                    _50a.dirty.push(_514)
                }
            },
            clean: function () {
                for (var i = 0; i < _50a.dirty.length; i++) {
                    this.remove(_50a.dirty[i])
                }
                _50a.dirty = []
            }
        }
    }
    function _515(_516, _517) {
        var opts = $.data(_516, "datagrid").options;
        var _518 = $.data(_516, "datagrid").panel;
        if (_517) {
            if (_517.width) {
                opts.width = _517.width
            }
            if (_517.height) {
                opts.height = _517.height
            }
        }
        if (opts.fit == true) {
            var p = _518.panel("panel").parent();
            opts.width = p.width();
            opts.height = p.height()
        }
        _518.panel("resize", {
            width: opts.width,
            height: opts.height
        })
    }
    function _519(_51a) {
        var opts = $.data(_51a, "datagrid").options;
        var dc = $.data(_51a, "datagrid").dc;
        var wrap = $.data(_51a, "datagrid").panel;
        var _51b = wrap.width();
        if (opts.scrollY == undefined || opts.scrollY == false) {
            _51b = wrap.width() + 20
        } else {
            _51b = wrap.width() + 1
        }
        var _51c = wrap.height();
        var view = dc.view;
        var _51d = dc.view1;
        var _51e = dc.view2;
        var _51f = _51d.children("div.datagrid-header");
        var _520 = _51e.children("div.datagrid-header");
        var _521 = _51f.find("table");
        var _522 = _520.find("table");
        view.width(_51b);
        var _523 = _51f.children("div.datagrid-header-inner").show();
        _51d.width(_523.find("table").width());
        if (!opts.showHeader) {
            _523.hide()
        }
        _51e.width(_51b - _51d._outerWidth());
        _51d.children("div.datagrid-header,div.datagrid-body,div.datagrid-footer").width(_51d.width());
        _51e.children("div.datagrid-header,div.datagrid-body,div.datagrid-footer").width(_51e.width());
        var hh;
        _51f.css("height", "");
        _520.css("height", "");
        _521.css("height", "");
        _522.css("height", "");
        hh = Math.max(_521.height(), _522.height());
        _521.height(hh);
        _522.height(hh);
        _51f.add(_520);
        if (opts.height != "auto") {
            var _524 = _51c - _51e.children("div.datagrid-header")._outerHeight() - _51e.children("div.datagrid-footer")._outerHeight() - wrap.children("div.datagrid-toolbar")._outerHeight();
            wrap.children("div.datagrid-pager").each(function () {
                _524 -= $(this)._outerHeight()
            });
            dc.body1.add(dc.body2).children("table.datagrid-btable-frozen").css({
                position: "absolute",
                top: dc.header2._outerHeight()
            });
            var _525 = dc.body2.children("table.datagrid-btable-frozen")._outerHeight();
            _51d.add(_51e).children("div.datagrid-body").css({
                marginTop: _525,
                height: (_524 - _525)
            })
        }
        view.height(_51e.height())
    }
    function _526(_527, _528, _529) {
        var rows = $.data(_527, "datagrid").data.rows;
        var opts = $.data(_527, "datagrid").options;
        var dc = $.data(_527, "datagrid").dc;
        if (!dc.body1.is(":empty") && (!opts.nowrap || opts.autoRowHeight || _529)) {
            if (_528 != undefined) {
                var tr1 = opts.finder.getTr(_527, _528, "body", 1);
                var tr2 = opts.finder.getTr(_527, _528, "body", 2);
                _52a(tr1, tr2)
            } else {
                var tr1 = opts.finder.getTr(_527, 0, "allbody", 1);
                var tr2 = opts.finder.getTr(_527, 0, "allbody", 2);
                _52a(tr1, tr2);
                if (opts.showFooter) {
                    var tr1 = opts.finder.getTr(_527, 0, "allfooter", 1);
                    var tr2 = opts.finder.getTr(_527, 0, "allfooter", 2);
                    _52a(tr1, tr2)
                }
            }
        }
        _519(_527);
        if (opts.height == "auto") {
            var _52b = dc.body1.parent();
            var _52c = dc.body2;
            var _52d = _52e(_52c);
            var _52f = _52d.height;
            if (_52d.width > _52c.width()) {
                _52f += 18
            }
            _52b.height(_52f);
            _52c.height(_52f);
            dc.view.height(dc.view2.height())
        }
        dc.body2.triggerHandler("scroll");

        function _52a(trs1, trs2) {
            for (var i = 0; i < trs2.length; i++) {
                var tr1 = $(trs1[i]);
                var tr2 = $(trs2[i]);
                tr1.css("height", "");
                tr2.css("height", "");
                var _530 = Math.max(tr1.height(), tr2.height());
                tr1.css("height", _530);
                tr2.css("height", _530)
            }
        }
        function _52e(cc) {
            var _531 = 0;
            var _532 = 0;
            $(cc).children().each(function () {
                var c = $(this);
                if (c.is(":visible")) {
                    _532 += c._outerHeight();
                    if (_531 < c._outerWidth()) {
                        _531 = c._outerWidth()
                    }
                }
            });
            return {
                width: _531,
                height: _532
            }
        }
    }
    function _533(_534, _535) {
        var _536 = $.data(_534, "datagrid");
        var opts = _536.options;
        var dc = _536.dc;
        if (!dc.body2.children("table.datagrid-btable-frozen").length) {
            dc.body1.add(dc.body2).prepend('<table class="datagrid-btable datagrid-btable-frozen" cellspacing="0" cellpadding="0"></table>')
        }
        _537(true);
        _537(false);
        _519(_534);

        function _537(_538) {
            var _539 = _538 ? 1 : 2;
            var tr = opts.finder.getTr(_534, _535, "body", _539);
            (_538 ? dc.body1 : dc.body2).children("table.datagrid-btable-frozen").append(tr)
        }
    }
    function _53a(_53b, _53c) {
        function _53d() {
            var _53e = [];
            var _53f = [];
            $(_53b).children("thead").each(function () {
                var opt = $.parser.parseOptions(this, [{
                    frozen: "boolean"
                }]);
                $(this).find("tr").each(function () {
                    var cols = [];
                    $(this).find("th").each(function () {
                        var th = $(this);
                        var col = $.extend({}, $.parser.parseOptions(this, ["field", "align", "halign", "order",
                            {
                                sortable: "boolean",
                                checkbox: "boolean",
                                resizable: "boolean",
                                fixed: "boolean"
                            }, {
                                rowspan: "number",
                                colspan: "number",
                                width: "number"
                            }]), {
                                title: (th.html() || undefined),
                                hidden: (th.attr("hidden") ? true : undefined),
                                formatter: (th.attr("formatter") ? eval(th.attr("formatter")) : undefined),
                                styler: (th.attr("styler") ? eval(th.attr("styler")) : undefined),
                                sorter: (th.attr("sorter") ? eval(th.attr("sorter")) : undefined)
                            });
                        if (th.attr("editor")) {
                            var s = $.trim(th.attr("editor"));
                            if (s.substr(0, 1) == "{") {
                                col.editor = eval("(" + s + ")")
                            } else {
                                col.editor = s
                            }
                        }
                        cols.push(col)
                    });
                    opt.frozen ? _53e.push(cols) : _53f.push(cols)
                })
            });
            return [_53e, _53f]
        }
        var _540 = $('<div class="datagrid-wrap"><div class="datagrid-view"><div class="datagrid-view1"><div class="datagrid-header"><div class="datagrid-header-inner"></div></div><div class="datagrid-body"><div class="datagrid-body-inner"></div></div><div class="datagrid-footer"><div class="datagrid-footer-inner"></div></div></div><div class="datagrid-view2"><div class="datagrid-header"><div class="datagrid-header-inner"></div></div><div class="datagrid-body"></div><div class="datagrid-footer"><div class="datagrid-footer-inner"></div></div></div></div></div>').insertAfter(_53b);
        _540.panel({
            doSize: false
        });
        _540.panel("panel").addClass("datagrid").bind("_resize", function (e, _541) {
            var opts = $.data(_53b, "datagrid").options;
            if (opts.fit == true || _541) {
                _515(_53b);
                setTimeout(function () {
                    if ($.data(_53b, "datagrid")) {
                        _542(_53b)
                    }
                }, 0)
            }
            return false
        });
        $(_53b).hide().appendTo(_540.children("div.datagrid-view"));
        var cc = _53d();
        var view = _540.children("div.datagrid-view");
        var _543 = view.children("div.datagrid-view1");
        var _544 = view.children("div.datagrid-view2");
        return {
            panel: _540,
            frozenColumns: cc[0],
            columns: cc[1],
            dc: {
                view: view,
                view1: _543,
                view2: _544,
                header1: _543.children("div.datagrid-header").children("div.datagrid-header-inner"),
                header2: _544.children("div.datagrid-header").children("div.datagrid-header-inner"),
                body1: _543.children("div.datagrid-body").children("div.datagrid-body-inner"),
                body2: _544.children("div.datagrid-body"),
                footer1: _543.children("div.datagrid-footer").children("div.datagrid-footer-inner"),
                footer2: _544.children("div.datagrid-footer").children("div.datagrid-footer-inner")
            }
        }
    }
    function _545(_546) {
        var _547 = $.data(_546, "datagrid");
        var opts = _547.options;
        var dc = _547.dc;
        var _548 = _547.panel;
        _547.ss = $(_546).datagrid("createStyleSheet");
        _548.panel($.extend({}, opts, {
            id: null,
            doSize: false,
            onResize: function (_549, _54a) {
                if ($.data(_546, "datagrid")) {
                    _519(_546);
                    _579(_546);
                    opts.onResize.call(_548, _549, _54a)
                }
            },
            onExpand: function () {
                _526(_546);
                opts.onExpand.call(_548)
            }
        }));
        _547.rowIdPrefix = "datagrid-row-r" + (++_501);
        _547.cellClassPrefix = "datagrid-cell-c" + _501;
        _54b(dc.header1, opts.frozenColumns, true);
        _54b(dc.header2, opts.columns, false);
        _54c();
        dc.header1.add(dc.header2).css("display", opts.showHeader ? "block" : "none");
        dc.footer1.add(dc.footer2).css("display", opts.showFooter ? "block" : "none");
        if (opts.toolbar) {
            if ($.isArray(opts.toolbar)) {
                $("div.datagrid-toolbar", _548).remove();
                var tb = $('<div class="datagrid-toolbar"><table cellspacing="0" cellpadding="0"><tr></tr></table></div>').prependTo(_548);
                var tr = tb.find("tr");
                for (var i = 0; i < opts.toolbar.length; i++) {
                    var btn = opts.toolbar[i];
                    if (btn == "-") {
                        $('<td><div class="datagrid-btn-separator"></div></td>').appendTo(tr)
                    } else {
                        var td = $("<td></td>").appendTo(tr);
                        var tool = $('<a href="javascript:void(0)"></a>').appendTo(td);
                        tool[0].onclick = eval(btn.handler ||
                            function () { });
                        tool.linkbutton($.extend({}, btn, {
                            plain: true
                        }))
                    }
                }
            } else {
                $(opts.toolbar).addClass("datagrid-toolbar").prependTo(_548);
                $(opts.toolbar).show()
            }
        } else {
            $("div.datagrid-toolbar", _548).remove()
        }
        $("div.datagrid-pager", _548).remove();
        if (opts.pagination) {
            var _54d = $('<div class="datagrid-pager"></div>');
            if (opts.pagePosition == "bottom") {
                _54d.appendTo(_548)
            } else {
                if (opts.pagePosition == "top") {
                    _54d.addClass("datagrid-pager-top").prependTo(_548)
                } else {
                    var ptop = $('<div class="datagrid-pager datagrid-pager-top"></div>').prependTo(_548);
                    _54d.appendTo(_548);
                    _54d = _54d.add(ptop)
                }
            }
            _54d.pagination({
                total: (opts.pageNumber * opts.pageSize),
                pageNumber: opts.pageNumber,
                pageSize: opts.pageSize,
                pageList: opts.pageList,
                onSelectPage: function (_54e, _54f) {
                    opts.pageNumber = _54e;
                    opts.pageSize = _54f;
                    _54d.pagination("refresh", {
                        pageNumber: _54e,
                        pageSize: _54f
                    });
                    _577(_546)
                }
            });
            opts.pageSize = _54d.pagination("options").pageSize
        }
        function _54b(_550, _551, _552) {
            if (!_551) {
                return
            }
            $(_550).show();
            $(_550).empty();
            var _553 = [];
            var _554 = [];
            if (opts.sortName) {
                _553 = opts.sortName.split(",");
                _554 = opts.sortOrder.split(",")
            }
            var t = $('<table class="datagrid-htable" border="0" cellspacing="0" cellpadding="0"><tbody></tbody></table>').appendTo(_550);
            for (var i = 0; i < _551.length; i++) {
                var tr = $('<tr class="datagrid-header-row"></tr>').appendTo($("tbody", t));
                var cols = _551[i];
                for (var j = 0; j < cols.length; j++) {
                    var col = cols[j];
                    var attr = "";
                    if (col.rowspan) {
                        attr += 'rowspan="' + col.rowspan + '" '
                    }
                    if (col.colspan) {
                        attr += 'colspan="' + col.colspan + '" '
                    }
                    var td = $("<td " + attr + "></td>").appendTo(tr);
                    if (col.checkbox) {
                        td.attr("field", col.field);
                        $('<div class="datagrid-header-check"></div>').html('<input type="checkbox"/>').appendTo(td)
                    } else {
                        if (col.field) {
                            td.attr("field", col.field);
                            td.append('<div class="datagrid-cell"><span></span></div>');
                            $("span", td).html((col.title && col.title.trim().indexOf("<") != 0) ? mText.encode(col.title) : col.title);
                            $("span.datagrid-sort-icon", td).html("&nbsp;");
                            var cell = td.find("div.datagrid-cell");
                            var pos = _502(_553, col.field);
                            if (pos >= 0) {
                                cell.addClass("datagrid-sort-" + _554[pos])
                            }
                            if (col.resizable == false) {
                                cell.attr("resizable", "false")
                            }
                            if (col.width) {
                                cell._outerWidth(col.width);
                                col.boxWidth = parseInt(cell[0].style.width)
                            } else {
                                col.auto = true
                            }
                            cell.css("text-align", "center");
                            col.cellClass = _547.cellClassPrefix + "-" + col.field.replace(/[\.|\s]/g, "-");
                            cell.addClass(col.cellClass).css("width", "")
                        } else {
                            $('<div class="datagrid-cell-group"></div>').html(col.title).appendTo(td)
                        }
                    }
                    if (col.hidden) {
                        td.hide()
                    }
                }
            }
            if (_552 && opts.rownumbers) {
                var td = $('<td rowspan="' + opts.frozenColumns.length + '"><div class="datagrid-header-rownumber"></div></td>');
                if ($("tr", t).length == 0) {
                    td.wrap('<tr class="datagrid-header-row"></tr>').parent().appendTo($("tbody", t))
                } else {
                    td.prependTo($("tr:first", t))
                }
            }
        }
        function _54c() {
            var _555 = [];
            var _556 = _557(_546, true).concat(_557(_546));
            for (var i = 0; i < _556.length; i++) {
                var col = _558(_546, _556[i]);
                if (col && !col.checkbox) {
                    _555.push(["." + col.cellClass, col.boxWidth ? col.boxWidth + "px" : "auto"])
                }
            }
            _547.ss.add(_555);
            _547.ss.dirty(_547.cellSelectorPrefix);
            _547.cellSelectorPrefix = "." + _547.cellClassPrefix
        }
    }
    function _559(_55a) {
        var _55b = $.data(_55a, "datagrid");
        var _55c = _55b.panel;
        var opts = _55b.options;
        var dc = _55b.dc;
        var _55d = dc.header1.add(dc.header2);
        _55d.find("input[type=checkbox]").unbind(".datagrid").bind("click.datagrid", function (e) {
            if (opts.singleSelect && opts.selectOnCheck) {
                return false
            }
            if ($(this).is(":checked")) {
                _5df(_55a)
            } else {
                _5e5(_55a)
            }
            e.stopPropagation()
        });
        var _55e = _55d.find("div.datagrid-cell");
        _55e.closest("td").unbind(".datagrid").bind("mouseenter.datagrid", function () {
            if (_55b.resizing) {
                return
            }
            $(this).addClass("datagrid-header-over")
        }).bind("mouseleave.datagrid", function () {
            $(this).removeClass("datagrid-header-over")
        }).bind("contextmenu.datagrid", function (e) {
            var _55f = $(this).attr("field");
            opts.onHeaderContextMenu.call(_55a, e, _55f)
        });
        _55e.unbind(".datagrid").bind("click.datagrid", function (e) {
            var p1 = $(this).offset().left + 5;
            var p2 = $(this).offset().left + $(this)._outerWidth() - 5;
            if (e.pageX < p2 && e.pageX > p1) {
                _56c(_55a, $(this).parent().attr("field"))
            }
        }).bind("dblclick.datagrid", function (e) {
            var p1 = $(this).offset().left + 5;
            var p2 = $(this).offset().left + $(this)._outerWidth() - 5;
            var cond = opts.resizeHandle == "right" ? (e.pageX > p2) : (opts.resizeHandle == "left" ? (e.pageX < p1) : (e.pageX < p1 || e.pageX > p2));
            if (cond) {
                var _560 = $(this).parent().attr("field");
                var col = _558(_55a, _560);
                if (col.resizable == false) {
                    return
                }
                $(_55a).datagrid("autoSizeColumn", _560);
                col.auto = false
            }
        });
        var _561 = opts.resizeHandle == "right" ? "e" : (opts.resizeHandle == "left" ? "w" : "e,w");
        _55e.each(function () {
            $(this).resizable({
                handles: _561,
                disabled: ($(this).attr("resizable") ? $(this).attr("resizable") == "false" : false),
                minWidth: 25,
                onStartResize: function (e) {
                    _55b.resizing = true;
                    _55d.css("cursor", $("body").css("cursor"));
                    if (!_55b.proxy) {
                        _55b.proxy = $('<div class="datagrid-resize-proxy"></div>').appendTo(dc.view)
                    }
                    _55b.proxy.css({
                        left: e.pageX - $(_55c).offset().left - 1,
                        display: "none"
                    });
                    setTimeout(function () {
                        if (_55b.proxy) {
                            _55b.proxy.show()
                        }
                    }, 500)
                },
                onResize: function (e) {
                    _55b.proxy.css({
                        left: e.pageX - $(_55c).offset().left - 1,
                        display: "block"
                    });
                    return false
                },
                onStopResize: function (e) {
                    _55d.css("cursor", "");
                    $(this).css("height", "");
                    $(this)._outerWidth($(this)._outerWidth());
                    var _562 = $(this).parent().attr("field");
                    var col = _558(_55a, _562);
                    col.width = $(this)._outerWidth();
                    col.boxWidth = parseInt(this.style.width);
                    col.auto = undefined;
                    $(this).css("width", "");
                    _542(_55a, _562);
                    _55b.proxy.remove();
                    _55b.proxy = null;
                    if ($(this).parents("div:first.datagrid-header").parent().hasClass("datagrid-view1")) {
                        _519(_55a)
                    }
                    _579(_55a);
                    opts.onResizeColumn.call(_55a, _562, col.width);
                    setTimeout(function () {
                        _55b.resizing = false
                    }, 0)
                }
            })
        });
        dc.body1.add(dc.body2).unbind().bind("mouseover", function (e) {
            if (_55b.resizing) {
                return
            }
            var tr = $(e.target).closest("tr.datagrid-row");
            if (!_563(tr)) {
                return
            }
            var _564 = _565(tr);
            _5c7(_55a, _564);
            e.stopPropagation()
        }).bind("mouseout", function (e) {
            var tr = $(e.target).closest("tr.datagrid-row");
            if (!_563(tr)) {
                return
            }
            var _566 = _565(tr);
            opts.finder.getTr(_55a, _566).removeClass("datagrid-row-over");
            e.stopPropagation()
        }).bind("click", function (e) {
            var tt = $(e.target || e.srcElement);
            var tr = tt.closest("tr.datagrid-row");
            if (!_563(tr)) {
                return
            }
            var _567 = _565(tr);
            if (tt.parent().hasClass("datagrid-cell-check")) {
                if (opts.singleSelect && opts.selectOnCheck) {
                    if (!opts.checkOnSelect) {
                        _5e5(_55a, true)
                    }
                    _5d2(_55a, _567)
                } else {
                    if (tt.is(":checked")) {
                        _5d2(_55a, _567)
                    } else {
                        _5d9(_55a, _567)
                    }
                }
            } else {
                var row = opts.finder.getRow(_55a, _567);
                var td = tt.closest("td[field]", tr);
                if (td.length) {
                    var _568 = td.attr("field");
                    if (opts.onClickCell.call(_55a, _567, _568, row[_568], e) === false) {
                        return
                    }
                    var input = td.find("input[type='text']:visible,textarea:visible,input[type='password']:visible");
                    if (input.length) {
                        input.trigger("click.click2select")
                    }
                }
                if (opts.singleSelect == true) {
                    _5cb(_55a, _567)
                } else {
                    if (opts.ctrlSelect) {
                        if (e.ctrlKey) {
                            if (tr.hasClass("datagrid-row-selected")) {
                                _5d3(_55a, _567)
                            } else {
                                _5cb(_55a, _567)
                            }
                        } else {
                            $(_55a).datagrid("clearSelections");
                            _5cb(_55a, _567)
                        }
                    } else {
                        if (tr.hasClass("datagrid-row-selected")) {
                            _5d3(_55a, _567)
                        } else {
                            _5cb(_55a, _567)
                        }
                    }
                }
                opts.onClickRow.call(_55a, _567, row, e)
            }
            if (($(tt).is("input[type='text']") || $(tt).is("input[type='password']") || $(tt).is("textarea")) && !$(tt).hasClass("click-no-select")) {
                $(tt).trigger("click.click2select")
            }
            e.stopPropagation()
        }).bind("dblclick", function (e) {
            var tt = $(e.target);
            var tr = tt.closest("tr.datagrid-row");
            if (!_563(tr)) {
                return
            }
            var _569 = _565(tr);
            var row = opts.finder.getRow(_55a, _569);
            var td = tt.closest("td[field]", tr);
            if (td.length) {
                var _56a = td.attr("field");
                opts.onDblClickCell.call(_55a, _569, _56a, row[_56a], e)
            }
            opts.onDblClickRow.call(_55a, _569, row, e);
            e.stopPropagation()
        }).bind("contextmenu", function (e) {
            var tr = $(e.target).closest("tr.datagrid-row");
            if (!_563(tr)) {
                return
            }
            var _56b = _565(tr);
            var row = opts.finder.getRow(_55a, _56b);
            opts.onRowContextMenu.call(_55a, e, _56b, row);
            e.stopPropagation()
        });
        dc.body2.bind("scroll", function () {
            var b1 = dc.view1.children("div.datagrid-body");
            b1.scrollTop($(this).scrollTop());
            var c1 = dc.body1.children(":first");
            var c2 = dc.body2.children(":first");
            if (c1.length && c2.length) {
                var top1 = c1.offset().top;
                var top2 = c2.offset().top;
                if (top1 != top2) {
                    b1.scrollTop(b1.scrollTop() + top1 - top2)
                }
            }
            dc.view2.children("div.datagrid-header,div.datagrid-footer")._scrollLeft($(this)._scrollLeft());
            dc.body2.children("table.datagrid-btable-frozen").css("left", -$(this)._scrollLeft())
        });

        function _565(tr) {
            if (tr.attr("datagrid-row-index")) {
                return parseInt(tr.attr("datagrid-row-index"))
            } else {
                return tr.attr("node-id")
            }
        }
        function _563(tr) {
            return tr.length && tr.parent().length
        }
    }
    function _56c(_56d, _56e) {
        var _56f = $.data(_56d, "datagrid");
        var opts = _56f.options;
        _56e = _56e || {};
        var _570 = {
            sortName: opts.sortName,
            sortOrder: opts.sortOrder
        };
        if (typeof _56e == "object") {
            $.extend(_570, _56e)
        }
        var _571 = [];
        var _572 = [];
        if (_570.sortName) {
            _571 = _570.sortName.split(",");
            _572 = _570.sortOrder.split(",")
        }
        if (typeof _56e == "string") {
            var _573 = _56e;
            var col = _558(_56d, _573);
            if (!col.sortable || _56f.resizing) {
                return
            }
            var _574 = col.order || "asc";
            var pos = _502(_571, _573);
            if (pos >= 0) {
                var _575 = _572[pos] == "asc" ? "desc" : "asc";
                if (opts.multiSort && _575 == _574) {
                    _571.splice(pos, 1);
                    _572.splice(pos, 1)
                } else {
                    _572[pos] = _575
                }
            } else {
                if (opts.multiSort) {
                    _571.push(_573);
                    _572.push(_574)
                } else {
                    _571 = [_573];
                    _572 = [_574]
                }
            }
            _570.sortName = _571.join(",");
            _570.sortOrder = _572.join(",")
        }
        if (opts.onBeforeSortColumn.call(_56d, _570.sortName, _570.sortOrder) == false) {
            return
        }
        $.extend(opts, _570);
        var dc = _56f.dc;
        var _576 = dc.header1.add(dc.header2);
        _576.find("div.datagrid-cell").removeClass("datagrid-sort-asc datagrid-sort-desc");
        for (var i = 0; i < _571.length; i++) {
            var col = _558(_56d, _571[i]);
            _576.find("div." + col.cellClass).addClass("datagrid-sort-" + _572[i])
        }
        if (opts.remoteSort) {
            _577(_56d)
        } else {
            _578(_56d, $(_56d).datagrid("getData"))
        }
        opts.onSortColumn.call(_56d, opts.sortName, opts.sortOrder)
    }
    function _579(_57a, field) {
        field = false;
        var _57b = $.data(_57a, "datagrid");
        var opts = _57b.options;
        var dc = _57b.dc;
        dc.body2.css("overflow-x", "");
        if (!opts.fitColumns) {
            return
        }
        if (!_57b.leftWidth) {
            _57b.leftWidth = 0
        }
        var _57c = dc.view2.children("div.datagrid-header");
        var _57d = 0;
        var _57e;
        var _57f = _557(_57a, false);
        var hLength = _57f.length % 2 == 0 ? _57f.length / 2 : _57f.length / 2 + 1;
        for (var i = 0; i < _57f.length; i++) {
            var col = _558(_57a, _57f[i]);
            if (_580(col)) {
                _57d += col.width;
                if (i <= hLength - 1) {
                    _57e = col
                }
            }
        }
        if (!_57d) {
            return
        }
        if (_57e) {
            _581(_57e, -_57b.leftWidth)
        }
        var _582 = _57c.children("div.datagrid-header-inner").show();
        var _583 = _57c.width() - _57c.find("table").width() - opts.scrollbarSize + _57b.leftWidth;
        var rate = 0;
        if (field) {
            var col = _558(_57a, field);
            rate = -col.width / _57d
        } else {
            rate = _583 / _57d
        }
        var rate = _583 / _57d;
        if (!opts.showHeader) {
            _582.hide()
        }
        for (var i = 0; i < _57f.length; i++) {
            var col = _558(_57a, _57f[i]);
            if (_580(col) && col.field !== field) {
                var _584 = parseInt(col.width * rate);
                _581(col, _584);
                _583 -= _584
            }
        }
        _57b.leftWidth = _583;
        if (_57e) {
            _581(_57e, _57b.leftWidth)
        }
        _542(_57a);
        if (_57c.width() >= _57c.find("table").width()) {
            dc.body2.css("overflow-x", "hidden")
        }
        function _581(col, _585) {
            if (col.width + _585 > 0) {
                col.width += _585;
                col.boxWidth += _585
            }
        }
        function _580(col) {
            if (!col.hidden && !col.checkbox && !col.auto && !col.fixed) {
                return true
            }
        }
    }
    function _586(_587, _588) {
        var _589 = $.data(_587, "datagrid");
        var opts = _589.options;
        var dc = _589.dc;
        var tmp = $('<div class="datagrid-cell" style="position:absolute;left:-9999px"></div>').appendTo("body");
        if (_588) {
            _515(_588);
            if (opts.fitColumns) {
                _519(_587);
                _579(_587)
            }
        } else {
            var _58a = false;
            var _58b = _557(_587, true).concat(_557(_587, false));
            for (var i = 0; i < _58b.length; i++) {
                var _588 = _58b[i];
                var col = _558(_587, _588);
                if (col.auto) {
                    _515(_588);
                    _58a = true
                }
            }
            if (_58a && opts.fitColumns) {
                _519(_587);
                _579(_587)
            }
        }
        tmp.remove();

        function _515(_58c) {
            var _58d = dc.view.find('div.datagrid-header td[field="' + _58c + '"] div.datagrid-cell');
            _58d.css("width", "");
            var col = $(_587).datagrid("getColumnOption", _58c);
            col.width = undefined;
            col.boxWidth = undefined;
            col.auto = true;
            $(_587).datagrid("fixColumnSize", _58c);
            var _58e = Math.max(_58f("header"), _58f("allbody"), _58f("allfooter"));
            _58d._outerWidth(_58e);
            col.width = _58e;
            col.boxWidth = parseInt(_58d[0].style.width);
            _58d.css("width", "");
            $(_587).datagrid("fixColumnSize", _58c);
            opts.onResizeColumn.call(_587, _58c, col.width);

            function _58f(type) {
                var _590 = 0;
                if (type == "header") {
                    _590 = _591(_58d)
                } else {
                    opts.finder.getTr(_587, 0, type).find('td[field="' + _58c + '"] div.datagrid-cell').each(function () {
                        var w = _591($(this));
                        if (_590 < w) {
                            _590 = w
                        }
                    })
                }
                return _590;

                function _591(cell) {
                    return cell.is(":visible") ? cell._outerWidth() : tmp.html(cell.html())._outerWidth()
                }
            }
        }
    }
    function _542(_592, _593) {
        var _594 = $.data(_592, "datagrid");
        var opts = _594.options;
        var dc = _594.dc;
        var _595 = dc.view.find("table.datagrid-btable,table.datagrid-ftable");
        _595.css("table-layout", "fixed");
        if (_593) {
            fix(_593)
        } else {
            var ff = _557(_592, true).concat(_557(_592, false));
            for (var i = 0; i < ff.length; i++) {
                fix(ff[i])
            }
        }
        _595.css("table-layout", "auto");
        _596(_592);
        setTimeout(function () {
            _526(_592);
            _59b(_592)
        }, 0);

        function fix(_597) {
            var col = _558(_592, _597);
            if (!col.checkbox) {
                _594.ss.set("." + col.cellClass, col.boxWidth ? col.boxWidth + "px" : "auto")
            }
        }
    }
    function _596(_598) {
        var dc = $.data(_598, "datagrid").dc;
        dc.body1.add(dc.body2).find("td.datagrid-td-merged").each(function () {
            var td = $(this);
            var _599 = td.attr("colspan") || 1;
            var _59a = _558(_598, td.attr("field")).width;
            for (var i = 1; i < _599; i++) {
                td = td.next();
                _59a += _558(_598, td.attr("field")).width + 1
            }
            $(this).children("div.datagrid-cell")._outerWidth(_59a)
        })
    }
    function _59b(_59c) {
        var dc = $.data(_59c, "datagrid").dc;
        dc.view.find("div.datagrid-editable").each(function () {
            var cell = $(this);
            var _59d = cell.parent().attr("field");
            var col = $(_59c).datagrid("getColumnOption", _59d);
            cell._outerWidth(col.width);
            var ed = $.data(this, "datagrid.editor");
            if (ed.actions.resize) {
                ed.actions.resize(ed.target, cell.width())
            }
        })
    }
    function _558(_59e, _59f) {
        function find(_5a0) {
            if (_5a0) {
                for (var i = 0; i < _5a0.length; i++) {
                    var cc = _5a0[i];
                    for (var j = 0; j < cc.length; j++) {
                        var c = cc[j];
                        if (c.field == _59f) {
                            return c
                        }
                    }
                }
            }
            return null
        }
        var opts = $.data(_59e, "datagrid").options;
        var col = find(opts.columns);
        if (!col) {
            col = find(opts.frozenColumns)
        }
        return col
    }
    function _557(_5a1, _5a2) {
        var opts = $.data(_5a1, "datagrid").options;
        var _5a3 = (_5a2 == true) ? (opts.frozenColumns || [
            []
        ]) : opts.columns;
        if (_5a3.length == 0) {
            return []
        }
        var _5a4 = [];

        function _5a5(_5a6) {
            var c = 0;
            var i = 0;
            while (true) {
                if (_5a4[i] == undefined) {
                    if (c == _5a6) {
                        return i
                    }
                    c++
                }
                i++
            }
        }
        function _5a7(r) {
            var ff = [];
            var c = 0;
            for (var i = 0; i < _5a3[r].length; i++) {
                var col = _5a3[r][i];
                if (col.field) {
                    ff.push([c, col.field])
                }
                c += parseInt(col.colspan || "1")
            }
            for (var i = 0; i < ff.length; i++) {
                ff[i][0] = _5a5(ff[i][0])
            }
            for (var i = 0; i < ff.length; i++) {
                var f = ff[i];
                _5a4[f[0]] = f[1]
            }
        }
        for (var i = 0; i < _5a3.length; i++) {
            _5a7(i)
        }
        return _5a4
    }
    function _578(_5a8, data) {
        var _5a9 = $.data(_5a8, "datagrid");
        var opts = _5a9.options;
        var dc = _5a9.dc;
        data = opts.loadFilter.call(_5a8, data);
        data.total = parseInt(data.total);
        _5a9.data = data;
        if (data.footer) {
            _5a9.footer = data.footer
        }
        if (!opts.remoteSort && opts.sortName) {
            var _5aa = opts.sortName.split(",");
            var _5ab = opts.sortOrder.split(",");
            data.rows.sort(function (r1, r2) {
                var r = 0;
                for (var i = 0; i < _5aa.length; i++) {
                    var sn = _5aa[i];
                    var so = _5ab[i];
                    var col = _558(_5a8, sn);
                    var _5ac = col.sorter ||
                        function (a, b) {
                            return a == b ? 0 : (a > b ? 1 : -1)
                        };
                    r = _5ac(r1[sn], r2[sn]) * (so == "asc" ? 1 : -1);
                    if (r != 0) {
                        return r
                    }
                }
                return r
            })
        }
        if (opts.view.onBeforeRender) {
            opts.view.onBeforeRender.call(opts.view, _5a8, data.rows)
        }
        opts.view.render.call(opts.view, _5a8, dc.body2, false);
        opts.view.render.call(opts.view, _5a8, dc.body1, true);
        if (opts.showFooter) {
            opts.view.renderFooter.call(opts.view, _5a8, dc.footer2, false);
            opts.view.renderFooter.call(opts.view, _5a8, dc.footer1, true)
        }
        if (opts.view.onAfterRender) {
            opts.view.onAfterRender.call(opts.view, _5a8)
        }
        _5a9.ss.clean();
        opts.onLoadSuccess.call(_5a8, data);
        var _5ad = $(_5a8).datagrid("getPager");
        if (_5ad.length) {
            var _5ae = _5ad.pagination("options");
            if (_5ae.total != data.total) {
                _5ad.pagination("refresh", {
                    total: data.total
                });
                if (opts.pageNumber != _5ae.pageNumber) {
                    opts.pageNumber = _5ae.pageNumber;
                    _577(_5a8)
                }
            }
        }
        _526(_5a8);
        new mSelect(document, true).init();
        dc.body2.triggerHandler("scroll");
        dc.body2.scrollTop(0);
        _5af(_5a8);
        $(_5a8).datagrid("autoSizeColumn")
    }
    function _5af(_5b0) {
        var _5b1 = $.data(_5b0, "datagrid");
        var opts = _5b1.options;
        if (opts.idField) {
            var _5b2 = $.data(_5b0, "treegrid") ? true : false;
            var _5b3 = opts.onSelect;
            var _5b4 = opts.onCheck;
            opts.onSelect = opts.onCheck = function () { };
            var rows = opts.finder.getRows(_5b0);
            for (var i = 0; i < rows.length; i++) {
                var row = rows[i];
                var _5b5 = _5b2 ? row[opts.idField] : i;
                if (_5b6(_5b1.selectedRows, row)) {
                    _5cb(_5b0, _5b5, true)
                }
                if (_5b6(_5b1.checkedRows, row)) {
                    _5d2(_5b0, _5b5, true)
                }
            }
            opts.onSelect = _5b3;
            opts.onCheck = _5b4
        }
        function _5b6(a, r) {
            for (var i = 0; i < a.length; i++) {
                if (a[i][opts.idField] == r[opts.idField]) {
                    a[i] = r;
                    return true
                }
            }
            return false
        }
    }
    function _5b7(_5b8, row) {
        var _5b9 = $.data(_5b8, "datagrid");
        var opts = _5b9.options;
        var rows = _5b9.data.rows;
        if (typeof row == "object") {
            return _502(rows, row)
        } else {
            for (var i = 0; i < rows.length; i++) {
                if (rows[i][opts.idField] == row) {
                    return i
                }
            }
            return -1
        }
    }
    function _5ba(_5bb) {
        var _5bc = $.data(_5bb, "datagrid");
        var opts = _5bc.options;
        var data = _5bc.data;
        if (opts.idField) {
            return _5bc.selectedRows
        } else {
            var rows = [];
            opts.finder.getTr(_5bb, "", "selected", 2).each(function () {
                rows.push(opts.finder.getRow(_5bb, $(this)))
            });
            return rows
        }
    }
    function _5bd(_5be) {
        var _5bf = $.data(_5be, "datagrid");
        var opts = _5bf.options;
        if (opts.idField) {
            return _5bf.checkedRows
        } else {
            var rows = [];
            opts.finder.getTr(_5be, "", "checked", 2).each(function () {
                rows.push(opts.finder.getRow(_5be, $(this)))
            });
            return rows
        }
    }
    function _5c0(_5c1, _5c2) {
        var _5c3 = $.data(_5c1, "datagrid");
        var dc = _5c3.dc;
        var opts = _5c3.options;
        var tr = opts.finder.getTr(_5c1, _5c2);
        if (tr.length) {
            if (tr.closest("table").hasClass("datagrid-btable-frozen")) {
                return
            }
            var _5c4 = dc.view2.children("div.datagrid-header")._outerHeight();
            var _5c5 = dc.body2;
            var _5c6 = _5c5.outerHeight(true) - _5c5.outerHeight();
            var top = tr.position().top - _5c4 - _5c6;
            if (top < 0) {
                _5c5.scrollTop(_5c5.scrollTop() + top)
            } else {
                if (top + tr._outerHeight() > _5c5.height() - 18) {
                    _5c5.scrollTop(_5c5.scrollTop() + top + tr._outerHeight() - _5c5.height() + 18)
                }
            }
        }
    }
    function _5c7(_5c8, _5c9) {
        var _5ca = $.data(_5c8, "datagrid");
        var opts = _5ca.options;
        opts.noSelectClass !== true && opts.finder.getTr(_5c8, _5ca.highlightIndex).removeClass("datagrid-row-over");
        opts.noSelectClass !== true && opts.finder.getTr(_5c8, _5c9).addClass("datagrid-row-over");
        _5ca.highlightIndex = _5c9
    }
    function _5cb(_5cc, _5cd, _5ce) {
        var _5cf = $.data(_5cc, "datagrid");
        var dc = _5cf.dc;
        var opts = _5cf.options;
        var _5d0 = _5cf.selectedRows;
        if (opts.singleSelect) {
            _5d1(_5cc);
            _5d0.splice(0, _5d0.length)
        }
        if (!_5ce && opts.checkOnSelect) {
            _5d2(_5cc, _5cd, true)
        }
        var row = opts.finder.getRow(_5cc, _5cd);
        if (opts.idField) {
            _505(_5d0, opts.idField, row)
        }
        opts.noSelectClass !== true && opts.finder.getTr(_5cc, _5cd).addClass("datagrid-row-selected");
        opts.onSelect.call(_5cc, _5cd, row);
        _5c0(_5cc, _5cd)
    }
    function _5d3(_5d4, _5d5, _5d6) {
        var _5d7 = $.data(_5d4, "datagrid");
        var dc = _5d7.dc;
        var opts = _5d7.options;
        var _5d8 = $.data(_5d4, "datagrid").selectedRows;
        if (!_5d6 && opts.checkOnSelect) {
            _5d9(_5d4, _5d5, true)
        }
        opts.finder.getTr(_5d4, _5d5).removeClass("datagrid-row-selected");
        var row = opts.finder.getRow(_5d4, _5d5);
        if (opts.idField) {
            _503(_5d8, opts.idField, row[opts.idField])
        }
        opts.onUnselect.call(_5d4, _5d5, row)
    }
    function _5da(_5db, _5dc) {
        var _5dd = $.data(_5db, "datagrid");
        var opts = _5dd.options;
        var rows = opts.finder.getRows(_5db);
        var _5de = $.data(_5db, "datagrid").selectedRows;
        if (!_5dc && opts.checkOnSelect) {
            _5df(_5db, true)
        }
        opts.finder.getTr(_5db, "", "allbody").addClass("datagrid-row-selected");
        if (opts.idField) {
            for (var _5e0 = 0; _5e0 < rows.length; _5e0++) {
                _505(_5de, opts.idField, rows[_5e0])
            }
        }
        opts.onSelectAll.call(_5db, rows)
    }
    function _5d1(_5e1, _5e2) {
        var _5e3 = $.data(_5e1, "datagrid");
        var opts = _5e3.options;
        var rows = opts.finder.getRows(_5e1);
        var _5e4 = $.data(_5e1, "datagrid").selectedRows;
        if (!_5e2 && opts.checkOnSelect) {
            _5e5(_5e1, true)
        }
        opts.finder.getTr(_5e1, "", "selected").removeClass("datagrid-row-selected");
        if (opts.idField) {
            for (var _5e6 = 0; _5e6 < rows.length; _5e6++) {
                _503(_5e4, opts.idField, rows[_5e6][opts.idField])
            }
        }
        opts.onUnselectAll.call(_5e1, rows)
    }
    function _5d2(_5e7, _5e8, _5e9) {
        var _5ea = $.data(_5e7, "datagrid");
        var opts = _5ea.options;
        if (!_5e9 && opts.selectOnCheck) {
            _5cb(_5e7, _5e8, true)
        }
        var tr = opts.finder.getTr(_5e7, _5e8).addClass("datagrid-row-checked");
        var ck = tr.find("div.datagrid-cell-check input[type=checkbox]");
        ck._propAttr("checked", true);
        tr = opts.finder.getTr(_5e7, "", "checked", 2);
        if (tr.length == opts.finder.getRows(_5e7).length) {
            var dc = _5ea.dc;
            var _5eb = dc.header1.add(dc.header2);
            _5eb.find("input[type=checkbox]")._propAttr("checked", true)
        }
        var row = opts.finder.getRow(_5e7, _5e8);
        if (opts.idField) {
            _505(_5ea.checkedRows, opts.idField, row)
        }
        opts.onCheck.call(_5e7, _5e8, row)
    }
    function _5d9(_5ec, _5ed, _5ee) {
        var _5ef = $.data(_5ec, "datagrid");
        var opts = _5ef.options;
        if (!_5ee && opts.selectOnCheck) {
            _5d3(_5ec, _5ed, true)
        }
        var tr = opts.finder.getTr(_5ec, _5ed).removeClass("datagrid-row-checked");
        var ck = tr.find("div.datagrid-cell-check input[type=checkbox]");
        ck._propAttr("checked", false);
        var dc = _5ef.dc;
        var _5f0 = dc.header1.add(dc.header2);
        _5f0.find("input[type=checkbox]")._propAttr("checked", false);
        var row = opts.finder.getRow(_5ec, _5ed);
        if (opts.idField) {
            _503(_5ef.checkedRows, opts.idField, row[opts.idField])
        }
        opts.onUncheck.call(_5ec, _5ed, row)
    }
    function _5df(_5f1, _5f2) {
        var _5f3 = $.data(_5f1, "datagrid");
        var opts = _5f3.options;
        var rows = opts.finder.getRows(_5f1);
        if (!_5f2 && opts.selectOnCheck) {
            _5da(_5f1, true)
        }
        var dc = _5f3.dc;
        var hck = dc.header1.add(dc.header2).find("input[type=checkbox]");
        var bck = opts.finder.getTr(_5f1, "", "allbody").addClass("datagrid-row-checked").find("div.datagrid-cell-check input[type=checkbox]");
        hck.add(bck)._propAttr("checked", true);
        if (opts.idField) {
            for (var i = 0; i < rows.length; i++) {
                _505(_5f3.checkedRows, opts.idField, rows[i])
            }
        }
        opts.onCheckAll.call(_5f1, rows)
    }
    function _5e5(_5f4, _5f5) {
        var _5f6 = $.data(_5f4, "datagrid");
        var opts = _5f6.options;
        var rows = opts.finder.getRows(_5f4);
        if (!_5f5 && opts.selectOnCheck) {
            _5d1(_5f4, true)
        }
        var dc = _5f6.dc;
        var hck = dc.header1.add(dc.header2).find("input[type=checkbox]");
        var bck = opts.finder.getTr(_5f4, "", "checked").removeClass("datagrid-row-checked").find("div.datagrid-cell-check input[type=checkbox]");
        hck.add(bck)._propAttr("checked", false);
        if (opts.idField) {
            for (var i = 0; i < rows.length; i++) {
                _503(_5f6.checkedRows, opts.idField, rows[i][opts.idField])
            }
        }
        opts.onUncheckAll.call(_5f4, rows)
    }
    function _5f7(_5f8, _5f9) {
        var opts = $.data(_5f8, "datagrid").options;
        var tr = opts.finder.getTr(_5f8, _5f9);
        var row = opts.finder.getRow(_5f8, _5f9);
        if (tr.hasClass("datagrid-row-editing")) {
            return
        }
        if (opts.onBeforeEdit.call(_5f8, _5f9, row) == false) {
            return
        }
        tr.addClass("datagrid-row-editing");
        _5fa(_5f8, _5f9);
        _59b(_5f8);
        tr.find("div.datagrid-editable").each(function () {
            var _5fb = $(this).parent().attr("field");
            var ed = $.data(this, "datagrid.editor");
            ed.actions.setValue(ed.target, row[_5fb]);
            opts.showText && row[_5fb + "Name"] && ed.actions.setText && ed.actions.setText(ed.target, row[_5fb + "Name"])
        });
        _5fc(_5f8, _5f9);
        opts.onBeginEdit.call(_5f8, _5f9, row);
        mSelect && (new mSelect(document).init())
    }
    function _endEdit(_5fe, _5ff, _600) {
        var opts = $.data(_5fe, "datagrid").options;
        var _601 = $.data(_5fe, "datagrid").updatedRows;
        var _602 = $.data(_5fe, "datagrid").insertedRows;
        var tr = opts.finder.getTr(_5fe, _5ff);
        var row = opts.finder.getRow(_5fe, _5ff);
        if (!tr.hasClass("datagrid-row-editing")) {
            return
        }
        if (!_600) {
            if (!_5fc(_5fe, _5ff)) {
                return
            }
            var _603 = false;
            var _604 = {};
            tr.find("div.datagrid-editable").each(function () {
                var _605 = $(this).parent().attr("field");
                var col = $(_5fe).datagrid("getColumnOption", _605);
                var ed = $.data(this, "datagrid.editor");
                var _606 = ed.actions.getValue(ed.target);
                if (row[_605] != _606) {
                    row[_605] = _606;
                    _603 = true;
                    _604[_605] = _606;
                    if (col.textField && ed.actions.getText && $.isFunction(ed.actions.getText)) {
                        row[col.textField] = ed.actions.getText(ed.target);
                        _604[col.textField] = ed.actions.getText(ed.target)
                    } else {
                        row[col.textField] = undefined;
                        _604[col.textField] = undefined
                    }
                }
            });
            if (_603) {
                if (_502(_602, row) == -1) {
                    if (_502(_601, row) == -1) {
                        _601.push(row)
                    }
                }
            }
            opts.onEndEdit.call(_5fe, _5ff, row, _604)
        }
        tr.removeClass("datagrid-row-editing");
        _607(_5fe, _5ff);
        var hasMselect = tr.hasClass("m-select");
        $(_5fe).datagrid("refreshRow", _5ff);
        if (hasMselect) {
            tr.addClass("m-select")
        }
        if (!_600) {
            opts.onAfterEdit.call(_5fe, _5ff, row, _604)
        } else {
            opts.onCancelEdit.call(_5fe, _5ff, row)
        }
    }
    function _608(_609, _60a) {
        var opts = $.data(_609, "datagrid").options;
        var tr = opts.finder.getTr(_609, _60a);
        var _60b = [];
        tr.children("td").each(function () {
            var cell = $(this).find("div.datagrid-editable");
            if (cell.length) {
                var ed = $.data(cell[0], "datagrid.editor");
                _60b.push(ed)
            }
        });
        return _60b
    }
    function _60c(_60d, _60e) {
        var _60f = _608(_60d, _60e.index != undefined ? _60e.index : _60e.id);
        for (var i = 0; i < _60f.length; i++) {
            if (_60f[i].field == _60e.field) {
                return _60f[i]
            }
        }
        return null
    }
    function _5fa(_610, _611) {
        var opts = $.data(_610, "datagrid").options;
        var tr = opts.finder.getTr(_610, _611);
        tr.children("td").each(function () {
            var cell = $(this).find("div.datagrid-cell");
            var _612 = $(this).attr("field");
            var col = _558(_610, _612);
            if (col && col.editor) {
                var _613, _614;
                if (typeof col.editor == "string") {
                    _613 = col.editor
                } else {
                    _613 = col.editor.type;
                    _614 = col.editor.options
                }
                var _615 = opts.editors[_613];
                if (_615) {
                    var _616 = cell.html();
                    var _617 = cell._outerWidth();
                    cell.addClass("datagrid-editable");
                    cell._outerWidth(_617);
                    cell.html('<table border="0" cellspacing="0" cellpadding="1"><tr><td></td></tr></table>');
                    cell.children("table").bind("click dblclick contextmenu", function (e) {
                        e.stopPropagation()
                    });
                    $.data(cell[0], "datagrid.editor", {
                        actions: _615,
                        target: _615.init(cell.find("td"), _614),
                        field: _612,
                        type: _613,
                        oldHtml: _616
                    })
                }
            }
        });
        _526(_610, _611, true)
    }
    function _607(_618, _619) {
        var opts = $.data(_618, "datagrid").options;
        var tr = opts.finder.getTr(_618, _619);
        tr.children("td").each(function () {
            var cell = $(this).find("div.datagrid-editable");
            if (cell.length) {
                var ed = $.data(cell[0], "datagrid.editor");
                if (ed.actions.destroy) {
                    ed.actions.destroy(ed.target)
                }
                cell.html(ed.oldHtml);
                $.removeData(cell[0], "datagrid.editor");
                cell.removeClass("datagrid-editable");
                cell.css("width", "")
            }
        })
    }
    function _5fc(_61a, _61b) {
        var tr = $.data(_61a, "datagrid").options.finder.getTr(_61a, _61b);
        if (!tr.hasClass("datagrid-row-editing")) {
            return true
        }
        var vbox = tr.find(".validatebox-text");
        vbox.validatebox("validate");
        vbox.trigger("mouseleave");
        var _61c = tr.find(".validatebox-invalid");
        return _61c.length == 0
    }
    function _61d(_61e, _61f) {
        var _620 = $.data(_61e, "datagrid").insertedRows;
        var _621 = $.data(_61e, "datagrid").deletedRows;
        var _622 = $.data(_61e, "datagrid").updatedRows;
        if (!_61f) {
            var rows = [];
            rows = rows.concat(_620);
            rows = rows.concat(_621);
            rows = rows.concat(_622);
            return rows
        } else {
            if (_61f == "inserted") {
                return _620
            } else {
                if (_61f == "deleted") {
                    return _621
                } else {
                    if (_61f == "updated") {
                        return _622
                    }
                }
            }
        }
        return []
    }
    function _623(_624, _625) {
        var _626 = $.data(_624, "datagrid");
        var opts = _626.options;
        var data = _626.data;
        var _627 = _626.insertedRows;
        var _628 = _626.deletedRows;
        $(_624).datagrid("cancelEdit", _625);
        var row = opts.finder.getRow(_624, _625);
        if (_502(_627, row) >= 0) {
            _503(_627, row)
        } else {
            _628.push(row)
        }
        _503(_626.selectedRows, opts.idField, row[opts.idField]);
        _503(_626.checkedRows, opts.idField, row[opts.idField]);
        opts.view.deleteRow.call(opts.view, _624, _625);
        if (opts.height == "auto") {
            _526(_624)
        }
        $(_624).datagrid("getPager").pagination("refresh", {
            total: data.total
        })
    }
    function _629(_62a, _62b) {
        var data = $.data(_62a, "datagrid").data;
        var view = $.data(_62a, "datagrid").options.view;
        var _62c = $.data(_62a, "datagrid").insertedRows;
        view.insertRow.call(view, _62a, _62b.index, _62b.row);
        _62c.push(_62b.row);
        $(_62a).datagrid("getPager").pagination("refresh", {
            total: data.total
        })
    }
    function _62d(_62e, row) {
        var data = $.data(_62e, "datagrid").data;
        var view = $.data(_62e, "datagrid").options.view;
        var _62f = $.data(_62e, "datagrid").insertedRows;
        view.insertRow.call(view, _62e, null, row);
        _62f.push(row);
        $(_62e).datagrid("getPager").pagination("refresh", {
            total: data.total
        })
    }
    function _630(_631) {
        var _632 = $.data(_631, "datagrid");
        var data = _632.data;
        var rows = data.rows;
        var _633 = [];
        for (var i = 0; i < rows.length; i++) {
            _633.push($.extend({}, rows[i]))
        }
        _632.originalRows = _633;
        _632.updatedRows = [];
        _632.insertedRows = [];
        _632.deletedRows = []
    }
    function _634(_635) {
        var data = $.data(_635, "datagrid").data;
        var ok = true;
        for (var i = 0, len = data.rows.length; i < len; i++) {
            if (_5fc(_635, i)) {
                _endEdit(_635, i, false)
            } else {
                ok = false
            }
        }
        if (ok) {
            _630(_635)
        }
    }
    function _636(_637) {
        var _638 = $.data(_637, "datagrid");
        var opts = _638.options;
        var _639 = _638.originalRows;
        var _63a = _638.insertedRows;
        var _63b = _638.deletedRows;
        var _63c = _638.selectedRows;
        var _63d = _638.checkedRows;
        var data = _638.data;

        function _63e(a) {
            var ids = [];
            for (var i = 0; i < a.length; i++) {
                ids.push(a[i][opts.idField])
            }
            return ids
        }
        function _63f(ids, _640) {
            for (var i = 0; i < ids.length; i++) {
                var _641 = _5b7(_637, ids[i]);
                if (_641 >= 0) {
                    (_640 == "s" ? _5cb : _5d2)(_637, _641, true)
                }
            }
        }
        for (var i = 0; i < data.rows.length; i++) {
            _endEdit(_637, i, true)
        }
        var _642 = _63e(_63c);
        var _643 = _63e(_63d);
        _63c.splice(0, _63c.length);
        _63d.splice(0, _63d.length);
        data.total += _63b.length - _63a.length;
        data.rows = _639;
        _578(_637, data);
        _63f(_642, "s");
        _63f(_643, "c");
        _630(_637)
    }
    function _577(_644, _645) {
        var opts = $.data(_644, "datagrid").options;
        if (_645) {
            opts.queryParams = _645
        }
        var _646 = $.extend({}, opts.queryParams);
        if (opts.pagination) {
            $.extend(_646, {
                page: opts.pageNumber,
                rows: opts.pageSize
            })
        }
        if (opts.sortName) {
            $.extend(_646, {
                sort: opts.sortName,
                order: opts.sortOrder
            })
        }
        if (opts.onBeforeLoad.call(_644, _646) == false) {
            return
        }
        $(_644).datagrid("loading");
        setTimeout(function () {
            _647()
        }, 0);

        function _647() {
            var _648 = opts.loader.call(_644, _646, function (data) {
                setTimeout(function () {
                    $(_644).datagrid("loaded")
                }, 0);
                _578(_644, data);
                setTimeout(function () {
                    _630(_644)
                }, 0)
            }, function () {
                setTimeout(function () {
                    $(_644).datagrid("loaded")
                }, 0);
                opts.onLoadError.apply(_644, arguments)
            });
            if (_648 == false) {
                $(_644).datagrid("loaded")
            }
        }
    }
    function _649(_64a, _64b) {
        var opts = $.data(_64a, "datagrid").options;
        _64b.rowspan = _64b.rowspan || 1;
        _64b.colspan = _64b.colspan || 1;
        if (_64b.rowspan == 1 && _64b.colspan == 1) {
            return
        }
        var tr = opts.finder.getTr(_64a, (_64b.index != undefined ? _64b.index : _64b.id));
        if (!tr.length) {
            return
        }
        var row = opts.finder.getRow(_64a, tr);
        var _64c = row[_64b.field];
        var td = tr.find('td[field="' + _64b.field + '"]');
        td.attr("rowspan", _64b.rowspan).attr("colspan", _64b.colspan);
        td.addClass("datagrid-td-merged");
        for (var i = 1; i < _64b.colspan; i++) {
            td = td.next();
            td.hide();
            row[td.attr("field")] = _64c
        }
        for (var i = 1; i < _64b.rowspan; i++) {
            tr = tr.next();
            if (!tr.length) {
                break
            }
            var row = opts.finder.getRow(_64a, tr);
            var td = tr.find('td[field="' + _64b.field + '"]').hide();
            row[td.attr("field")] = _64c;
            for (var j = 1; j < _64b.colspan; j++) {
                td = td.next();
                td.hide();
                row[td.attr("field")] = _64c
            }
        }
        _596(_64a)
    }
    $.fn.datagrid = function (_64d, _64e) {
        if (typeof _64d == "string") {
            return $.fn.datagrid.methods[_64d](this, _64e)
        }
        var x = function (c) {
            if (c && c.length == 1) {
                for (var i = 0; i < c[0].length; i++) {
                    if (c[0][i].fixwidth == undefined || c[0][i].fixwidth == "") {
                        c[0][i].fixwidth = c[0][i].width
                    }
                }
            }
        };
        _64d = _64d || {};
        return this.each(function () {
            var _64f = $.data(this, "datagrid");
            var opts;
            if (_64f) {
                opts = $.extend(_64f.options, _64d);
                x(opts.columns);
                opts.pageNumber = 1;
                _64f.options = opts
            } else {
                opts = $.extend({}, $.extend({}, $.fn.datagrid.defaults, {
                    queryParams: {}
                }), $.fn.datagrid.parseOptions(this), _64d);
                $(this).css("width", "").css("height", "");
                var _650 = _53a(this, opts.rownumbers);
                if (!opts.columns) {
                    opts.columns = _650.columns
                }
                if (!opts.frozenColumns) {
                    opts.frozenColumns = _650.frozenColumns
                }
                opts.columns = $.extend(true, [], opts.columns);
                opts.frozenColumns = $.extend(true, [], opts.frozenColumns);
                x(opts.columns);
                opts.view = $.extend({}, opts.view);
                opts.pageNumber = 1;
                $.data(this, "datagrid", {
                    options: opts,
                    panel: _650.panel,
                    dc: _650.dc,
                    ss: null,
                    selectedRows: [],
                    checkedRows: [],
                    data: {
                        total: 0,
                        rows: []
                    },
                    originalRows: [],
                    updatedRows: [],
                    insertedRows: [],
                    deletedRows: []
                })
            }
            _545(this);
            _559(this);
            _515(this);
            if (opts.data) {
                _578(this, opts.data);
                _630(this)
            } else {
                var data = $.fn.datagrid.parseData(this);
                if (data.total > 0) {
                    _578(this, data);
                    _630(this)
                }
            }
            _577(this)
        })
    };
    var _651 = {
        text: {
            init: function (_652, _653) {
                var _654 = $('<input type="text" class="datagrid-editable-input">').appendTo(_652);
                return _654
            },
            getValue: function (_655) {
                return $(_655).val()
            },
            setValue: function (_656, _657) {
                $(_656).val(_657)
            },
            resize: function (_658, _659) {
                $(_658)._outerWidth(_659)._outerHeight(34)
            }
        },
        textarea: {
            init: function (_65a, _65b) {
                var _65c = $('<textarea class="datagrid-editable-input"></textarea>').appendTo(_65a);
                return _65c
            },
            getValue: function (_65d) {
                return $(_65d).val()
            },
            setValue: function (_65e, _65f) {
                $(_65e).val(_65f)
            },
            resize: function (_660, _661) {
                $(_660)._outerWidth(_661)
            }
        },
        checkbox: {
            init: function (_662, _663) {
                var _664 = $('<input type="checkbox">').appendTo(_662);
                _664.val(_663.on);
                _664.attr("offval", _663.off);
                return _664
            },
            getValue: function (_665) {
                if ($(_665).is(":checked")) {
                    return $(_665).val()
                } else {
                    return $(_665).attr("offval")
                }
            },
            setValue: function (_666, _667) {
                var _668 = false;
                if ($(_666).val() == _667) {
                    _668 = true
                }
                $(_666)._propAttr("checked", _668)
            }
        },
        numberbox: {
            init: function (_669, _66a) {
                var _66b = $('<input type="text" class="datagrid-editable-input">').appendTo(_669);
                _66b.numberbox(_66a);
                return _66b
            },
            destroy: function (_66c) {
                $(_66c).numberbox("destroy")
            },
            getValue: function (_66d) {
                $(_66d).blur();
                return $(_66d).numberbox("getValue")
            },
            setValue: function (_66e, _66f) {
                $(_66e).numberbox("setValue", _66f)
            },
            resize: function (_670, _671) {
                $(_670)._outerWidth(_671)._outerHeight(34)
            }
        },
        validatebox: {
            init: function (_672, _673) {
                var _674 = $('<input type="text" class="datagrid-editable-input">').appendTo(_672);
                _674.validatebox(_673);
                return _674
            },
            destroy: function (_675) {
                $(_675).validatebox("destroy")
            },
            getValue: function (_676) {
                return $(_676).val()
            },
            setValue: function (_677, _678) {
                $(_677).val(_678)
            },
            resize: function (_679, _67a) {
                $(_679)._outerWidth(_67a)._outerHeight(34)
            }
        },
        datebox: {
            init: function (_67b, _67c) {
                var _67d = $('<input type="text">').appendTo(_67b);
                _67d.datebox(_67c);
                return _67d
            },
            destroy: function (_67e) {
                $(_67e).datebox("destroy")
            },
            getValue: function (_67f) {
                return $(_67f).datebox("getValue")
            },
            setValue: function (_680, _681) {
                $(_680).datebox("setValue", _681)
            },
            resize: function (_682, _683) {
                $(_682).datebox("resize", _683)
            }
        },
        combobox: {
            init: function (_684, _685) {
                var _686 = $('<input type="text">').appendTo(_684);
                _686.combobox(_685 || {});
                return _686
            },
            destroy: function (_687) {
                $(_687).combobox("destroy")
            },
            getValue: function (_688) {
                var opts = $(_688).combobox("options");
                if (opts.multiple) {
                    return $(_688).combobox("getValues").join(opts.separator)
                } else {
                    return $(_688).combobox("getValue")
                }
            },
            getText: function (_688) {
                return $(_688).combobox("getText")
            },
            setValue: function (_689, _68a) {
                var opts = $(_689).combobox("options");
                if (opts.multiple) {
                    if (_68a) {
                        $(_689).combobox("setValues", _68a.split(opts.separator))
                    } else {
                        $(_689).combobox("clear")
                    }
                } else {
                    $(_689).combobox("setValue", _68a)
                }
            },
            resize: function (_68b, _68c) {
                $(_68b).combobox("resize", _68c)
            }
        },
        combotree: {
            init: function (_68d, _68e) {
                var _68f = $('<input type="text">').appendTo(_68d);
                _68f.combotree(_68e);
                return _68f
            },
            destroy: function (_690) {
                $(_690).combotree("destroy")
            },
            getValue: function (_691) {
                var opts = $(_691).combotree("options");
                if (opts.multiple) {
                    return $(_691).combotree("getValues").join(opts.separator)
                } else {
                    return $(_691).combotree("getValue")
                }
            },
            setValue: function (_692, _693) {
                var opts = $(_692).combotree("options");
                if (opts.multiple) {
                    if (_693) {
                        $(_692).combotree("setValues", _693.split(opts.separator))
                    } else {
                        $(_692).combotree("clear")
                    }
                } else {
                    $(_692).combotree("setValue", _693)
                }
            },
            resize: function (_694, _695) {
                $(_694).combotree("resize", _695)
            }
        },
        combogrid: {
            init: function (_696, _697) {
                var _698 = $('<input type="text">').appendTo(_696);
                _698.combogrid(_697);
                return _698
            },
            destroy: function (_699) {
                $(_699).combogrid("destroy")
            },
            getValue: function (_69a) {
                var opts = $(_69a).combogrid("options");
                if (opts.multiple) {
                    return $(_69a).combogrid("getValues").join(opts.separator)
                } else {
                    return $(_69a).combogrid("getValue")
                }
            },
            setValue: function (_69b, _69c) {
                var opts = $(_69b).combogrid("options");
                if (opts.multiple) {
                    if (_69c) {
                        $(_69b).combogrid("setValues", _69c.split(opts.separator))
                    } else {
                        $(_69b).combogrid("clear")
                    }
                } else {
                    $(_69b).combogrid("setValue", _69c)
                }
            },
            resize: function (_69d, _69e) {
                $(_69d).combogrid("resize", _69e)
            }
        }
    };
    $.fn.datagrid.methods = {
        options: function (jq) {
            var _69f = $.data(jq[0], "datagrid").options;
            var _6a0 = $.data(jq[0], "datagrid").panel.panel("options");
            var opts = $.extend(_69f, {
                width: _6a0.width,
                height: _6a0.height,
                closed: _6a0.closed,
                collapsed: _6a0.collapsed,
                minimized: _6a0.minimized,
                maximized: _6a0.maximized
            });
            return opts
        },
        setSelectionState: function (jq) {
            return jq.each(function () {
                _5af(this)
            })
        },
        createStyleSheet: function (jq) {
            return _506(jq[0])
        },
        getPanel: function (jq) {
            return $.data(jq[0], "datagrid").panel
        },
        getPager: function (jq) {
            return $.data(jq[0], "datagrid").panel.children("div.datagrid-pager")
        },
        getColumnFields: function (jq, _6a1) {
            return _557(jq[0], _6a1)
        },
        getColumnOption: function (jq, _6a2) {
            return _558(jq[0], _6a2)
        },
        resize: function (jq, _6a3) {
            return jq.each(function () {
                _515(this, _6a3)
            })
        },
        load: function (jq, _6a4) {
            return jq.each(function () {
                var opts = $(this).datagrid("options");
                opts.pageNumber = 1;
                var _6a5 = $(this).datagrid("getPager");
                _6a5.pagination("refresh", {
                    pageNumber: 1
                });
                _577(this, _6a4)
            })
        },
        reload: function (jq, _6a6) {
            return jq.each(function () {
                _577(this, _6a6)
            })
        },
        reloadFooter: function (jq, _6a7) {
            return jq.each(function () {
                var opts = $.data(this, "datagrid").options;
                var dc = $.data(this, "datagrid").dc;
                if (_6a7) {
                    $.data(this, "datagrid").footer = _6a7
                }
                if (opts.showFooter) {
                    opts.view.renderFooter.call(opts.view, this, dc.footer2, false);
                    opts.view.renderFooter.call(opts.view, this, dc.footer1, true);
                    if (opts.view.onAfterRender) {
                        opts.view.onAfterRender.call(opts.view, this)
                    }
                    $(this).datagrid("fixRowHeight")
                }
            })
        },
        loading: function (jq) {
            return jq.each(function () {
                var opts = $.data(this, "datagrid").options;
                $(this).datagrid("getPager").pagination("loading");
                if (opts.loadMsg) {
                    var _6a8 = $(this).datagrid("getPanel");
                    if (!_6a8.children("div.datagrid-mask").length) {
                        $('<div class="datagrid-mask" style="display:block"></div>').appendTo(_6a8);
                        var msg = $('<div class="datagrid-mask-msg" style="display:block;left:50%"></div>').html(opts.loadMsg).appendTo(_6a8);
                        msg._outerHeight(40);
                        msg.css({
                            marginLeft: (-msg.outerWidth() / 2),
                            lineHeight: (msg.height() + "px")
                        })
                    }
                }
            })
        },
        loaded: function (jq) {
            return jq.each(function () {
                $(this).datagrid("getPager").pagination("loaded");
                var _6a9 = $(this).datagrid("getPanel");
                _6a9.children("div.datagrid-mask-msg").remove();
                _6a9.children("div.datagrid-mask").remove()
            })
        },
        fitColumns: function (jq, field) {
            return jq.each(function () {
                _579(this, field)
            })
        },
        fixColumnSize: function (jq, _6aa) {
            return jq.each(function () {
                _542(this, _6aa)
            })
        },
        fixRowHeight: function (jq, _6ab) {
            return jq.each(function () {
                _526(this, _6ab)
            })
        },
        freezeRow: function (jq, _6ac) {
            return jq.each(function () {
                _533(this, _6ac)
            })
        },
        autoSizeColumn: function (jq, _6ad) {
            return jq.each(function () {
                _586(this, _6ad)
            })
        },
        loadData: function (jq, data) {
            return jq.each(function () {
                _578(this, data);
                _630(this)
            })
        },
        getData: function (jq) {
            return $.data(jq[0], "datagrid").data
        },
        getRows: function (jq) {
            return $.data(jq[0], "datagrid").data.rows
        },
        getFooterRows: function (jq) {
            return $.data(jq[0], "datagrid").footer
        },
        getRowIndex: function (jq, id) {
            return _5b7(jq[0], id)
        },
        getChecked: function (jq) {
            return _5bd(jq[0])
        },
        getSelected: function (jq) {
            var rows = _5ba(jq[0]);
            return rows.length > 0 ? rows[0] : null
        },
        getSelections: function (jq) {
            return _5ba(jq[0])
        },
        clearSelections: function (jq) {
            return jq.each(function () {
                var _6ae = $.data(this, "datagrid");
                var _6af = _6ae.selectedRows;
                var _6b0 = _6ae.checkedRows;
                _6af.splice(0, _6af.length);
                _5d1(this);
                if (_6ae.options.checkOnSelect) {
                    _6b0.splice(0, _6b0.length)
                }
            })
        },
        clearChecked: function (jq) {
            return jq.each(function () {
                var _6b1 = $.data(this, "datagrid");
                var _6b2 = _6b1.selectedRows;
                var _6b3 = _6b1.checkedRows;
                _6b3.splice(0, _6b3.length);
                _5e5(this);
                if (_6b1.options.selectOnCheck) {
                    _6b2.splice(0, _6b2.length)
                }
            })
        },
        scrollTo: function (jq, _6b4) {
            return jq.each(function () {
                _5c0(this, _6b4)
            })
        },
        highlightRow: function (jq, _6b5) {
            return jq.each(function () {
                _5c7(this, _6b5);
                _5c0(this, _6b5)
            })
        },
        selectAll: function (jq) {
            return jq.each(function () {
                _5da(this)
            })
        },
        unselectAll: function (jq) {
            return jq.each(function () {
                _5d1(this)
            })
        },
        selectRow: function (jq, _6b6) {
            return jq.each(function () {
                _5cb(this, _6b6)
            })
        },
        selectRecord: function (jq, id) {
            return jq.each(function () {
                var opts = $.data(this, "datagrid").options;
                if (opts.idField) {
                    var _6b7 = _5b7(this, id);
                    if (_6b7 >= 0) {
                        $(this).datagrid("selectRow", _6b7)
                    }
                }
            })
        },
        unselectRow: function (jq, _6b8) {
            return jq.each(function () {
                _5d3(this, _6b8)
            })
        },
        checkRow: function (jq, _6b9) {
            return jq.each(function () {
                _5d2(this, _6b9)
            })
        },
        uncheckRow: function (jq, _6ba) {
            return jq.each(function () {
                _5d9(this, _6ba)
            })
        },
        checkAll: function (jq) {
            return jq.each(function () {
                _5df(this)
            })
        },
        uncheckAll: function (jq) {
            return jq.each(function () {
                _5e5(this)
            })
        },
        beginEdit: function (jq, _6bb) {
            return jq.each(function () {
                _5f7(this, _6bb)
            })
        },
        endEdit: function (jq, _6bc) {
            return jq.each(function () {
                _endEdit(this, _6bc, false)
            })
        },
        cancelEdit: function (jq, _6bd) {
            return jq.each(function () {
                _endEdit(this, _6bd, true)
            })
        },
        getEditors: function (jq, _6be) {
            return _608(jq[0], _6be)
        },
        getEditor: function (jq, _6bf) {
            return _60c(jq[0], _6bf)
        },
        refreshRow: function (jq, _6c0) {
            return jq.each(function () {
                var opts = $.data(this, "datagrid").options;
                opts.view.refreshRow.call(opts.view, this, _6c0)
            })
        },
        validateRow: function (jq, _6c1) {
            return _5fc(jq[0], _6c1)
        },
        updateRow: function (jq, _6c2) {
            return jq.each(function () {
                var opts = $.data(this, "datagrid").options;
                opts.view.updateRow.call(opts.view, this, _6c2.index, _6c2.row)
            })
        },
        appendRow: function (jq, row) {
            return jq.each(function () {
                _62d(this, row)
            })
        },
        insertRow: function (jq, _6c3) {
            return jq.each(function () {
                _629(this, _6c3)
            })
        },
        deleteRow: function (jq, _6c4) {
            return jq.each(function () {
                _623(this, _6c4)
            })
        },
        getChanges: function (jq, _6c5) {
            return _61d(jq[0], _6c5)
        },
        acceptChanges: function (jq) {
            return jq.each(function () {
                _634(this)
            })
        },
        rejectChanges: function (jq) {
            return jq.each(function () {
                _636(this)
            })
        },
        mergeCells: function (jq, _6c6) {
            return jq.each(function () {
                _649(this, _6c6)
            })
        },
        showColumn: function (jq, _6c7) {
            return jq.each(function () {
                var _6c8 = $(this).datagrid("getPanel");
                _6c8.find('td[field="' + _6c7 + '"]').show();
                $(this).datagrid("getColumnOption", _6c7).hidden = false;
                $(this).datagrid("fitColumns", _6c7)
            })
        },
        hideColumn: function (jq, _6c9) {
            return jq.each(function () {
                var _6ca = $(this).datagrid("getPanel");
                _6ca.find('td[field="' + _6c9 + '"]').hide();
                $(this).datagrid("getColumnOption", _6c9).hidden = true;
                $(this).datagrid("fitColumns")
            })
        },
        sort: function (jq, _6cb) {
            return jq.each(function () {
                _56c(this, _6cb)
            })
        }
    };
    $.fn.datagrid.parseOptions = function (_6cc) {
        var t = $(_6cc);
        return $.extend({}, $.fn.panel.parseOptions(_6cc), $.parser.parseOptions(_6cc, ["url", "toolbar", "idField", "sortName", "sortOrder", "pagePosition", "resizeHandle",
            {
                sharedStyleSheet: "boolean",
                fitColumns: "boolean",
                autoRowHeight: "boolean",
                striped: "boolean",
                nowrap: "boolean"
            }, {
                rownumbers: "boolean",
                singleSelect: "boolean",
                ctrlSelect: "boolean",
                checkOnSelect: "boolean",
                selectOnCheck: "boolean"
            }, {
                pagination: "boolean",
                pageSize: "number",
                pageNumber: "number"
            }, {
                multiSort: "boolean",
                remoteSort: "boolean",
                showHeader: "boolean",
                showFooter: "boolean"
            }, {
                scrollbarSize: "number"
            }]), {
                pageList: (t.attr("pageList") ? eval(t.attr("pageList")) : undefined),
                loadMsg: (t.attr("loadMsg") != undefined ? t.attr("loadMsg") : undefined),
                rowStyler: (t.attr("rowStyler") ? eval(t.attr("rowStyler")) : undefined)
            })
    };
    $.fn.datagrid.parseData = function (_6cd) {
        var t = $(_6cd);
        var data = {
            total: 0,
            rows: []
        };
        var _6ce = t.datagrid("getColumnFields", true).concat(t.datagrid("getColumnFields", false));
        t.find("tbody tr").each(function () {
            data.total++;
            var row = {};
            $.extend(row, $.parser.parseOptions(this, ["iconCls", "state"]));
            for (var i = 0; i < _6ce.length; i++) {
                row[_6ce[i]] = $(this).find("td:eq(" + i + ")").html()
            }
            data.rows.push(row)
        });
        return data
    };
    var _6cf = {
        render: function (_6d0, _6d1, _6d2) {
            var _6d3 = $.data(_6d0, "datagrid");
            var opts = _6d3.options;
            var rows = _6d3.data.rows;
            var _6d4 = $(_6d0).datagrid("getColumnFields", _6d2);
            if (_6d2) {
                if (!(opts.rownumbers || (opts.frozenColumns && opts.frozenColumns.length))) {
                    return
                }
            }
            var _6d5 = ['<table class="datagrid-btable" cellspacing="0" cellpadding="0" border="0"><tbody>'];
            for (var i = 0; i < rows.length; i++) {
                var css = opts.rowStyler ? opts.rowStyler.call(_6d0, i, rows[i]) : "";
                var _6d6 = "";
                var _6d7 = "";
                if (typeof css == "string") {
                    _6d7 = css
                } else {
                    if (css) {
                        _6d6 = css["class"] || "";
                        _6d7 = css.style || ""
                    }
                }
                var cls = 'class="datagrid-row ' + (i % 2 && opts.striped ? "datagrid-row-alt " : " ") + _6d6 + '"';
                var _6d8 = _6d7 ? 'style="' + _6d7 + '"' : "";
                var _6d9 = _6d3.rowIdPrefix + "-" + (_6d2 ? 1 : 2) + "-" + i;
                _6d5.push('<tr id="' + _6d9 + '" datagrid-row-index="' + i + '" ' + cls + " " + _6d8 + ">");
                _6d5.push(this.renderRow.call(this, _6d0, _6d4, _6d2, i, rows[i]));
                _6d5.push("</tr>")
            }
            _6d5.push("</tbody></table>");
            $(_6d1).html(_6d5.join(""))
        },
        renderFooter: function (_6da, _6db, _6dc) {
            var opts = $.data(_6da, "datagrid").options;
            var rows = $.data(_6da, "datagrid").footer || [];
            var _6dd = $(_6da).datagrid("getColumnFields", _6dc);
            var _6de = ['<table class="datagrid-ftable" cellspacing="0" cellpadding="0" border="0"><tbody>'];
            for (var i = 0; i < rows.length; i++) {
                _6de.push('<tr class="datagrid-row" datagrid-row-index="' + i + '">');
                _6de.push(this.renderRow.call(this, _6da, _6dd, _6dc, i, rows[i]));
                _6de.push("</tr>")
            }
            _6de.push("</tbody></table>");
            $(_6db).html(_6de.join(""))
        },
        renderRow: function (_datagrid, _columnFields, _6e1, _index, _row) {
            var opts = $.data(_datagrid, "datagrid").options;
            var cc = [];
            if (_6e1 && opts.rownumbers) {
                var _rowIndex = _index + 1;
                if (opts.pagination) {
                    _rowIndex += (opts.pageNumber - 1) * opts.pageSize
                }
                cc.push('<td class="datagrid-td-rownumber"><div class="datagrid-cell-rownumber">' + _rowIndex + "</div></td>")
            }
            for (var i = 0; i < _columnFields.length; i++) {
                var _columnField = _columnFields[i];
                var col = $(_datagrid).datagrid("getColumnOption", _columnField);
                if (col) {
                    var _fieldValue = mText.encode(_row[_columnField]);
                    var _fieldTextValue = mText.encode(_row[col.textField]);
                    var css = col.styler ? (col.styler(_fieldValue, _row, _index) || "") : "";
                    var _6e7 = "";
                    var _6e8 = "";
                    if (typeof css == "string") {
                        _6e8 = css
                    } else {
                        if (css) {
                            _6e7 = css["class"] || "";
                            _6e8 = css.style || ""
                        }
                    }
                    var cls = _6e7 ? 'class="' + _6e7 + '"' : "";
                    var _6e9 = col.hidden ? 'style="display:none;' + _6e8 + '"' : (_6e8 ? 'style="' + _6e8 + '"' : "");
                    cc.push('<td field="' + _columnField + '" ' + cls + " " + _6e9 + ">");
                    var _6e9 = "";
                    if (!col.checkbox) {
                        if (col.align) {
                            _6e9 += "text-align:" + col.align + ";"
                        }
                        if (!opts.nowrap) {
                            _6e9 += "white-space:normal;height:auto;"
                        } else {
                            if (opts.autoRowHeight) {
                                _6e9 += "height:auto;"
                            }
                        }
                    }
                    cc.push('<div style="' + _6e9 + '" ');
                    cc.push(col.checkbox ? 'class="datagrid-cell-check"' : 'class="datagrid-cell ' + col.cellClass + '"');
                    cc.push(">");
                    if (col.checkbox) {
                        cc.push('<input type="checkbox" ' + (_row.checked ? 'checked="checked"' : ""));
                        cc.push(' name="' + _columnField + '" value="' + (_fieldValue != undefined ? _fieldValue : "") + '">')
                    } else {
                        if (col.formatter) {
                            var formatterText = col.formatter(_fieldValue, _row, _index, _columnField);
                            formatterText = (formatterText && formatterText.trim().indexOf("<") == 0) ? formatterText : mText.encode(formatterText);
                            cc.push(formatterText)
                        } else {
                            if (_fieldTextValue != undefined) {
                                cc.push(_fieldTextValue)
                            } else {
                                cc.push(_fieldValue)
                            }
                        }
                    }
                    cc.push("</div>");
                    cc.push("</td>")
                }
            }
            return cc.join("")
        },
        refreshRow: function (_6ea, _6eb) {
            this.updateRow.call(this, _6ea, _6eb, {})
        },
        updateRow: function (_6ec, _6ed, row) {
            var opts = $.data(_6ec, "datagrid").options;
            var rows = $(_6ec).datagrid("getRows");
            $.extend(rows[_6ed], row);
            var css = opts.rowStyler ? opts.rowStyler.call(_6ec, _6ed, rows[_6ed]) : "";
            var _6ee = "";
            var _6ef = "";
            if (typeof css == "string") {
                _6ef = css
            } else {
                if (css) {
                    _6ee = css["class"] || "";
                    _6ef = css.style || ""
                }
            }
            var _6ee = "datagrid-row " + (_6ed % 2 && opts.striped ? "datagrid-row-alt " : " ") + _6ee;

            function _6f0(_6f1) {
                var _6f2 = $(_6ec).datagrid("getColumnFields", _6f1);
                var tr = opts.finder.getTr(_6ec, _6ed, "body", (_6f1 ? 1 : 2));
                var hasMselect = tr.hasClass("m-select");
                var _6f3 = tr.find("div.datagrid-cell-check input[type=checkbox]").is(":checked");
                tr.html(this.renderRow.call(this, _6ec, _6f2, _6f1, _6ed, rows[_6ed]));
                tr.attr("style", _6ef).attr("class", tr.hasClass("datagrid-row-selected") ? _6ee + " datagrid-row-selected" : _6ee);
                if (_6f3) {
                    tr.find("div.datagrid-cell-check input[type=checkbox]")._propAttr("checked", true)
                }
                if (hasMselect) {
                    tr.addClass("m-select")
                }
            }
            _6f0.call(this, true);
            _6f0.call(this, false);
            $(_6ec).datagrid("fixRowHeight", _6ed)
        },
        insertRow: function (_6f4, _6f5, row) {
            var _6f6 = $.data(_6f4, "datagrid");
            var opts = _6f6.options;
            var dc = _6f6.dc;
            var data = _6f6.data;
            if (_6f5 == undefined || _6f5 == null) {
                _6f5 = data.rows.length
            }
            if (_6f5 > data.rows.length) {
                _6f5 = data.rows.length
            }
            function _6f7(_6f8) {
                var _6f9 = _6f8 ? 1 : 2;
                for (var i = data.rows.length - 1; i >= _6f5; i--) {
                    var tr = opts.finder.getTr(_6f4, i, "body", _6f9);
                    tr.attr("datagrid-row-index", i + 1);
                    tr.attr("id", _6f6.rowIdPrefix + "-" + _6f9 + "-" + (i + 1));
                    if (_6f8 && opts.rownumbers) {
                        var _6fa = i + 2;
                        if (opts.pagination) {
                            _6fa += (opts.pageNumber - 1) * opts.pageSize
                        }
                        tr.find("div.datagrid-cell-rownumber").html(_6fa)
                    }
                    if (opts.striped) {
                        tr.removeClass("datagrid-row-alt").addClass((i + 1) % 2 ? "datagrid-row-alt" : "")
                    }
                }
            }
            function _6fb(_6fc) {
                var _6fd = _6fc ? 1 : 2;
                var _6fe = $(_6f4).datagrid("getColumnFields", _6fc);
                var _6ff = _6f6.rowIdPrefix + "-" + _6fd + "-" + _6f5;
                var tr = '<tr id="' + _6ff + '" class="datagrid-row" datagrid-row-index="' + _6f5 + '"></tr>';
                if (_6f5 >= data.rows.length) {
                    if (data.rows.length) {
                        opts.finder.getTr(_6f4, "", "last", _6fd).after(tr)
                    } else {
                        var cc = _6fc ? dc.body1 : dc.body2;
                        cc.html('<table cellspacing="0" cellpadding="0" border="0"><tbody>' + tr + "</tbody></table>")
                    }
                } else {
                    opts.finder.getTr(_6f4, _6f5 + 1, "body", _6fd).before(tr)
                }
            }
            _6f7.call(this, true);
            _6f7.call(this, false);
            _6fb.call(this, true);
            _6fb.call(this, false);
            data.total += 1;
            data.rows.splice(_6f5, 0, row);
            this.refreshRow.call(this, _6f4, _6f5)
        },
        deleteRow: function (_700, _701) {
            var _702 = $.data(_700, "datagrid");
            var opts = _702.options;
            var data = _702.data;

            function _703(_704) {
                var _705 = _704 ? 1 : 2;
                for (var i = _701 + 1; i < data.rows.length; i++) {
                    var tr = opts.finder.getTr(_700, i, "body", _705);
                    tr.attr("datagrid-row-index", i - 1);
                    tr.attr("id", _702.rowIdPrefix + "-" + _705 + "-" + (i - 1));
                    if (_704 && opts.rownumbers) {
                        var _706 = i;
                        if (opts.pagination) {
                            _706 += (opts.pageNumber - 1) * opts.pageSize
                        }
                        tr.find("div.datagrid-cell-rownumber").html(_706)
                    }
                    if (opts.striped) {
                        tr.removeClass("datagrid-row-alt").addClass((i - 1) % 2 ? "datagrid-row-alt" : "")
                    }
                }
            }
            opts.finder.getTr(_700, _701).remove();
            _703.call(this, true);
            _703.call(this, false);
            data.total -= 1;
            data.rows.splice(_701, 1)
        },
        onBeforeRender: function (_707, rows) { },
        onAfterRender: function (_708) {
            var opts = $.data(_708, "datagrid").options;
            if (opts.showFooter) {
                var _709 = $(_708).datagrid("getPanel").find("div.datagrid-footer");
                _709.find("div.datagrid-cell-rownumber,div.datagrid-cell-check").css("visibility", "hidden")
            }
        }
    };
    $.fn.datagrid.defaults = $.extend({}, $.fn.panel.defaults, {
        sharedStyleSheet: false,
        frozenColumns: undefined,
        columns: undefined,
        fitColumns: false,
        resizeHandle: "right",
        autoRowHeight: true,
        toolbar: null,
        striped: false,
        method: "post",
        nowrap: true,
        idField: null,
        url: null,
        data: null,
        loadMsg: "Processing, please wait ...",
        rownumbers: false,
        singleSelect: false,
        ctrlSelect: false,
        selectOnCheck: true,
        checkOnSelect: true,
        pagination: false,
        pagePosition: "bottom",
        pageNumber: 1,
        pageSize: 20,
        pageList: [10, 20, 50, 100, 200],
        queryParams: {},
        sortName: null,
        sortOrder: "asc",
        multiSort: false,
        remoteSort: true,
        showHeader: true,
        showFooter: false,
        scrollbarSize: 18,
        rowStyler: function (_70a, _70b) { },
        loader: function (_70c, _70d, _70e) {
            var opts = $(this).datagrid("options");
            if (!opts.url) {
                return false
            }
            $.ajax({
                type: opts.method,
                url: opts.url,
                data: (typeof _70c == "object") ? $.toJSON(_70c) : _70c,
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    _70d(data.Data)
                },
                error: function () {
                    _70e.apply(this, arguments)
                }
            })
        },
        loadFilter: function (data) {
            if (typeof data.length == "number" && typeof data.splice == "function") {
                return {
                    total: data.length,
                    rows: data
                }
            } else {
                return data
            }
        },
        editors: _651,
        finder: {
            getTr: function (_70f, _710, type, _711) {
                type = type || "body";
                _711 = _711 || 0;
                var _712 = $.data(_70f, "datagrid");
                var dc = _712.dc;
                var opts = _712.options;
                if (_711 == 0) {
                    var tr1 = opts.finder.getTr(_70f, _710, type, 1);
                    var tr2 = opts.finder.getTr(_70f, _710, type, 2);
                    return tr1.add(tr2)
                } else {
                    if (type == "body") {
                        var tr = $("#" + _712.rowIdPrefix + "-" + _711 + "-" + _710);
                        if (!tr.length) {
                            tr = (_711 == 1 ? dc.body1 : dc.body2).find(">table>tbody>tr[datagrid-row-index=" + _710 + "]")
                        }
                        return tr
                    } else {
                        if (type == "footer") {
                            return (_711 == 1 ? dc.footer1 : dc.footer2).find(">table>tbody>tr[datagrid-row-index=" + _710 + "]")
                        } else {
                            if (type == "selected") {
                                return (_711 == 1 ? dc.body1 : dc.body2).find(">table>tbody>tr.datagrid-row-selected")
                            } else {
                                if (type == "highlight") {
                                    return (_711 == 1 ? dc.body1 : dc.body2).find(">table>tbody>tr.datagrid-row-over")
                                } else {
                                    if (type == "checked") {
                                        return (_711 == 1 ? dc.body1 : dc.body2).find(">table>tbody>tr.datagrid-row-checked")
                                    } else {
                                        if (type == "last") {
                                            return (_711 == 1 ? dc.body1 : dc.body2).find(">table>tbody>tr[datagrid-row-index]:last")
                                        } else {
                                            if (type == "allbody") {
                                                return (_711 == 1 ? dc.body1 : dc.body2).find(">table>tbody>tr[datagrid-row-index]")
                                            } else {
                                                if (type == "allfooter") {
                                                    return (_711 == 1 ? dc.footer1 : dc.footer2).find(">table>tbody>tr[datagrid-row-index]")
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            getRow: function (_713, p) {
                var _714 = (typeof p == "object") ? p.attr("datagrid-row-index") : p;
                return $.data(_713, "datagrid").data.rows[parseInt(_714)]
            },
            getRows: function (_715) {
                return $(_715).datagrid("getRows")
            }
        },
        view: _6cf,
        onBeforeLoad: function (_716) { },
        onLoadSuccess: function () { },
        onLoadError: function () { },
        onClickRow: function (_717, _718, e) { },
        onDblClickRow: function (_719, _71a) { },
        onClickCell: function (_71b, _71c, _71d, e) { },
        onDblClickCell: function (_71e, _71f, _720, e) { },
        onBeforeSortColumn: function (sort, _721) { },
        onSortColumn: function (sort, _722) { },
        onResizeColumn: function (_723, _724) { },
        onSelect: function (_725, _726) { },
        onUnselect: function (_727, _728) { },
        onSelectAll: function (rows) { },
        onUnselectAll: function (rows) { },
        onCheck: function (_729, _72a) { },
        onUncheck: function (_72b, _72c) { },
        onCheckAll: function (rows) { },
        onUncheckAll: function (rows) { },
        onBeforeEdit: function (_72d, _72e) { },
        onBeginEdit: function (_72f, _730) { },
        onEndEdit: function (_731, _732, _733) { },
        onAfterEdit: function (_734, _735, _736) { },
        onCancelEdit: function (_737, _738) { },
        onHeaderContextMenu: function (e, _739) { },
        onRowContextMenu: function (e, _73a, _73b) { }
    })
})(jQuery);
(function (e) {
    var d;

    function b(h) {
        var f = e.data(h, "propertygrid");
        var g = e.data(h, "propertygrid").options;
        e(h).datagrid(e.extend({}, g, {
            cls: "propertygrid",
            view: (g.showGroup ? g.groupView : g.view),
            onClickRow: function (j, i, l) {
                if (d != this) {
                    c(d);
                    d = this
                }
                if (g.editIndex != j && i.editor) {
                    var k = e(this).datagrid("getColumnOption", "value");
                    k.editor = i.editor;
                    c(d);
                    e(this).datagrid("beginEdit", j);
                    e(this).datagrid("getEditors", j)[0].target.focus();
                    g.editIndex = j
                }
                g.onClickRow.call(h, j, i, l)
            },
            loadFilter: function (i) {
                c(this);
                return g.loadFilter.call(this, i)
            }
        }));
        e(document).unbind(".propertygrid").bind("mousedown.propertygrid", function (j) {
            var i = e(j.target).closest("div.datagrid-view,div.combo-panel");
            if (i.length) {
                return
            }
            c(d);
            d = undefined
        })
    }
    function c(i) {
        var g = e(i);
        if (!g.length) {
            return
        }
        var f = e.data(i, "propertygrid").options;
        var h = f.editIndex;
        if (h == undefined) {
            return
        }
        var j = g.datagrid("getEditors", h)[0];
        if (j) {
            j.target.blur();
            if (g.datagrid("validateRow", h)) {
                g.datagrid("endEdit", h)
            } else {
                g.datagrid("cancelEdit", h)
            }
        }
        f.editIndex = undefined
    }
    e.fn.propertygrid = function (h, f) {
        if (typeof h == "string") {
            var g = e.fn.propertygrid.methods[h];
            if (g) {
                return g(this, f)
            } else {
                return this.datagrid(h, f)
            }
        }
        h = h || {};
        return this.each(function () {
            var j = e.data(this, "propertygrid");
            if (j) {
                e.extend(j.options, h)
            } else {
                var i = e.extend({}, e.fn.propertygrid.defaults, e.fn.propertygrid.parseOptions(this), h);
                i.frozenColumns = e.extend(true, [], i.frozenColumns);
                i.columns = e.extend(true, [], i.columns);
                e.data(this, "propertygrid", {
                    options: i
                })
            }
            b(this)
        })
    };
    e.fn.propertygrid.methods = {
        options: function (f) {
            return e.data(f[0], "propertygrid").options
        }
    };
    e.fn.propertygrid.parseOptions = function (f) {
        return e.extend({}, e.fn.datagrid.parseOptions(f), e.parser.parseOptions(f, [{
            showGroup: "boolean"
        }]))
    };
    var a = e.extend({}, e.fn.datagrid.defaults.view, {
        render: function (k, g, l) {
            var h = [];
            var j = this.groups;
            for (var f = 0; f < j.length; f++) {
                h.push(this.renderGroup.call(this, k, f, j[f], l))
            }
            e(g).html(h.join(""))
        },
        renderGroup: function (k, m, f, o) {
            var h = e.data(k, "datagrid");
            var g = h.options;
            var q = e(k).datagrid("getColumnFields", o);
            var p = [];
            p.push('<div class="datagrid-group" group-index=' + m + ">");
            p.push('<table cellspacing="0" cellpadding="0" border="0" style="height:100%"><tbody>');
            p.push("<tr>");
            if ((o && (g.rownumbers || g.frozenColumns.length)) || (!o && !(g.rownumbers || g.frozenColumns.length))) {
                p.push('<td style="border:0;text-align:center;width:25px"><span class="datagrid-row-expander datagrid-row-collapse" style="display:inline-block;width:16px;height:16px;cursor:pointer">&nbsp;</span></td>')
            }
            p.push('<td style="border:0;">');
            if (!o) {
                p.push('<span class="datagrid-group-title">');
                p.push(g.groupFormatter.call(k, f.value, f.rows));
                p.push("</span>")
            }
            p.push("</td>");
            p.push("</tr>");
            p.push("</tbody></table>");
            p.push("</div>");
            p.push('<table class="datagrid-btable" cellspacing="0" cellpadding="0" border="0"><tbody>');
            var i = f.startIndex;
            for (var n = 0; n < f.rows.length; n++) {
                var v = g.rowStyler ? g.rowStyler.call(k, i, f.rows[n]) : "";
                var r = "";
                var t = "";
                if (typeof v == "string") {
                    t = v
                } else {
                    if (v) {
                        r = v["class"] || "";
                        t = v.style || ""
                    }
                }
                var u = 'class="datagrid-row ' + (i % 2 && g.striped ? "datagrid-row-alt " : " ") + r + '"';
                var s = t ? 'style="' + t + '"' : "";
                var l = h.rowIdPrefix + "-" + (o ? 1 : 2) + "-" + i;
                p.push('<tr id="' + l + '" datagrid-row-index="' + i + '" ' + u + " " + s + ">");
                p.push(this.renderRow.call(this, k, q, o, i, f.rows[n]));
                p.push("</tr>");
                i++
            }
            p.push("</tbody></table>");
            return p.join("")
        },
        bindEvents: function (i) {
            var f = e.data(i, "datagrid");
            var h = f.dc;
            var g = h.body1.add(h.body2);
            var j = (e.data(g[0], "events") || e._data(g[0], "events")).click[0].handler;
            g.unbind("click").bind("click", function (n) {
                var k = e(n.target);
                var m = k.closest("span.datagrid-row-expander");
                if (m.length) {
                    var l = m.closest("div.datagrid-group").attr("group-index");
                    if (m.hasClass("datagrid-row-collapse")) {
                        e(i).datagrid("collapseGroup", l)
                    } else {
                        e(i).datagrid("expandGroup", l)
                    }
                } else {
                    j(n)
                }
                n.stopPropagation()
            })
        },
        onBeforeRender: function (r, j) {
            var m = e.data(r, "datagrid");
            var l = m.options;
            s();
            var o = [];
            for (var n = 0; n < j.length; n++) {
                var g = j[n];
                var f = p(g[l.groupField]);
                if (!f) {
                    f = {
                        value: g[l.groupField],
                        rows: [g]
                    };
                    o.push(f)
                } else {
                    f.rows.push(g)
                }
            }
            var h = 0;
            var q = [];
            for (var n = 0; n < o.length; n++) {
                var f = o[n];
                f.startIndex = h;
                h += f.rows.length;
                q = q.concat(f.rows)
            }
            m.data.rows = q;
            this.groups = o;
            var k = this;
            setTimeout(function () {
                k.bindEvents(r)
            }, 0);

            function p(t) {
                for (var u = 0; u < o.length; u++) {
                    var v = o[u];
                    if (v.value == t) {
                        return v
                    }
                }
                return null
            }
            function s() {
                if (!e("#datagrid-group-style").length) {
                    e("head").append('<style id="datagrid-group-style">.datagrid-group{height:25px;overflow:hidden;font-weight:bold;border-bottom:1px solid #ccc;}</style>')
                }
            }
        }
    });
    e.extend(e.fn.datagrid.methods, {
        expandGroup: function (f, g) {
            return f.each(function () {
                var i = e.data(this, "datagrid").dc.view;
                var j = i.find(g != undefined ? 'div.datagrid-group[group-index="' + g + '"]' : "div.datagrid-group");
                var h = j.find("span.datagrid-row-expander");
                if (h.hasClass("datagrid-row-expand")) {
                    h.removeClass("datagrid-row-expand").addClass("datagrid-row-collapse");
                    j.next("table").show()
                }
                e(this).datagrid("fixRowHeight")
            })
        },
        collapseGroup: function (f, g) {
            return f.each(function () {
                var i = e.data(this, "datagrid").dc.view;
                var j = i.find(g != undefined ? 'div.datagrid-group[group-index="' + g + '"]' : "div.datagrid-group");
                var h = j.find("span.datagrid-row-expander");
                if (h.hasClass("datagrid-row-collapse")) {
                    h.removeClass("datagrid-row-collapse").addClass("datagrid-row-expand");
                    j.next("table").hide()
                }
                e(this).datagrid("fixRowHeight")
            })
        }
    });
    e.fn.propertygrid.defaults = e.extend({}, e.fn.datagrid.defaults, {
        singleSelect: true,
        remoteSort: false,
        fitColumns: true,
        loadMsg: "",
        frozenColumns: [
            [{
                field: "f",
                width: 16,
                resizable: false
            }]
        ],
        columns: [
            [{
                field: "name",
                title: "Name",
                width: 100,
                sortable: true
            }, {
                field: "value",
                title: "Value",
                width: 100,
                resizable: false
            }]
        ],
        showGroup: false,
        groupView: a,
        groupField: "group",
        groupFormatter: function (f, g) {
            return f
        }
    })
})(jQuery);
(function (w) {
    function t(y) {
        var A = w.data(y, "treegrid");
        var z = A.options;
        w(y).datagrid(w.extend({}, z, {
            url: null,
            data: null,
            loader: function () {
                return false
            },
            onBeforeLoad: function () {
                return false
            },
            onLoadSuccess: function () { },
            onResizeColumn: function (D, E) {
                i(y);
                z.onResizeColumn.call(y, D, E)
            },
            onSortColumn: function (F, E) {
                z.sortName = F;
                z.sortOrder = E;
                if (z.remoteSort) {
                    j(y)
                } else {
                    var D = w(y).treegrid("getData");
                    c(y, 0, D)
                }
                z.onSortColumn.call(y, F, E)
            },
            onBeforeEdit: function (E, D) {
                if (z.onBeforeEdit.call(y, D) == false) {
                    return false
                }
            },
            onAfterEdit: function (F, D, E) {
                return z.onAfterEdit.call(y, D, E)
            },
            onCancelEdit: function (E, D) {
                return z.onCancelEdit.call(y, D)
            },
            onSelect: function (D) {
                return z.onSelect.call(y, g(y, D))
            },
            onUnselect: function (D) {
                return z.onUnselect.call(y, g(y, D))
            },
            onCheck: function (D) {
                return z.onCheck.call(y, g(y, D))
            },
            onUncheck: function (D) {
                return z.onUncheck.call(y, g(y, D))
            },
            onClickRow: function (D) {
                return z.onClickRow.call(y, g(y, D))
            },
            onDblClickRow: function (D) {
                return z.onDblClickRow.call(y, g(y, D))
            },
            onClickCell: function (E, D) {
                return z.onClickCell.call(y, D, g(y, E))
            },
            onDblClickCell: function (D, E) {
                return z.onDblClickCell.call(y, E, g(y, D))
            },
            onRowContextMenu: function (E, D) {
                return z.onContextMenu.call(y, E, g(y, D))
            }
        }));
        if (!z.columns) {
            var B = w.data(y, "datagrid").options;
            z.columns = B.columns;
            z.frozenColumns = B.frozenColumns
        }
        A.dc = w.data(y, "datagrid").dc;
        if (z.pagination) {
            var C = w(y).datagrid("getPager");
            C.pagination({
                pageNumber: z.pageNumber,
                pageSize: z.pageSize,
                pageList: z.pageList,
                onSelectPage: function (D, E) {
                    z.pageNumber = D;
                    z.pageSize = E;
                    j(y)
                }
            });
            z.pageSize = C.pagination("options").pageSize
        }
    }
    function i(E, B) {
        var C = w.data(E, "datagrid").options;
        var y = w.data(E, "datagrid").dc;
        if (!y.body1.is(":empty") && (!C.nowrap || C.autoRowHeight)) {
            if (B != undefined) {
                var A = n(E, B);
                for (var z = 0; z < A.length; z++) {
                    D(A[z][C.idField])
                }
            }
        }
        w(E).datagrid("fixRowHeight", B);

        function D(H) {
            var I = C.finder.getTr(E, H, "body", 1);
            var G = C.finder.getTr(E, H, "body", 2);
            I.css("height", "");
            G.css("height", "");
            var F = Math.max(I.height(), G.height());
            I.css("height", F);
            G.css("height", F)
        }
    }
    function u(A) {
        var z = w.data(A, "datagrid").dc;
        var y = w.data(A, "treegrid").options;
        if (!y.rownumbers) {
            return
        }
        z.body1.find("div.datagrid-cell-rownumber").each(function (B) {
            w(this).html(B + 1)
        })
    }
    function k(B) {
        var A = w.data(B, "datagrid").dc;
        var y = A.body1.add(A.body2);
        var z = (w.data(y[0], "events") || w._data(y[0], "events")).click[0].handler;
        A.body1.add(A.body2).bind("mouseover", function (E) {
            var C = w(E.target);
            var D = C.closest("tr.datagrid-row");
            if (!D.length) {
                return
            }
            if (C.hasClass("tree-hit")) {
                C.hasClass("tree-expanded") ? C.addClass("tree-expanded-hover") : C.addClass("tree-collapsed-hover")
            }
            E.stopPropagation()
        }).bind("mouseout", function (E) {
            var C = w(E.target);
            var D = C.closest("tr.datagrid-row");
            if (!D.length) {
                return
            }
            if (C.hasClass("tree-hit")) {
                C.hasClass("tree-expanded") ? C.removeClass("tree-expanded-hover") : C.removeClass("tree-collapsed-hover")
            }
            E.stopPropagation()
        }).unbind("click").bind("click", function (E) {
            var C = w(E.target);
            var D = C.closest("tr.datagrid-row");
            if (!D.length) {
                return
            }
            if (C.hasClass("tree-hit") || C.hasClass("tree-folder")) {
                s(B, D.attr("node-id"))
            } else {
                z(E)
            }
            E.stopPropagation()
        })
    }
    function b(D, y) {
        var E = w.data(D, "treegrid").options;
        var z = E.finder.getTr(D, y, "body", 1);
        var C = E.finder.getTr(D, y, "body", 2);
        var F = w(D).datagrid("getColumnFields", true).length + (E.rownumbers ? 1 : 0);
        var A = w(D).datagrid("getColumnFields", false).length;
        B(z, F);
        B(C, A);

        function B(G, H) {
            w('<tr class="treegrid-tr-tree"><td style="border:0px" colspan="' + H + '"><div></div></td></tr>').insertAfter(G)
        }
    }
    function c(F, A, E, H) {
        var G = w.data(F, "treegrid");
        var y = G.options;
        var K = G.dc;
        E = y.loadFilter.call(F, E, A);
        var z = g(F, A);
        if (z) {
            var B = y.finder.getTr(F, A, "body", 1);
            var I = y.finder.getTr(F, A, "body", 2);
            var L = B.next("tr.treegrid-tr-tree").children("td").children("div");
            var D = I.next("tr.treegrid-tr-tree").children("td").children("div");
            if (!H) {
                z.children = []
            }
        } else {
            var L = K.body1;
            var D = K.body2;
            if (!H) {
                G.data = []
            }
        }
        if (!H) {
            L.empty();
            D.empty()
        }
        if (y.view.onBeforeRender) {
            y.view.onBeforeRender.call(y.view, F, A, E)
        }
        y.view.render.call(y.view, F, L, true);
        y.view.render.call(y.view, F, D, false);
        if (y.showFooter) {
            y.view.renderFooter.call(y.view, F, K.footer1, true);
            y.view.renderFooter.call(y.view, F, K.footer2, false)
        }
        if (y.view.onAfterRender) {
            y.view.onAfterRender.call(y.view, F)
        }
        y.onLoadSuccess.call(F, z, E);
        if (!A && y.pagination) {
            var C = w.data(F, "treegrid").total;
            var J = w(F).datagrid("getPager");
            if (J.pagination("options").total != C) {
                J.pagination({
                    total: C
                })
            }
        }
        i(F);
        u(F);
        w(F).treegrid("setSelectionState");
        w(F).treegrid("autoSizeColumn")
    }
    function j(H, C, I, E, y) {
        var F = w.data(H, "treegrid").options;
        var A = w(H).datagrid("getPanel").find("div.datagrid-body");
        if (I) {
            F.queryParams = I
        }
        var G = w.extend({}, F.queryParams);
        if (F.pagination) {
            w.extend(G, {
                page: F.pageNumber,
                rows: F.pageSize
            })
        }
        if (F.sortName) {
            w.extend(G, {
                sort: F.sortName,
                order: F.sortOrder
            })
        }
        var z = g(H, C);
        if (F.onBeforeLoad.call(H, z, G) == false) {
            return
        }
        var B = A.find('tr[node-id="' + C + '"] span.tree-folder');
        B.addClass("tree-loading");
        w(H).treegrid("loading");
        var D = F.loader.call(H, G, function (J) {
            B.removeClass("tree-loading");
            w(H).treegrid("loaded");
            c(H, C, J, E);
            if (y) {
                y()
            }
        }, function () {
            B.removeClass("tree-loading");
            w(H).treegrid("loaded");
            F.onLoadError.apply(H, arguments);
            if (y) {
                y()
            }
        });
        if (D == false) {
            B.removeClass("tree-loading");
            w(H).treegrid("loaded")
        }
    }
    function a(y) {
        var z = d(y);
        if (z.length) {
            return z[0]
        } else {
            return null
        }
    }
    function d(y) {
        return w.data(y, "treegrid").data
    }
    function f(z, A) {
        var y = g(z, A);
        if (y && y._parentId) {
            return g(z, y._parentId)
        } else {
            return null
        }
    }
    function n(F, B) {
        var D = w.data(F, "treegrid").options;
        var A = w(F).datagrid("getPanel").find("div.datagrid-view2 div.datagrid-body");
        var C = [];
        if (B) {
            z(B)
        } else {
            var E = d(F);
            for (var y = 0; y < E.length; y++) {
                C.push(E[y]);
                z(E[y][D.idField])
            }
        }
        function z(I) {
            var K = g(F, I);
            if (K && K.children) {
                for (var G = 0, H = K.children.length; G < H; G++) {
                    var J = K.children[G];
                    C.push(J);
                    z(J[D.idField])
                }
            }
        }
        return C
    }
    function v(C, y) {
        if (!y) {
            return 0
        }
        var z = w.data(C, "treegrid").options;
        var A = w(C).datagrid("getPanel").children("div.datagrid-view");
        var B = A.find('div.datagrid-body tr[node-id="' + y + '"]').children('td[field="' + z.treeField + '"]');
        return B.find("span.tree-indent,span.tree-hit").length
    }
    function g(z, C) {
        var B = w.data(z, "treegrid").options;
        var y = w.data(z, "treegrid").data;
        var F = [y];
        while (F.length) {
            var A = F.shift();
            for (var E = 0; E < A.length; E++) {
                var D = A[E];
                if (D[B.idField] == C) {
                    return D
                } else {
                    if (D.children) {
                        F.push(D.children)
                    }
                }
            }
        }
        return null
    }
    function p(D, A) {
        var B = w.data(D, "treegrid").options;
        var z = g(D, A);
        var y = B.finder.getTr(D, A);
        var C = y.find("span.tree-hit");
        if (C.length == 0) {
            return
        }
        if (C.hasClass("tree-collapsed")) {
            return
        }
        if (B.onBeforeCollapse.call(D, z) == false) {
            return
        }
        C.removeClass("tree-expanded tree-expanded-hover").addClass("tree-collapsed");
        C.next().removeClass("tree-folder-open");
        z.state = "closed";
        y = y.next("tr.treegrid-tr-tree");
        var E = y.children("td").children("div");
        if (B.animate) {
            E.slideUp("normal", function () {
                w(D).treegrid("autoSizeColumn");
                i(D, A);
                B.onCollapse.call(D, z)
            })
        } else {
            E.hide();
            w(D).treegrid("autoSizeColumn");
            i(D, A);
            B.onCollapse.call(D, z)
        }
    }
    function e(F, B) {
        var E = w.data(F, "treegrid").options;
        var D = E.finder.getTr(F, B);
        var y = D.find("span.tree-hit");
        var z = g(F, B);
        if (y.length == 0) {
            return
        }
        if (y.hasClass("tree-expanded")) {
            return
        }
        if (E.onBeforeExpand.call(F, z) == false) {
            return
        }
        y.removeClass("tree-collapsed tree-collapsed-hover").addClass("tree-expanded");
        y.next().addClass("tree-folder-open");
        var C = D.next("tr.treegrid-tr-tree");
        if (C.length) {
            var H = C.children("td").children("div");
            A(H)
        } else {
            b(F, z[E.idField]);
            var C = D.next("tr.treegrid-tr-tree");
            var H = C.children("td").children("div");
            H.hide();
            var G = w.extend({}, E.queryParams || {});
            G.id = z[E.idField];
            j(F, z[E.idField], G, true, function () {
                if (H.is(":empty")) {
                    C.remove()
                } else {
                    A(H)
                }
            })
        }
        function A(I) {
            z.state = "open";
            if (E.animate) {
                I.slideDown("normal", function () {
                    w(F).treegrid("autoSizeColumn");
                    i(F, B);
                    E.onExpand.call(F, z)
                })
            } else {
                I.show();
                w(F).treegrid("autoSizeColumn");
                i(F, B);
                E.onExpand.call(F, z)
            }
        }
    }
    function s(C, A) {
        var z = w.data(C, "treegrid").options;
        var B = z.finder.getTr(C, A);
        var y = B.find("span.tree-hit");
        if (y.hasClass("tree-expanded")) {
            p(C, A)
        } else {
            e(C, A)
        }
    }
    function q(C, y) {
        var z = w.data(C, "treegrid").options;
        var B = n(C, y);
        if (y) {
            B.unshift(g(C, y))
        }
        for (var A = 0; A < B.length; A++) {
            p(C, B[A][z.idField])
        }
    }
    function l(z, C) {
        var y = w.data(z, "treegrid").options;
        var A = n(z, C);
        if (C) {
            A.unshift(g(z, C))
        }
        for (var B = 0; B < A.length; B++) {
            e(z, A[B][y.idField])
        }
    }
    function o(E, C) {
        var D = w.data(E, "treegrid").options;
        var y = [];
        var B = f(E, C);
        while (B) {
            var A = B[D.idField];
            y.unshift(A);
            B = f(E, A)
        }
        for (var z = 0; z < y.length; z++) {
            e(E, y[z])
        }
    }
    function h(D, z) {
        var B = w.data(D, "treegrid").options;
        if (z.parent) {
            var y = B.finder.getTr(D, z.parent);
            if (y.next("tr.treegrid-tr-tree").length == 0) {
                b(D, z.parent)
            }
            var E = y.children('td[field="' + B.treeField + '"]').children("div.datagrid-cell");
            var A = E.children("span.tree-icon");
            if (A.hasClass("tree-file")) {
                A.removeClass("tree-file").addClass("tree-folder tree-folder-open");
                var C = w('<span class="tree-hit tree-expanded"></span>').insertBefore(A);
                if (C.prev().length) {
                    C.prev().remove()
                }
            }
        }
        c(D, z.parent, z.data, true)
    }
    function x(C, D) {
        var z = D.before || D.after;
        var B = w.data(C, "treegrid").options;
        var A = f(C, z);
        h(C, {
            parent: (A ? A[B.idField] : null),
            data: [D.data]
        });
        y(true);
        y(false);
        u(C);

        function y(H) {
            var I = H ? 1 : 2;
            var E = B.finder.getTr(C, D.data[B.idField], "body", I);
            var F = E.closest("table.datagrid-btable");
            E = E.parent().children();
            var J = B.finder.getTr(C, z, "body", I);
            if (D.before) {
                E.insertBefore(J)
            } else {
                var G = J.next("tr.treegrid-tr-tree");
                E.insertAfter(G.length ? G : J)
            }
            F.remove()
        }
    }
    function m(y, z) {
        var A = w.data(y, "treegrid");
        w(y).datagrid("deleteRow", z);
        u(y);
        A.total -= 1;
        w(y).datagrid("getPager").pagination("refresh", {
            total: A.total
        })
    }
    w.fn.treegrid = function (A, y) {
        if (typeof A == "string") {
            var z = w.fn.treegrid.methods[A];
            if (z) {
                return z(this, y)
            } else {
                return this.datagrid(A, y)
            }
        }
        A = A || {};
        return this.each(function () {
            var B = w.data(this, "treegrid");
            if (B) {
                w.extend(B.options, A)
            } else {
                B = w.data(this, "treegrid", {
                    options: w.extend({}, w.fn.treegrid.defaults, w.fn.treegrid.parseOptions(this), A),
                    data: []
                })
            }
            t(this);
            if (B.options.data) {
                w(this).treegrid("loadData", B.options.data)
            }
            j(this);
            k(this)
        })
    };
    w.fn.treegrid.methods = {
        options: function (y) {
            return w.data(y[0], "treegrid").options
        },
        resize: function (y, z) {
            return y.each(function () {
                w(this).datagrid("resize", z)
            })
        },
        fixRowHeight: function (y, z) {
            return y.each(function () {
                i(this, z)
            })
        },
        loadData: function (y, z) {
            return y.each(function () {
                c(this, z.parent, z)
            })
        },
        load: function (y, z) {
            return y.each(function () {
                w(this).treegrid("options").pageNumber = 1;
                w(this).treegrid("getPager").pagination({
                    pageNumber: 1
                });
                w(this).treegrid("reload", z)
            })
        },
        reload: function (y, z) {
            return y.each(function () {
                var A = w(this).treegrid("options");
                var B = {};
                if (typeof z == "object") {
                    B = z
                } else {
                    B = w.extend({}, A.queryParams);
                    B.id = z
                }
                if (B.id) {
                    var C = w(this).treegrid("find", B.id);
                    if (C.children) {
                        C.children.splice(0, C.children.length)
                    }
                    A.queryParams = B;
                    var D = A.finder.getTr(this, B.id);
                    D.next("tr.treegrid-tr-tree").remove();
                    D.find("span.tree-hit").removeClass("tree-expanded tree-expanded-hover").addClass("tree-collapsed");
                    e(this, B.id)
                } else {
                    j(this, null, B)
                }
            })
        },
        reloadFooter: function (y, z) {
            return y.each(function () {
                var B = w.data(this, "treegrid").options;
                var A = w.data(this, "datagrid").dc;
                if (z) {
                    w.data(this, "treegrid").footer = z
                }
                if (B.showFooter) {
                    B.view.renderFooter.call(B.view, this, A.footer1, true);
                    B.view.renderFooter.call(B.view, this, A.footer2, false);
                    if (B.view.onAfterRender) {
                        B.view.onAfterRender.call(B.view, this)
                    }
                    w(this).treegrid("fixRowHeight")
                }
            })
        },
        getData: function (y) {
            return w.data(y[0], "treegrid").data
        },
        getFooterRows: function (y) {
            return w.data(y[0], "treegrid").footer
        },
        getRoot: function (y) {
            return a(y[0])
        },
        getRoots: function (y) {
            return d(y[0])
        },
        getParent: function (y, z) {
            return f(y[0], z)
        },
        getChildren: function (y, z) {
            return n(y[0], z)
        },
        getLevel: function (y, z) {
            return v(y[0], z)
        },
        find: function (y, z) {
            return g(y[0], z)
        },
        isLeaf: function (C, z) {
            var A = w.data(C[0], "treegrid").options;
            var B = A.finder.getTr(C[0], z);
            var y = B.find("span.tree-hit");
            return y.length == 0
        },
        select: function (y, z) {
            return y.each(function () {
                w(this).datagrid("selectRow", z)
            })
        },
        unselect: function (y, z) {
            return y.each(function () {
                w(this).datagrid("unselectRow", z)
            })
        },
        collapse: function (y, z) {
            return y.each(function () {
                p(this, z)
            })
        },
        expand: function (y, z) {
            return y.each(function () {
                e(this, z)
            })
        },
        toggle: function (y, z) {
            return y.each(function () {
                s(this, z)
            })
        },
        collapseAll: function (y, z) {
            return y.each(function () {
                q(this, z)
            })
        },
        expandAll: function (y, z) {
            return y.each(function () {
                l(this, z)
            })
        },
        expandTo: function (y, z) {
            return y.each(function () {
                o(this, z)
            })
        },
        append: function (y, z) {
            return y.each(function () {
                h(this, z)
            })
        },
        insert: function (y, z) {
            return y.each(function () {
                x(this, z)
            })
        },
        remove: function (y, z) {
            return y.each(function () {
                m(this, z)
            })
        },
        pop: function (A, z) {
            var y = A.treegrid("find", z);
            A.treegrid("remove", z);
            return y
        },
        refresh: function (y, z) {
            return y.each(function () {
                var A = w.data(this, "treegrid").options;
                A.view.refreshRow.call(A.view, this, z)
            })
        },
        update: function (y, z) {
            return y.each(function () {
                var A = w.data(this, "treegrid").options;
                A.view.updateRow.call(A.view, this, z.id, z.row)
            })
        },
        beginEdit: function (y, z) {
            return y.each(function () {
                w(this).datagrid("beginEdit", z);
                w(this).treegrid("fixRowHeight", z)
            })
        },
        endEdit: function (y, z) {
            return y.each(function () {
                w(this).datagrid("endEdit", z)
            })
        },
        cancelEdit: function (y, z) {
            return y.each(function () {
                w(this).datagrid("cancelEdit", z)
            })
        }
    };
    w.fn.treegrid.parseOptions = function (y) {
        return w.extend({}, w.fn.datagrid.parseOptions(y), w.parser.parseOptions(y, ["treeField",
            {
                animate: "boolean"
            }]))
    };
    var r = w.extend({}, w.fn.datagrid.defaults.view, {
        render: function (H, y, D) {
            var C = w.data(H, "treegrid").options;
            var A = w(H).datagrid("getColumnFields", D);
            var E = w.data(H, "datagrid").rowIdPrefix;
            if (D) {
                if (!(C.rownumbers || (C.frozenColumns && C.frozenColumns.length))) {
                    return
                }
            }
            var B = 0;
            var z = this;
            var F = G(D, this.treeLevel, this.treeNodes);
            w(y).append(F.join(""));

            function G(L, R, M) {
                var S = ['<table class="datagrid-btable" cellspacing="0" cellpadding="0" border="0"><tbody>'];
                for (var P = 0; P < M.length; P++) {
                    var K = M[P];
                    if (K.state != "open" && K.state != "closed") {
                        K.state = "open"
                    }
                    var T = C.rowStyler ? C.rowStyler.call(H, K, P) : "";
                    var N = "";
                    var U = "";
                    if (typeof T == "string") {
                        U = T
                    } else {
                        if (T) {
                            N = T["class"] || "";
                            U = T.style || ""
                        }
                    }
                    var J = 'class="datagrid-row ' + (B++ % 2 && C.striped ? "datagrid-row-alt " : " ") + N + '"';
                    var O = U ? 'style="' + U + '"' : "";
                    var V = E + "-" + (L ? 1 : 2) + "-" + K[C.idField];
                    S.push('<tr id="' + V + '" node-id="' + K[C.idField] + '" ' + J + " " + O + ">");
                    S = S.concat(z.renderRow.call(z, H, A, L, R, K));
                    S.push("</tr>");
                    if (K.children && K.children.length) {
                        var Q = G(L, R + 1, K.children);
                        var I = K.state == "closed" ? "none" : "block";
                        S.push('<tr class="treegrid-tr-tree"><td style="border:0px" colspan=' + (A.length + (C.rownumbers ? 1 : 0)) + '><div style="display:' + I + '">');
                        S = S.concat(Q);
                        S.push("</div></td></tr>")
                    }
                }
                S.push("</tbody></table>");
                return S
            }
        },
        renderFooter: function (F, B, C) {
            var E = w.data(F, "treegrid").options;
            var G = w.data(F, "treegrid").footer || [];
            var D = w(F).datagrid("getColumnFields", C);
            var z = ['<table class="datagrid-ftable" cellspacing="0" cellpadding="0" border="0"><tbody>'];
            for (var y = 0; y < G.length; y++) {
                var A = G[y];
                A[E.idField] = A[E.idField] || ("foot-row-id" + y);
                z.push('<tr class="datagrid-row" node-id="' + A[E.idField] + '">');
                z.push(this.renderRow.call(this, F, D, C, 0, A));
                z.push("</tr>")
            }
            z.push("</tbody></table>");
            w(B).html(z.join(""))
        },
        renderRow: function (M, E, N, B, A) {
            var z = w.data(M, "treegrid").options;
            var K = [];
            if (N && z.rownumbers) {
                K.push('<td class="datagrid-td-rownumber"><div class="datagrid-cell-rownumber">0</div></td>')
            }
            for (var H = 0; H < E.length; H++) {
                var J = E[H];
                var C = w(M).datagrid("getColumnOption", J);
                if (C) {
                    var O = C.styler ? (C.styler(A[J], A) || "") : "";
                    var D = "";
                    var G = "";
                    if (typeof O == "string") {
                        G = O
                    } else {
                        if (K) {
                            D = O["class"] || "";
                            G = O.style || ""
                        }
                    }
                    var y = D ? 'class="' + D + '"' : "";
                    var L = C.hidden ? 'style="display:none;' + G + '"' : (G ? 'style="' + G + '"' : "");
                    K.push('<td field="' + J + '" ' + y + " " + L + ">");
                    var L = "";
                    if (!C.checkbox) {
                        if (C.align) {
                            L += "text-align:" + C.align + ";"
                        }
                        if (!z.nowrap) {
                            L += "white-space:normal;height:auto;"
                        } else {
                            if (z.autoRowHeight) {
                                L += "height:auto;"
                            }
                        }
                    }
                    K.push('<div style="' + L + '" ');
                    if (C.checkbox) {
                        K.push('class="datagrid-cell-check ')
                    } else {
                        K.push('class="datagrid-cell ' + C.cellClass)
                    }
                    K.push('">');
                    if (C.checkbox) {
                        if (A.checked) {
                            K.push('<input type="checkbox" checked="checked"')
                        } else {
                            K.push('<input type="checkbox"')
                        }
                        K.push(' name="' + J + '" value="' + (A[J] != undefined ? A[J] : "") + '">')
                    } else {
                        var F = null;
                        if (C.formatter) {
                            F = C.formatter(A[J], A)
                        } else {
                            F = A[J]
                        }
                        if (J == z.treeField) {
                            for (var I = 0; I < B; I++) {
                                K.push('<span class="tree-indent"></span>')
                            }
                            if (A.state == "closed") {
                                K.push('<span class="tree-hit tree-collapsed"></span>');
                                K.push('<span class="tree-icon tree-folder ' + (A.iconCls ? A.iconCls : "") + '"></span>')
                            } else {
                                if (A.children && A.children.length) {
                                    K.push('<span class="tree-hit tree-expanded"></span>');
                                    K.push('<span class="tree-icon tree-folder tree-folder-open ' + (A.iconCls ? A.iconCls : "") + '"></span>')
                                } else {
                                    K.push('<span class="tree-indent"></span>');
                                    K.push('<span class="tree-icon tree-file ' + (A.iconCls ? A.iconCls : "") + '"></span>')
                                }
                            }
                            K.push('<span class="tree-title">' + F + "</span>")
                        } else {
                            K.push(F)
                        }
                    }
                    K.push("</div>");
                    K.push("</td>")
                }
            }
            return K.join("")
        },
        refreshRow: function (z, y) {
            this.updateRow.call(this, z, y, {})
        },
        updateRow: function (E, z, A) {
            var D = w.data(E, "treegrid").options;
            var B = w(E).treegrid("find", z);
            w.extend(B, A);
            var y = w(E).treegrid("getLevel", z) - 1;
            var F = D.rowStyler ? D.rowStyler.call(E, B) : "";

            function C(H) {
                var K = w(E).treegrid("getColumnFields", H);
                var G = D.finder.getTr(E, z, "body", (H ? 1 : 2));
                var I = G.find("div.datagrid-cell-rownumber").html();
                var J = G.find("div.datagrid-cell-check input[type=checkbox]").is(":checked");
                G.html(this.renderRow(E, K, H, y, B));
                G.attr("style", F || "");
                G.find("div.datagrid-cell-rownumber").html(I);
                if (J) {
                    G.find("div.datagrid-cell-check input[type=checkbox]")._propAttr("checked", true)
                }
            }
            C.call(this, true);
            C.call(this, false);
            w(E).treegrid("fixRowHeight", z)
        },
        deleteRow: function (A, B) {
            var C = w.data(A, "treegrid").options;
            var y = C.finder.getTr(A, B);
            y.next("tr.treegrid-tr-tree").remove();
            y.remove();
            var E = z(B);
            if (E) {
                if (E.children.length == 0) {
                    y = C.finder.getTr(A, E[C.idField]);
                    y.next("tr.treegrid-tr-tree").remove();
                    var D = y.children('td[field="' + C.treeField + '"]').children("div.datagrid-cell");
                    D.find(".tree-icon").removeClass("tree-folder").addClass("tree-file");
                    D.find(".tree-hit").remove();
                    w('<span class="tree-indent"></span>').prependTo(D)
                }
            }
            function z(F) {
                var G;
                var H = w(A).treegrid("getParent", F);
                if (H) {
                    G = H.children
                } else {
                    G = w(A).treegrid("getData")
                }
                for (var I = 0; I < G.length; I++) {
                    if (G[I][C.idField] == F) {
                        G.splice(I, 1);
                        break
                    }
                }
                return H
            }
        },
        onBeforeRender: function (z, C, y) {
            if (w.isArray(C)) {
                y = {
                    total: C.length,
                    rows: C
                };
                C = null
            }
            if (!y) {
                return false
            }
            var A = w.data(z, "treegrid");
            var B = A.options;
            if (y.length == undefined) {
                if (y.footer) {
                    A.footer = y.footer
                }
                if (y.total) {
                    A.total = y.total
                }
                y = this.transfer(z, C, y.rows)
            } else {
                function E(H, I) {
                    for (var G = 0; G < H.length; G++) {
                        var F = H[G];
                        F._parentId = I;
                        if (F.children && F.children.length) {
                            E(F.children, F[B.idField])
                        }
                    }
                }
                E(y, C)
            }
            var D = g(z, C);
            if (D) {
                if (D.children) {
                    D.children = D.children.concat(y)
                } else {
                    D.children = y
                }
            } else {
                A.data = A.data.concat(y)
            }
            this.sort(z, y);
            this.treeNodes = y;
            this.treeLevel = w(z).treegrid("getLevel", C)
        },
        sort: function (C, z) {
            var B = w.data(C, "treegrid").options;
            if (!B.remoteSort && B.sortName) {
                var D = B.sortName.split(",");
                var A = B.sortOrder.split(",");
                y(z)
            }
            function y(G) {
                G.sort(function (J, K) {
                    var M = 0;
                    for (var I = 0; I < D.length; I++) {
                        var N = D[I];
                        var O = A[I];
                        var H = w(C).treegrid("getColumnOption", N);
                        var L = H.sorter ||
                            function (P, Q) {
                                return P == Q ? 0 : (P > Q ? 1 : -1)
                            };
                        M = L(J[N], K[N]) * (O == "asc" ? 1 : -1);
                        if (M != 0) {
                            return M
                        }
                    }
                    return M
                });
                for (var E = 0; E < G.length; E++) {
                    var F = G[E].children;
                    if (F && F.length) {
                        y(F)
                    }
                }
            }
        },
        transfer: function (F, D, y) {
            var C = w.data(F, "treegrid").options;
            var H = [];
            for (var G = 0; G < y.length; G++) {
                H.push(y[G])
            }
            var z = [];
            for (var G = 0; G < H.length; G++) {
                var B = H[G];
                if (!D) {
                    if (!B._parentId) {
                        z.push(B);
                        H.splice(G, 1);
                        G--
                    }
                } else {
                    if (B._parentId == D) {
                        z.push(B);
                        H.splice(G, 1);
                        G--
                    }
                }
            }
            var E = [];
            for (var G = 0; G < z.length; G++) {
                E.push(z[G])
            }
            while (E.length) {
                var A = E.shift();
                for (var G = 0; G < H.length; G++) {
                    var B = H[G];
                    if (B._parentId == A[C.idField]) {
                        if (A.children) {
                            A.children.push(B)
                        } else {
                            A.children = [B]
                        }
                        E.push(B);
                        H.splice(G, 1);
                        G--
                    }
                }
            }
            return z
        }
    });
    w.fn.treegrid.defaults = w.extend({}, w.fn.datagrid.defaults, {
        treeField: null,
        animate: false,
        singleSelect: true,
        view: r,
        loader: function (A, B, z) {
            var y = w(this).treegrid("options");
            if (!y.url) {
                return false
            }
            w.ajax({
                type: y.method,
                url: y.url,
                data: A,
                dataType: "json",
                success: function (C) {
                    B(C.Data)
                },
                error: function () {
                    z.apply(this, arguments)
                }
            })
        },
        loadFilter: function (y, z) {
            return y
        },
        finder: {
            getTr: function (A, D, F, G) {
                F = F || "body";
                G = G || 0;
                var y = w.data(A, "datagrid").dc;
                if (G == 0) {
                    var C = w.data(A, "treegrid").options;
                    var B = C.finder.getTr(A, D, F, 1);
                    var E = C.finder.getTr(A, D, F, 2);
                    return B.add(E)
                } else {
                    if (F == "body") {
                        var z = w("#" + w.data(A, "datagrid").rowIdPrefix + "-" + G + "-" + D);
                        if (!z.length) {
                            z = (G == 1 ? y.body1 : y.body2).find('tr[node-id="' + D + '"]')
                        }
                        return z
                    } else {
                        if (F == "footer") {
                            return (G == 1 ? y.footer1 : y.footer2).find('tr[node-id="' + D + '"]')
                        } else {
                            if (F == "selected") {
                                return (G == 1 ? y.body1 : y.body2).find("tr.datagrid-row-selected")
                            } else {
                                if (F == "highlight") {
                                    return (G == 1 ? y.body1 : y.body2).find("tr.datagrid-row-over")
                                } else {
                                    if (F == "checked") {
                                        return (G == 1 ? y.body1 : y.body2).find("tr.datagrid-row-checked")
                                    } else {
                                        if (F == "last") {
                                            return (G == 1 ? y.body1 : y.body2).find("tr:last[node-id]")
                                        } else {
                                            if (F == "allbody") {
                                                return (G == 1 ? y.body1 : y.body2).find("tr[node-id]")
                                            } else {
                                                if (F == "allfooter") {
                                                    return (G == 1 ? y.footer1 : y.footer2).find("tr[node-id]")
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            getRow: function (z, A) {
                var y = (typeof A == "object") ? A.attr("node-id") : A;
                return w(z).treegrid("find", y)
            },
            getRows: function (y) {
                return w(y).treegrid("getChildren")
            }
        },
        onBeforeLoad: function (y, z) { },
        onLoadSuccess: function (y, z) { },
        onLoadError: function () { },
        onBeforeCollapse: function (y) { },
        onCollapse: function (y) { },
        onBeforeExpand: function (y) { },
        onExpand: function (y) { },
        onClickRow: function (y) { },
        onDblClickRow: function (y) { },
        onClickCell: function (y, z) { },
        onDblClickCell: function (z, y) { },
        onContextMenu: function (z, y) { },
        onBeforeEdit: function (y) { },
        onAfterEdit: function (y, z) { },
        onCancelEdit: function (y) { }
    })
})(jQuery);
(function (s) {
    function l(u, x) {
        var D = s.data(u, "combo");
        var z = D.options;
        var B = D.combo;
        var v = D.panel;
        if (x) {
            z.width = x
        }
        if (isNaN(z.width)) {
            var A = s(u).clone();
            A.css("visibility", "hidden");
            A.appendTo("body");
            z.width = A.outerWidth();
            A.remove()
        }
        B.appendTo("body");
        var w = B.find("input.combo-text").length == 0 ? B.find("textarea.combo-text") : B.find("input.combo-text");
        var y = B.find(".combo-arrow");
        var C = z.hasDownArrow ? y._outerWidth() : 0;
        B._outerWidth(z.width)._outerHeight(z.height);
        w._outerWidth(B.width() - C);
        w.css({
            height: (B.height() < 25 ? 25 : B.height()) + "px",
            lineHeight: (B.height() < 25 ? 25 : B.height()) + "px"
        });
        y._outerHeight(B.height());
        v.panel("resize", {
            width: (z.panelWidth ? (s.isFunction(z.panelWidth) ? z.panelWidth() : z.panelWidth) : B.outerWidth()),
            height: z.panelHeight
        });
        B.insertAfter(u)
    }
    function i(w) {
        s(w).addClass("combo-f").hide();
        var y = '<span class="combo">';
        if (!s(w).is("textarea")) {
            y += '<input type="text" class="combo-text" autocomplete="off"><span><span class="combo-arrow"></span></span><input type="hidden" class="combo-value"></span>'
        } else {
            y += '<textarea type="text" class="combo-text combo-textarea" rows="4" autocomplete="off" style="width:10px" ></textarea><input type="hidden" class="combo-value"></span>'
        }
        var x = s(y).insertAfter(w);
        var v = s('<div class="combo-panel"></div>').appendTo("body");
        v.panel({
            doSize: false,
            closed: true,
            cls: "combo-p",
            style: {
                position: "absolute",
                zIndex: 10
            },
            onOpen: function () {
                var z = s(this).panel("panel");
                if (s.fn.menu) {
                    z.css("z-index", s.fn.menu.defaults.zIndex++)
                } else {
                    if (s.fn.window) {
                        z.css("z-index", s.fn.window.defaults.zIndex++)
                    }
                }
                s(this).panel("resize")
            },
            onBeforeClose: function () {
                a(this)
            },
            onClose: function () {
                var z = s.data(w, "combo");
                if (z) {
                    z.options.onHidePanel.call(w)
                }
            }
        });
        var u = s(w).attr("name");
        if (u) {
            x.find("input.combo-value").attr("name", u);
            s(w).removeAttr("name").attr("comboName", u)
        }
        return {
            combo: x,
            panel: v
        }
    }
    function g(v) {
        var w = s.data(v, "combo");
        var u = w.options;
        var x = w.combo;
        if (u.hasDownArrow) {
            x.find(".combo-arrow").show()
        } else {
            x.find(".combo-arrow").hide()
        }
        b(v, u.disabled);
        q(v, u.readonly)
    }
    function p(v) {
        var w = s.data(v, "combo");
        var u = w.combo.find("input.combo-text");
        u.validatebox("destroy");
        w.panel.panel("destroy");
        w.combo.remove();
        s(v).remove()
    }
    function a(u) {
        s(u).find(".combo-f").each(function () {
            var v = s(this).combo("panel");
            if (v.is(":visible")) {
                v.panel("close")
            }
        })
    }
    function j(v) {
        var x = s.data(v, "combo");
        var z = x.options;
        var y = x.panel;
        var u = x.combo;
        var A = u.find(".combo-text");
        var w = u.find(".combo-arrow");
        s(document).unbind(".combo").bind("mousedown.combo", function (D) {
            var C = s(D.target).closest("span.combo,div.combo-p");
            if (C.length) {
                a(C);
                return
            }
            s("body>div.combo-p>div.combo-panel:visible").panel("close")
        });
        A.unbind(".combo");
        w.unbind(".combo");
        if (!z.disabled && !z.readonly) {
            A.bind("click.combo", function (D) {
                if (!z.editable) {
                    B.call(this)
                } else {
                    var C = s(this).closest("div.combo-panel");
                    s("div.combo-panel:visible").not(y).not(C).panel("close")
                }
            }).bind("keydown.combo paste.combo drop.combo", function (C) {
                switch (C.keyCode) {
                    case 38:
                        z.keyHandler.up.call(v, C);
                        break;
                    case 40:
                        z.keyHandler.down.call(v, C);
                        break;
                    case 37:
                        z.keyHandler.left.call(v, C);
                        break;
                    case 39:
                        z.keyHandler.right.call(v, C);
                        break;
                    case 13:
                        z.keyHandler.enter.call(v, C);
                        return true;
                    case 9:
                    case 27:
                        t(v);
                        break;
                    default:
                        if (z.editable) {
                            if (x.timer) {
                                clearTimeout(x.timer)
                            }
                            x.timer = setTimeout(function () {
                                var D = A.val();
                                if (x.previousValue != D) {
                                    x.previousValue = D;
                                    s(v).combo("showPanel");
                                    z.keyHandler.query.call(v, A.val(), C);
                                    s(v).combo("validate")
                                }
                            }, z.delay)
                        }
                }
            });
            w.bind("click.combo", function () {
                B.call(this)
            }).bind("mouseenter.combo", function () {
                s(this).addClass("combo-arrow-hover")
            }).bind("mouseleave.combo", function () {
                s(this).removeClass("combo-arrow-hover")
            })
        }
        function B() {
            if (y.is(":visible")) {
                t(v)
            } else {
                var C = s(this).closest("div.combo-panel");
                s("div.combo-panel:visible").not(y).not(C).panel("close");
                s(v).combo("showPanel")
            }
            A.focus()
        }
    }
    function h(A) {
        var x = s.data(A, "combo");
        var w = x.options;
        var u = x.combo;
        var y = x.panel;
        y.panel("move", {
            left: v(),
            top: z()
        });
        if (y.panel("options").closed) {
            y.panel("open");
            w.onShowPanel.call(A);
            s(A).combo("resizeByItem")
        } (function () {
            if (y.is(":visible")) {
                y.panel("move", {
                    left: v(),
                    top: z()
                });
                setTimeout(arguments.callee, 200)
            }
        })();

        function v() {
            var B = u.offset().left;
            if (w.panelAlign == "right") {
                B += u._outerWidth() - y._outerWidth()
            }
            if (B + y._outerWidth() > s(window)._outerWidth() + s(document).scrollLeft()) {
                B = s(window)._outerWidth() + s(document).scrollLeft() - y._outerWidth()
            }
            if (B < 0) {
                B = 0
            }
            return B
        }
        function z() {
            var C = u.offset().top + u._outerHeight();
            var B = ".add-combobox-item,.add-combotree-item,.add-combogrid-item";
            if (C + y._outerHeight() + s(B, y.parent())._outerHeight() + s(".search-combobox-item", y.parent())._outerHeight() > s(window)._outerHeight() + s(document).scrollTop()) {
                C = u.offset().top - y._outerHeight() - s(B, y.parent())._outerHeight() - s(".search-combobox-item", y.parent())._outerHeight()
            }
            if (C < s(document).scrollTop()) {
                C = u.offset().top + u._outerHeight()
            }
            return C
        }
    }
    function t(u) {
        var v = s.data(u, "combo");
        if (v) {
            v.panel && v.panel.panel("close")
        }
    }
    function k(u) {
        var v = s.data(u, "combo").options;
        var w = s(u).combo("textbox");
        w.validatebox(s.extend({}, v, {
            deltaX: (v.hasDownArrow ? v.deltaX : (v.deltaX > 0 ? 1 : -1))
        }))
    }
    function b(v, y) {
        var u = s.data(v, "combo");
        var w = u.options;
        var x = u.combo;
        if (y) {
            w.disabled = true;
            s(v).attr("disabled", true);
            x.find(".combo-value").attr("disabled", true);
            x.find(".combo-text").attr("disabled", true)
        } else {
            w.disabled = false;
            s(v).removeAttr("disabled");
            x.find(".combo-value").removeAttr("disabled");
            x.find(".combo-text").removeAttr("disabled")
        }
    }
    function q(u, x) {
        var y = s.data(u, "combo");
        var v = y.options;
        v.readonly = x == undefined ? true : x;
        var w = v.readonly ? true : (!v.editable);
        y.combo.find(".combo-text").attr("readonly", w).css("cursor", w ? "pointer" : "")
    }
    function m(v) {
        var y = s.data(v, "combo");
        var w = y.options;
        var u = y.combo;
        if (w.multiple) {
            u.find("input.combo-value").remove()
        } else {
            u.find("input.combo-value").val("")
        }
        var x = u.find("input.combo-text");
        x = x.length == 0 ? u.find("textarea.combo-text") : x;
        x.val("")
    }
    function r(w) {
        var v = s.data(w, "combo").combo;
        var u = v.find("input.combo-text");
        u = u.length == 0 ? v.find("textarea.combo-text") : u;
        return u.val()
    }
    function c(u, x) {
        var v = s.data(u, "combo");
        var w = v.combo.find("input.combo-text");
        w = w.length == 0 ? v.combo.find("textarea.combo-text") : w;
        if (w.val() != x) {
            w.val(x);
            s(u).combo("validate");
            v.previousValue = x
        }
    }
    function e(v) {
        var u = [];
        var w = s.data(v, "combo").combo;
        w.find("input.combo-value").each(function () {
            u.push(s(this).val())
        });
        return u
    }
    function d(B, x) {
        var w = s.data(B, "combo").options;
        var D = e(B);
        var A = s.data(B, "combo").combo;
        A.find("input.combo-value").remove();
        var z = s(B).attr("comboName");
        for (var v = 0; v < x.length; v++) {
            var E = s('<input type="hidden" class="combo-value">').appendTo(A);
            if (z) {
                E.attr("name", z)
            }
            E.val(x[v])
        }
        var C = [];
        for (var v = 0; v < D.length; v++) {
            C[v] = D[v]
        }
        var u = [];
        for (var v = 0; v < x.length; v++) {
            for (var y = 0; y < C.length; y++) {
                if (x[v] == C[y]) {
                    u.push(x[v]);
                    C.splice(y, 1);
                    break
                }
            }
        }
        if (u.length != x.length || x.length != D.length) {
            if (w.multiple) {
                w.onChange.call(B, x, D)
            } else {
                w.onChange.call(B, x[0], D[0])
            }
        }
    }
    function f(u) {
        var v = e(u);
        return v[0]
    }
    function n(v, u) {
        d(v, [u])
    }
    function o(w) {
        var u = s.data(w, "combo").options;
        var v = u.onChange;
        u.onChange = function () { };
        if (u.multiple) {
            if (u.value) {
                if (typeof u.value == "object") {
                    d(w, u.value)
                } else {
                    n(w, u.value)
                }
            } else {
                d(w, [])
            }
            u.originalValue = e(w)
        } else {
            n(w, u.value);
            u.originalValue = u.value
        }
        u.onChange = v
    }
    s.fn.combo = function (w, u) {
        if (typeof w == "string") {
            var v = s.fn.combo.methods[w];
            if (v) {
                return v(this, u)
            } else {
                return this.each(function () {
                    var x = s(this).combo("textbox");
                    x.validatebox(w, u)
                })
            }
        }
        w = w || {};
        return this.each(function () {
            var x = s.data(this, "combo");
            if (x) {
                s.extend(x.options, w)
            } else {
                var y = i(this);
                x = s.data(this, "combo", {
                    options: s.extend({}, s.fn.combo.defaults, s.fn.combo.parseOptions(this), w),
                    combo: y.combo,
                    panel: y.panel,
                    previousValue: null
                });
                s(this).removeAttr("disabled")
            }
            g(this);
            l(this);
            j(this);
            k(this);
            o(this)
        })
    };
    s.fn.combo.methods = {
        options: function (u) {
            return s.data(u[0], "combo").options
        },
        panel: function (u) {
            return s.data(u[0], "combo").panel
        },
        textbox: function (u) {
            return (s.data(u[0], "combo").combo.find("input.combo-text").length == 0) ? s.data(u[0], "combo").combo.find("textarea.combo-text") : s.data(u[0], "combo").combo.find("input.combo-text")
        },
        destroy: function (u) {
            return u.each(function () {
                p(this)
            })
        },
        resizeByItem: function (w) {
            var y = ".combobox-item:visible,.combobox-group:visible,div.tree-node:visible";
            var v = s(w).combo("panel");
            var z = s(w).combo("options");
            var u = "no-match-records";
            s("." + u, v).hide();
            if (s(w).combo("textbox").hasClass("datebox-input") || s(w).hasClass("combogrid-f")) {
                return
            }
            var A = v.find(y);
            if (A.length == 0) {
                if (s("." + u, v).length > 0) {
                    s("." + u, v).show()
                } else {
                    v.append(s("<div class='" + u + "' style='display: block;'>&nbsp;&nbsp;" + (z.hideNoMatch !== true ? HtmlLang.Write(LangModule.Common, "NoMatchRecords", "No Matched Records!") : "") + "</div>"))
                }
                A = s("." + u, v)
            }
            B(v, A);
            x(w);

            function B(C, E) {
                if (E == undefined) {
                    E = C.find(y)
                }
                var D = 0;
                E.each(function () {
                    D += s(this).outerHeight()
                });
                if (E.length > 0 && C.outerWidth() < C.get(0).scrollWidth) {
                    D += 18
                }
                var F = C.outerHeight();
                C.height(D > 198 ? 198 : D)
            }
            function x(Q, L) {
                var K = s(Q).combo("panel");
                var D = s(Q).data("combo").options;
                var C = K[0].scrollWidth;
                D.autoSizePanel = D.autoSizePanel == undefined ? true : D.autoSizePanel;
                K.css("overflow-x", "hidden");
                if (D.autoSizePanel) {
                    var J = K.width();
                    var I = K.find(y);
                    I.css("display", "inline-block");
                    if (I && I.length > 0) {
                        var H = I.length;
                        for (var M = 0; M < H; M++) {
                            var R = I[M];
                            var G = 0;
                            if (R.clientHeight < R.offsetHeight) {
                                G = 10
                            }
                            J = s(R).outerWidth(true) > J - G ? s(R).outerWidth(true) + G : J
                        }
                    }
                    I.css("display", "block");
                    if (J != K.width()) {
                        J += 10
                    }
                    var P = 0;
                    var E = s(Q).closest(".m-imain");
                    if (E && E.length > 0) {
                        var O = E.width();
                        var N = s(K).offset().left;
                        var P = O - N - J
                    }
                    if (P < 0) {
                        J = O - N - 10
                    } else {
                        J = J > 500 ? 500 : J
                    }
                    var F = s(Q).attr("defaultWidth");
                    if (F) {
                        J = +F
                    }
                    K.parent().width(J);
                    K.width(J)
                } else {
                    if (C >= K.width()) {
                        K.find(".combobox-item").width(C)
                    }
                }
                if (L && s.isFunction(L)) {
                    L()
                }
            }
        },
        resize: function (u, v) {
            return u.each(function () {
                l(this, v)
            })
        },
        showPanel: function (u) {
            return u.each(function () {
                h(this)
            })
        },
        hidePanel: function (u) {
            return u.each(function () {
                t(this)
            })
        },
        disable: function (u) {
            return u.each(function () {
                b(this, true);
                j(this)
            })
        },
        enable: function (u) {
            return u.each(function () {
                b(this, false);
                j(this)
            })
        },
        readonly: function (u, v) {
            return u.each(function () {
                q(this, v);
                j(this)
            })
        },
        isValid: function (u) {
            var v = s.data(u[0], "combo").combo.find("input.combo-text");
            return v.validatebox("isValid")
        },
        clear: function (u) {
            return u.each(function () {
                m(this)
            })
        },
        reset: function (u) {
            return u.each(function () {
                var v = s.data(this, "combo").options;
                if (v.multiple) {
                    s(this).combo("setValues", v.originalValue)
                } else {
                    s(this).combo("setValue", v.originalValue)
                }
            })
        },
        getText: function (u) {
            return r(u[0])
        },
        setText: function (u, v) {
            return u.each(function () {
                c(this, v)
            })
        },
        getValues: function (u) {
            return e(u[0])
        },
        setValues: function (u, v) {
            return u.each(function () {
                d(this, v)
            })
        },
        getValue: function (u) {
            return f(u[0])
        },
        setValue: function (u, v) {
            return u.each(function () {
                n(this, v)
            })
        }
    };
    s.fn.combo.parseOptions = function (u) {
        var v = s(u);
        return s.extend({}, s.fn.validatebox.parseOptions(u), s.parser.parseOptions(u, ["width", "height", "separator", "panelAlign",
            {
                panelWidth: "number",
                editable: "boolean",
                hasDownArrow: "boolean",
                delay: "number",
                selectOnNavigation: "boolean"
            }]), {
                panelHeight: (v.attr("panelHeight") == "auto" ? "auto" : parseInt(v.attr("panelHeight")) || undefined),
                multiple: (v.attr("multiple") ? true : undefined),
                disabled: (v.attr("disabled") ? true : undefined),
                readonly: (v.attr("readonly") ? true : undefined),
                value: (v.val() || undefined)
            })
    };
    s.fn.combo.defaults = s.extend({}, s.fn.validatebox.defaults, {
        width: "auto",
        height: 25,
        panelWidth: null,
        panelHeight: 200,
        panelAlign: "left",
        multiple: false,
        selectOnNavigation: false,
        separator: ",",
        editable: true,
        disabled: false,
        readonly: false,
        hasDownArrow: true,
        value: "",
        delay: 400,
        deltaX: 19,
        keyHandler: {
            up: function (u) { },
            down: function (u) { },
            left: function (u) { },
            right: function (u) { },
            enter: function (u) { },
            query: function (v, u) { }
        },
        onShowPanel: function () { },
        onHidePanel: function () { },
        onChange: function (u, v) { }
    })
})(jQuery);
(function (h) {
    var j = 0;

    function e(n, q) {
        var o = h.data(n, "combobox");
        var r = o.options;
        var p = o.data;
        for (var s = 0; s < p.length; s++) {
            if (p[s][r.valueField] == q) {
                return s
            }
        }
        return -1
    }
    function f(p, o) {
        var q = h.data(p, "combobox").options;
        var r = h(p).combo("panel");
        var s = q.finder.getEl(p, o);
        if (s.length) {
            if (s.position().top <= 0) {
                var n = r.scrollTop() + s.position().top;
                r.scrollTop(n)
            } else {
                if (s.position().top + s.outerHeight() > r.height()) {
                    var n = r.scrollTop() + s.position().top + s.outerHeight() - r.height();
                    r.scrollTop(n)
                }
            }
        }
    }
    function l(t, n) {
        var s = h.data(t, "combobox").options;
        var q = h(t).combobox("panel");
        var u = q.children("div.combobox-item-hover");
        if (!u.length) {
            u = q.children("div.combobox-item-selected")
        }
        u.removeClass("combobox-item-hover");
        var o = "div.combobox-item:visible:not(.combobox-item-disabled):first";
        var r = "div.combobox-item:visible:not(.combobox-item-disabled):last";
        if (!u.length) {
            u = q.children(n == "next" ? o : r)
        } else {
            if (n == "next") {
                u = u.nextAll(o);
                if (!u.length) {
                    u = q.children(o)
                }
            } else {
                u = u.prevAll(o);
                if (!u.length) {
                    u = q.children(r)
                }
            }
        }
        if (u.length) {
            u.addClass("combobox-item-hover");
            var p = s.finder.getRow(t, u);
            if (p) {
                f(t, p[s.valueField]);
                if (s.selectOnNavigation) {
                    d(t, p[s.valueField])
                }
                if (s.navigation && h.isFunction(s.navigation)) {
                    s.navigation(t, p[s.valueField])
                }
            }
        }
    }
    function d(p, q) {
        var n = h.data(p, "combobox").options;
        var o = h(p).combo("getValues");
        if (h.inArray(q + "", o) == -1) {
            if (n.multiple) {
                o.push(q)
            } else {
                o = [q]
            }
        }
        g(p, o);
        n.onSelect.call(p, n.finder.getRow(p, q), p)
    }
    function a(q, n) {
        var o = h.data(q, "combobox").options;
        var r = h(q).combo("getValues");
        var p = h.inArray(n + "", r);
        if (p >= 0) {
            r.splice(p, 1);
            g(q, r);
            o.onUnselect.call(q, o.finder.getRow(q, n))
        }
    }
    function g(q, z, t) {
        var u = h.data(q, "combobox").options;
        var o = h(q).combo("panel");
        o.find("div.combobox-item-selected").removeClass("combobox-item-selected");
        var r = [],
            n = [];
        for (var x = 0; x < z.length; x++) {
            var y = z[x];
            var w = "";
            u.finder.getEl(q, y).addClass("combobox-item-selected");
            var p = u.finder.getRow(q, y);
            if (p) {
                w = p[u.textField];
                if (w != undefined && w != null && w.length > 0) {
                    w = mText.decode(w)
                }
            }
            r.push(y);
            if (n.indexOf(w) < 0) {
                n.push(w)
            }
        }
        h(q).combo("setValues", r);
        if (u.navigation && h.isFunction(u.navigation)) {
            u.navigation(q, r)
        }
        if (!t) {
            h(q).combo("setText", n.join(u.separator))
        }
    }
    function c(o, B, q) {
        var A = h.data(o, "combobox");
        if (!A || !A.options) {
            return
        }
        var p = A.options;
        A.data = p.loadFilter.call(o, B);
        A.groups = [];
        B = A.data;
        var D = h(o).combobox("getValues");
        var r = h(o).combobox("getValue");
        var H = [];
        var u = undefined;
        var z = new Array();
        var x = 0;
        for (var y = 0; y < B.length; y++) {
            var n = B[y];
            if (p.hideItemKey) {
                if (n[p.hideItemKey] == p.hideItemValue) {
                    continue
                }
            }
            var w = n[p.valueField] + "";
            var t = mText.encode(n[p.textField]);
            var E = n[p.groupField];
            if (t != undefined && r != undefined && t != "" && r != "" && t == h.trim(r)) {
                z.push(w)
            }
            if (E) {
                if (u != E) {
                    u = E;
                    A.groups.push(E);
                    H.push('<div id="' + (A.groupIdPrefix + "_" + (A.groups.length - 1)) + '" class="combobox-group">');
                    H.push(p.groupFormatter ? p.groupFormatter.call(o, E) : E);
                    H.push("</div>")
                }
            } else {
                u = undefined
            }
            var C = "combobox-item" + (n.disabled ? " combobox-item-disabled" : "") + (E ? " combobox-gitem" : "");
            var G = p.formatter ? p.formatter.call(o, n) : "";
            if (G && G.trim() && G.indexOf("<") != 0) {
                G = mText.encode(G)
            }
            var F = p.formatter ? G : t;
            H.push('<div id="' + (A.itemIdPrefix + "_" + y) + '" class="' + C + "\"  title='" + t + "'>");
            H.push(F);
            H.push("</div>");
            if (n.selected && h.inArray(w, D) == -1) {
                D.push(w)
            }
            x++
        }
        h(o).combo("panel").html(H.join(""));
        if (p.multiple) {
            g(o, D, q)
        } else {
            g(o, D.length ? [D[D.length - 1]] : [], q)
        }
        if (h(o).combo("panel").is(":visible") && p.mode !== "remote") {
            h(o).combo("textbox").selectAll()
        }
        p.onLoadSuccess.call(o, B);
        h(o).combo("resizeByItem")
    }
    function k(q, s, n, r, p) {
        var o = h.data(q, "combobox").options;
        if (s) {
            o.url = s
        }
        n = n || {};
        if (o.queryParams == undefined) {
            o.queryParams = {}
        }
        if (p != undefined) {
            o.queryParams.v = p
        }
        n = h.extend(o.queryParams || {}, n);
        if (o.onBeforeLoad.call(q, n) == false) {
            return
        }
        o.loader.call(q, n, function (t) {
            c(q, t, r);
            if (p != undefined && p != "") {
                g(q, [p])
            }
        }, function () {
            o.onLoadError.apply(this, arguments)
        })
    }
    function i(n, x) {
        var u = h.data(n, "combobox");
        var s = u.options;
        if (s.multiple && !x) {
            g(n, [], true)
        } else {
            g(n, [x], true)
        }
        if (s.mode == "remote" && s.url) {
            k(n, s.url, {
                q: x
            }, true)
        } else {
            var p = h(n).combo("panel");
            p.find("div.combobox-item-selected,div.combobox-item-hover").removeClass("combobox-item-selected combobox-item-hover");
            p.find("div.combobox-item,div.combobox-group").hide();
            var o = u.data;
            var t = [];
            var v = [];
            var r = 0;
            var w = s.multiple ? x.split(s.separator) : [x];
            h.map(w, function (G) {
                G = h.trim(G);
                var F = undefined;
                var E = 0;
                var D = h(n).combo("panel");
                for (var y = 0; y < o.length; y++) {
                    var A = o[y];
                    if (s.filter.call(n, G, A)) {
                        var C = A[s.valueField];
                        var B = A[s.textField];
                        var z = A[s.groupField];
                        var H = s.finder.getEl(n, C).show();
                        G && v.push(C);
                        if (B.toLowerCase() == G.toLowerCase()) {
                            t.push(C);
                            H.addClass("combobox-item-selected")
                        }
                        if (s.groupField && F != z) {
                            h("#" + u.groupIdPrefix + "_" + h.inArray(z, u.groups)).show();
                            F = z
                        }
                        E += H.height();
                        r++
                    }
                }
                h(n).combo("resizeByItem")
            });
            if (v.length >= 1 && t.length == 0) {
                t.push(v[0])
            }
            g(n, t, true)
        }
    }
    function m(n) {
        var u = h(n);
        var s = u.combobox("options");
        var r = u.combobox("panel");
        var v = r.children("div.combobox-item-hover");
        v = v.length ? v : r.children("div.combobox-item-selected");
        if (v.length) {
            var p = s.finder.getRow(n, v);
            var o = p[s.valueField];
            if (s.multiple) {
                if (v.hasClass("combobox-item-selected")) {
                    u.combobox("unselect", o)
                } else {
                    u.combobox("select", o)
                }
            } else {
                u.combobox("select", o)
            }
        }
        if (u.attr("destroyed") != "1" && u.combobox("textbox") && u.combobox("textbox").is(":visible")) {
            var q = [];
            h.map(u.combobox("getValues"), function (t) {
                if (e(n, t) >= 0) {
                    q.push(t)
                }
            });
            if (q.length > 0) {
                u.combobox("setValues", q)
            }
            if (!s.multiple) {
                u.combobox("hidePanel")
            }
        }
    }
    function b(n) {
        var o = h.data(n, "combobox");
        var p = o.options;
        j++;
        o.itemIdPrefix = "_easyui_combobox_i" + j;
        o.groupIdPrefix = "_easyui_combobox_g" + j;
        h(n).addClass("combobox-f");
        h(n).combo(h.extend({}, p, {
            onShowPanel: function () {
                h(n).combo("panel").find("div.combobox-item,div.combobox-group").show();
                f(n, h(n).combobox("getValue"));
                p.onShowPanel.call(n);
                h(n).combo("resizeByItem")
            }
        }));
        h(n).combo("textbox").parent().off("click.hidPanel").bind("click.hidPanel", function () {
            h(n).combo("resizeByItem")
        });
        h(n).combo("textbox").off("focus.hidPanel").bind("focus.hidPanel", function (q) {
            h(n).combo("resizeByItem")
        }).off("blur.setValue").bind("blur.setValue", function () {
            if (!p.required) {
                return
            }
            var v = h(this).val();
            if (v == undefined || v == "") {
                return
            }
            v = v.trim();
            if (v == "") {
                return
            }
            v = v.toLowerCase();
            var q = "";
            var w = o.data;
            var t = h(n).combobox("getValue");
            for (var r = 0; r < w.length; r++) {
                var u = w[r];
                if (p.hideItemKey) {
                    if (u[p.hideItemKey] == p.hideItemValue) {
                        continue
                    }
                }
                var x = u[p.textField];
                if (x != "" && x.toLowerCase() == v) {
                    q = u[p.valueField] + "";
                    break
                }
            }
            if (t != q) {
                p.queryParams.v = q;
                p.queryParams.q = "";
                h(n).combobox("select", q)
            }
        });
        h(n).combo("panel").unbind().bind("mouseover", function (r) {
            h(this).children("div.combobox-item-hover").removeClass("combobox-item-hover");
            var q = h(r.target).closest("div.combobox-item");
            if (q.length > 0 && !q.hasClass("combobox-item-disabled")) {
                q.addClass("combobox-item-hover");
                if (p.navigation && h.isFunction(p.navigation)) {
                    p.navigation(n, p.finder.getRow(n, q)[p.valueField])
                }
            }
            r.stopPropagation()
        }).bind("mouseout", function (q) {
            h(q.target).closest("div.combobox-item").removeClass("combobox-item-hover");
            q.stopPropagation()
        }).bind("click", function (t) {
            var r = h(t.target).closest("div.combobox-item");
            if (!r.length || r.hasClass("combobox-item-disabled")) {
                return t.stopPropagation()
            }
            var q = p.finder.getRow(n, r);
            if (!q) {
                return t.stopPropagation()
            }
            var s = q[p.valueField];
            if (p.multiple) {
                if (r.hasClass("combobox-item-selected")) {
                    a(n, s)
                } else {
                    d(n, s)
                }
            } else {
                d(n, s);
                h(n).combo("hidePanel")
            }
            t.stopPropagation()
        })
    }
    h.fn.combobox = function (o, p) {
        if (typeof o == "string") {
            var n = h.fn.combobox.methods[o];
            if (n) {
                return n(this, p)
            } else {
                return this.combo(o, p)
            }
        }
        o = o || {};
        return this.each(function () {
            var r = h.data(this, "combobox");
            if (r) {
                h.extend(r.options, o);
                b(this)
            } else {
                r = h.data(this, "combobox", {
                    options: h.extend({}, h.fn.combobox.defaults, h.fn.combobox.parseOptions(this), o),
                    data: []
                });
                b(this);
                var q = h.fn.combobox.parseData(this);
                if (q.length) {
                    c(this, q)
                }
            }
            if (r.options.data) {
                c(this, r.options.data)
            }
            k(this)
        })
    };
    h.fn.combobox.methods = {
        options: function (n) {
            var o = n.combo("options");
            return h.extend(h.data(n[0], "combobox").options, {
                originalValue: o.originalValue,
                disabled: o.disabled,
                readonly: o.readonly
            })
        },
        getData: function (n) {
            return h.data(n[0], "combobox").data
        },
        setValues: function (n, o) {
            return n.each(function () {
                g(this, o)
            })
        },
        setValue: function (n, o) {
            return n.each(function () {
                var q = h(this).combobox("options");
                if (o != undefined && o != null && o != "" && q.mode == "remote" && q.queryParams.v != o) {
                    var r = false;
                    var p = q.finder.getRow(this, o);
                    if (p) {
                        g(this, [o])
                    } else {
                        k(this, null, {
                            v: o
                        }, true, [o])
                    }
                } else {
                    g(this, [o])
                }
            })
        },
        clear: function (n) {
            return n.each(function () {
                h(this).combo("clear");
                var o = h(this).combo("panel");
                o.find("div.combobox-item-selected").removeClass("combobox-item-selected")
            })
        },
        reset: function (n) {
            return n.each(function () {
                var o = h(this).combobox("options");
                if (o.multiple) {
                    h(this).combobox("setValues", o.originalValue)
                } else {
                    h(this).combobox("setValue", o.originalValue)
                }
            })
        },
        loadData: function (n, o) {
            return n.each(function () {
                c(this, o)
            })
        },
        reload: function (n, o) {
            return n.each(function () {
                k(this, o)
            })
        },
        select: function (n, o) {
            return n.each(function () {
                d(this, o)
            })
        },
        unselect: function (n, o) {
            return n.each(function () {
                a(this, o)
            })
        }
    };
    h.fn.combobox.parseOptions = function (n) {
        var o = h(n);
        return h.extend({}, h.fn.combo.parseOptions(n), h.parser.parseOptions(n, ["valueField", "textField", "groupField", "mode", "method", "url"]))
    };
    h.fn.combobox.parseData = function (q) {
        var n = [];
        var o = h(q).combobox("options");
        h(q).children().each(function () {
            if (this.tagName.toLowerCase() == "optgroup") {
                var r = h(this).attr("label");
                h(this).children().each(function () {
                    p(this, r)
                })
            } else {
                p(this)
            }
        });
        return n;

        function p(v, u) {
            var s = h(v);
            var r = {};
            r[o.valueField] = s.attr("value") != undefined ? s.attr("value") : s.text();
            r[o.textField] = s.text();
            r.selected = s.is(":selected");
            r.disabled = s.is(":disabled");
            if (u) {
                o.groupField = o.groupField || "group";
                r[o.groupField] = u
            }
            n.push(r)
        }
    };
    h.fn.combobox.defaults = h.extend({}, h.fn.combo.defaults, {
        valueField: "value",
        textField: "text",
        groupField: null,
        groupFormatter: function (n) {
            return n
        },
        mode: "local",
        method: "post",
        url: null,
        data: null,
        navigation: null,
        keyHandler: {
            up: function (n) {
                l(this, "prev");
                n.preventDefault()
            },
            down: function (n) {
                l(this, "next");
                n.preventDefault()
            },
            left: function (n) { },
            right: function (n) { },
            enter: function (n) {
                m(this)
            },
            query: function (o, n) {
                i(this, o)
            }
        },
        filter: function (n, r) {
            var o = h(this).combobox("options");
            var p = r[o.textField] || "";
            if (h(this).hasClass("m-account-combobox")) {
                if (h.isNumeric(n) && n.toLowerCase().indexOf("%") != 0) {
                    return p.toLowerCase().indexOf(n.toLowerCase()) == 0
                }
                if (n.toLowerCase().indexOf("%") == 0) {
                    n = n.replace("%", "")
                }
            }
            return p.toLowerCase().indexOf(n.toLowerCase()) > -1
        },
        formatter: function (n) {
            var o = h(this).combobox("options");
            return n[o.textField]
        },
        loader: function (p, q, n) {
            var o = h(this).combobox("options");
            if (!o.url) {
                return false
            }
            h.ajax({
                type: o.method,
                url: o.url,
                data: p,
                dataType: "json",
                success: function (r) {
                    q(r.Data)
                },
                error: function () {
                    n.apply(this, arguments)
                }
            })
        },
        loadFilter: function (n) {
            return n
        },
        finder: {
            getEl: function (o, p) {
                var n = e(o, p);
                var q = h.data(o, "combobox").itemIdPrefix + "_" + n;
                return h("#" + q)
            },
            getRow: function (o, r) {
                var n = h.data(o, "combobox");
                var q = (r instanceof jQuery) ? r.attr("id").substr(n.itemIdPrefix.length + 1) : e(o, r);
                return n.data[parseInt(q)]
            }
        },
        onBeforeLoad: function (n) { },
        onLoadSuccess: function () { },
        onLoadError: function () { },
        onSelect: function (n) { },
        onUnselect: function (n) { }
    })
})(jQuery);
(function (d) {
    function a(f) {
        var h = d.data(f, "combotree");
        var g = h.options;
        var i = h.tree;
        d(f).addClass("combotree-f");
        d(f).combo(g);
        var e = d(f).combo("panel");
        if (!i) {
            i = d("<ul></ul>").appendTo(e);
            d.data(f, "combotree").tree = i
        }
        d(f).parent().find(".combo-text").die("click").bind("click", function () {
            d(f).combo("showPanel")
        });
        d(f).combo(d.extend({}, g, {
            onShowPanel: function () {
                g.onShowPanel.call(f);
                if (g.hideItemKey == undefined) {
                    g.hideItemKey = "MIsActive"
                }
                if (g.hideItemValue == undefined) {
                    g.hideItemValue = "0"
                }
                var o = d(this).combo("panel");
                o.css("overflow-x", "hidden");
                var j = o.find(".tree-node");
                if (j && j.length > 0) {
                    var p = o.width();
                    var l = j.length;
                    for (var k = 0; k < l; k++) {
                        var q = j[k];
                        var n = i.tree("getNode", q);
                        if (n) {
                            if (n[g.hideItemKey] == g.hideItemValue) {
                                d(q).addClass("hidden-item").hide();
                                continue
                            }
                        }
                        var m = 0;
                        d(q).find("span").each(function () {
                            m += d(this).width();
                            if (d(this).hasClass("tree-title")) {
                                var r = d(this).text();
                                d(q).attr("title", r)
                            }
                        });
                        p = m > p ? m : p
                    }
                    if (p != o.width()) {
                        p += 10
                    }
                    p = p > 500 ? 500 : p;
                    if (p > 0) {
                        o.parent().css("width", p);
                        o.css("width", p)
                    }
                }
            }
        }));
        i.tree(d.extend({}, g, {
            checkbox: g.multiple,
            onLoadSuccess: function (r, o) {
                var q = d(f).combotree("getValues");
                if (g.multiple) {
                    var m = i.tree("getChecked");
                    for (var j = 0; j < m.length; j++) {
                        var l = m[j].id;
                        (function () {
                            for (var s = 0; s < q.length; s++) {
                                if (l == q[s]) {
                                    return
                                }
                            }
                            q.push(l)
                        })()
                    }
                }
                var p = d(this).tree("options");
                var n = p.onCheck;
                var k = p.onSelect;
                p.onCheck = p.onSelect = function () { };
                d(f).combotree("setValues", q);
                p.onCheck = n;
                p.onSelect = k;
                g.onLoadSuccess.call(this, r, o)
            },
            onClick: function (j) {
                if (g.multiple) {
                    d(this).tree(j.checked ? "uncheck" : "check", j.target)
                } else {
                    d(f).combo("hidePanel")
                }
                b(f);
                g.onClick.call(this, j)
            },
            onCheck: function (j, k) {
                b(f);
                g.onCheck.call(this, j, k)
            }
        }))
    }
    function b(e) {
        var m = d.data(e, "combotree");
        var k = m.options;
        var h = m.tree;
        var l = [],
            f = [];
        if (k.multiple) {
            var g = h.tree("getChecked");
            for (var n = 0; n < g.length; n++) {
                l.push(g[n].id);
                f.push(g[n].text)
            }
        } else {
            var j = h.tree("getSelected");
            if (j) {
                l.push(j.id);
                f.push(j.text)
            }
        }
        d(e).combo("setValues", l).combo("setText", f.join(k.separator))
    }
    function c(j, e) {
        var k = d.data(j, "combotree").options;
        var f = d.data(j, "combotree").tree;
        f.find("span.tree-checkbox").addClass("tree-checkbox0").removeClass("tree-checkbox1 tree-checkbox2");
        var h = [],
            o = [];
        for (var m = 0; m < e.length; m++) {
            var n = e[m];
            var l = n;
            var g = f.tree("find", n);
            if (g) {
                l = g.text;
                f.tree("check", g.target);
                f.tree("select", g.target)
            }
            h.push(n);
            o.push(l)
        }
        d(j).combo("setValues", h).combo("setText", o.join(k.separator))
    }
    d.fn.combotree = function (f, g) {
        if (typeof f == "string") {
            var e = d.fn.combotree.methods[f];
            if (e) {
                return e(this, g)
            } else {
                return this.combo(f, g)
            }
        }
        f = f || {};
        return this.each(function () {
            var h = d.data(this, "combotree");
            if (h) {
                d.extend(h.options, f)
            } else {
                d.data(this, "combotree", {
                    options: d.extend({}, d.fn.combotree.defaults, d.fn.combotree.parseOptions(this), f)
                })
            }
            a(this)
        })
    };
    d.fn.combotree.methods = {
        options: function (e) {
            var f = e.combo("options");
            return d.extend(d.data(e[0], "combotree").options, {
                originalValue: f.originalValue,
                disabled: f.disabled,
                readonly: f.readonly
            })
        },
        tree: function (e) {
            return d.data(e[0], "combotree").tree
        },
        loadData: function (e, f) {
            return e.each(function () {
                var g = d.data(this, "combotree").options;
                g.data = f;
                var h = d.data(this, "combotree").tree;
                h.tree("loadData", f)
            })
        },
        reload: function (e, f) {
            return e.each(function () {
                var g = d.data(this, "combotree").options;
                var h = d.data(this, "combotree").tree;
                if (f) {
                    g.url = f
                }
                h.tree({
                    url: g.url
                })
            })
        },
        setValues: function (e, f) {
            return e.each(function () {
                c(this, f)
            })
        },
        setValue: function (e, f) {
            return e.each(function () {
                c(this, [f])
            })
        },
        clear: function (e) {
            return e.each(function () {
                var h = d.data(this, "combotree").tree;
                h.find("div.tree-node-selected").removeClass("tree-node-selected");
                var g = h.tree("getChecked");
                for (var f = 0; f < g.length; f++) {
                    h.tree("uncheck", g[f].target)
                }
                d(this).combo("clear")
            })
        },
        reset: function (e) {
            return e.each(function () {
                var f = d(this).combotree("options");
                if (f.multiple) {
                    d(this).combotree("setValues", f.originalValue)
                } else {
                    d(this).combotree("setValue", f.originalValue)
                }
            })
        }
    };
    d.fn.combotree.parseOptions = function (e) {
        return d.extend({}, d.fn.combo.parseOptions(e), d.fn.tree.parseOptions(e))
    };
    d.fn.combotree.defaults = d.extend({}, d.fn.combo.defaults, d.fn.tree.defaults, {
        editable: false
    })
})(jQuery);
(function (c) {
    function d(g) {
        var l = c.data(g, "combogrid");
        var k = l.options;
        var i = l.grid;
        c(g).addClass("combogrid-f").combo(k);
        var m = c(g).combo("panel");
        if (!i) {
            i = c("<table></table>").appendTo(m);
            l.grid = i
        }
        i.datagrid(c.extend({}, k, {
            border: false,
            fit: true,
            singleSelect: (!k.multiple),
            onLoadSuccess: function (p) {
                var n = c(g).combo("getValues");
                var o = k.onSelect;
                k.onSelect = function () { };
                f(g, n, l.remainText);
                k.onSelect = o;
                k.onLoadSuccess.apply(g, arguments)
            },
            onClickRow: h,
            onSelect: function (o, n) {
                j();
                k.onSelect.call(this, o, n)
            },
            onUnselect: function (o, n) {
                j();
                k.onUnselect.call(this, o, n)
            },
            onSelectAll: function (n) {
                j();
                k.onSelectAll.call(this, n)
            },
            onUnselectAll: function (n) {
                if (k.multiple) {
                    j()
                }
                k.onUnselectAll.call(this, n)
            }
        }));

        function h(o, n) {
            l.remainText = false;
            j();
            if (!k.multiple) {
                c(g).combo("hidePanel")
            }
            k.onClickRow.call(this, o, n)
        }
        function j() {
            var q = i.datagrid("getSelections");
            var p = [],
                o = [];
            for (var n = 0; n < q.length; n++) {
                p.push(q[n][k.idField]);
                o.push(q[n][k.textField])
            }
            if (!k.multiple) {
                c(g).combo("setValues", (p.length ? p : [""]))
            } else {
                c(g).combo("setValues", p)
            }
            if (!l.remainText) {
                c(g).combo("setText", o.join(k.separator))
            }
        }
    }
    function a(l, m) {
        var i = c.data(l, "combogrid");
        var k = i.options;
        var j = i.grid;
        var n = j.datagrid("getRows").length;
        if (!n) {
            return
        }
        var g = k.finder.getTr(j[0], null, "highlight");
        if (!g.length) {
            g = k.finder.getTr(j[0], null, "selected")
        }
        var h;
        if (!g.length) {
            h = (m == "next" ? 0 : n - 1)
        } else {
            var h = parseInt(g.attr("datagrid-row-index"));
            h += (m == "next" ? 1 : -1);
            if (h < 0) {
                h = n - 1
            }
            if (h >= n) {
                h = 0
            }
        }
        j.datagrid("highlightRow", h);
        if (k.selectOnNavigation) {
            i.remainText = false;
            j.datagrid("selectRow", h)
        }
    }
    function f(u, o, n) {
        var v = c.data(u, "combogrid");
        var m = v.options;
        var t = v.grid;
        var j = t.datagrid("getRows");
        var l = [];
        var k = c(u).combo("getValues");
        var g = c(u).combo("options");
        var q = g.onChange;
        g.onChange = function () { };
        t.datagrid("clearSelections");
        for (var p = 0; p < o.length; p++) {
            var h = t.datagrid("getRowIndex", o[p]);
            if (h >= 0) {
                t.datagrid("selectRow", h);
                l.push(j[h][m.textField])
            } else {
                l.push(o[p])
            }
        }
        c(u).combo("setValues", k);
        g.onChange = q;
        c(u).combo("setValues", o);
        if (!n) {
            var r = l.join(m.separator);
            if (c(u).combo("getText") != r) {
                c(u).combo("setText", r)
            }
        }
    }
    function e(h, l) {
        var k = c.data(h, "combogrid");
        var j = k.options;
        var i = k.grid;
        k.remainText = true;
        if (j.multiple && !l) {
            f(h, [], true)
        } else {
            f(h, [l], true)
        }
        if (j.mode == "remote") {
            i.datagrid("clearSelections");
            i.datagrid("load", c.extend({}, j.queryParams, {
                q: l
            }))
        } else {
            if (!l) {
                return
            }
            i.datagrid("clearSelections").datagrid("highlightRow", -1);
            var m = i.datagrid("getRows");
            var g = j.multiple ? l.split(j.separator) : [l];
            c.map(g, function (n) {
                n = c.trim(n);
                if (n) {
                    c.map(m, function (o, p) {
                        if (n == o[j.textField]) {
                            i.datagrid("selectRow", p)
                        } else {
                            if (j.filter.call(h, n, o)) {
                                i.datagrid("highlightRow", p)
                            }
                        }
                    })
                }
            })
        }
    }
    function b(g) {
        var m = c.data(g, "combogrid");
        var l = m.options;
        var j = m.grid;
        var h = l.finder.getTr(j[0], null, "highlight");
        m.remainText = false;
        if (h.length) {
            var k = parseInt(h.attr("datagrid-row-index"));
            if (l.multiple) {
                if (h.hasClass("datagrid-row-selected")) {
                    j.datagrid("unselectRow", k)
                } else {
                    j.datagrid("selectRow", k)
                }
            } else {
                j.datagrid("selectRow", k)
            }
        }
        var i = [];
        c.map(j.datagrid("getSelections"), function (n) {
            i.push(n[l.idField])
        });
        c(g).combogrid("setValues", i);
        if (!l.multiple) {
            c(g).combogrid("hidePanel")
        }
    }
    c.fn.combogrid = function (h, i) {
        if (typeof h == "string") {
            var g = c.fn.combogrid.methods[h];
            if (g) {
                return g(this, i)
            } else {
                return this.combo(h, i)
            }
        }
        h = h || {};
        return this.each(function () {
            var j = c.data(this, "combogrid");
            if (j) {
                c.extend(j.options, h)
            } else {
                j = c.data(this, "combogrid", {
                    options: c.extend({}, c.fn.combogrid.defaults, c.fn.combogrid.parseOptions(this), h)
                })
            }
            d(this)
        })
    };
    c.fn.combogrid.methods = {
        options: function (g) {
            var h = g.combo("options");
            return c.extend(c.data(g[0], "combogrid").options, {
                originalValue: h.originalValue,
                disabled: h.disabled,
                readonly: h.readonly
            })
        },
        grid: function (g) {
            return c.data(g[0], "combogrid").grid
        },
        setValues: function (g, h) {
            return g.each(function () {
                f(this, h)
            })
        },
        setValue: function (g, h) {
            return g.each(function () {
                f(this, [h])
            })
        },
        clear: function (g) {
            return g.each(function () {
                c(this).combogrid("grid").datagrid("clearSelections");
                c(this).combo("clear")
            })
        },
        reset: function (g) {
            return g.each(function () {
                var h = c(this).combogrid("options");
                if (h.multiple) {
                    c(this).combogrid("setValues", h.originalValue)
                } else {
                    c(this).combogrid("setValue", h.originalValue)
                }
            })
        }
    };
    c.fn.combogrid.parseOptions = function (g) {
        var h = c(g);
        return c.extend({}, c.fn.combo.parseOptions(g), c.fn.datagrid.parseOptions(g), c.parser.parseOptions(g, ["idField", "textField", "mode"]))
    };
    c.fn.combogrid.defaults = c.extend({}, c.fn.combo.defaults, c.fn.datagrid.defaults, {
        loadMsg: null,
        idField: null,
        textField: null,
        mode: "local",
        keyHandler: {
            up: function (g) {
                a(this, "prev");
                g.preventDefault()
            },
            down: function (g) {
                a(this, "next");
                g.preventDefault()
            },
            left: function (g) { },
            right: function (g) { },
            enter: function (g) {
                b(this)
            },
            query: function (h, g) {
                e(this, h)
            }
        },
        filter: function (g, i) {
            var h = c(this).combogrid("options");
            return i[h.textField].toLowerCase().indexOf(g.toLowerCase()) > -1
        }
    })
})(jQuery);
(function (e) {
    function b(j) {
        var g = e.data(j, "datebox");
        var f = g.options;
        e(j).addClass("datebox-f").combo(e.extend({}, f, {
            onShowPanel: function () {
                i();
                c(j, e(j).datebox("getText"), true);
                f.onShowPanel.call(j)
            }
        }));
        e(j).combo("textbox").addClass("datebox-input");
        e(j).combo("textbox").parent().addClass("datebox");
        if (!g.calendar) {
            h()
        }
        c(j, f.value);

        function h() {
            var n = e(j).combo("panel").css("overflow", "hidden");
            n.panel("options").onBeforeDestroy = function () {
                var t = e(this).find(".calendar-shared");
                if (t.length) {
                    t.insertBefore(t[0].pholder)
                }
            };
            var s = e('<div class="datebox-calendar-inner"></div>').appendTo(n);
            if (f.sharedCalendar) {
                var k = e(f.sharedCalendar);
                if (!k[0].pholder) {
                    k[0].pholder = e('<div class="calendar-pholder" style="display:none"></div>').insertAfter(k)
                }
                k.addClass("calendar-shared").appendTo(s);
                if (!k.hasClass("calendar")) {
                    k.calendar()
                }
                g.calendar = k
            } else {
                g.calendar = e("<div></div>").appendTo(s).calendar()
            }
            e.extend(g.calendar.calendar("options"), {
                fit: true,
                border: false,
                onSelect: function (t) {
                    var u = e(this.target).datebox("options");
                    c(this.target, u.formatter.call(this.target, t));
                    e(this.target).combo("hidePanel");
                    u.onSelect.call(j, t)
                }
            });
            var r = e('<div class="datebox-button"><table cellspacing="0" cellpadding="0" style="width:100%"><tr></tr></table></div>').appendTo(n);
            var l = r.find("tr");
            for (var p = 0; p < f.buttons.length; p++) {
                var m = e("<td></td>").appendTo(l);
                var q = f.buttons[p];
                var o = e('<a href="javascript:void(0)"></a>').html(e.isFunction(q.text) ? q.text(j) : q.text).appendTo(m);
                o.bind("click", {
                    target: j,
                    handler: q.handler
                }, function (t) {
                    t.data.handler.call(this, t.data.target)
                })
            }
            l.find("td").css("width", (100 / f.buttons.length) + "%")
        }
        function i() {
            var m = e(j).combo("panel");
            var k = m.children("div.datebox-calendar-inner");
            m.children()._outerWidth(m.width());
            g.calendar.appendTo(k);
            g.calendar[0].target = j;
            if (f.panelHeight != "auto") {
                var l = m.height();
                m.children().not(k).each(function () {
                    l -= e(this).outerHeight()
                });
                k._outerHeight(l)
            }
            g.calendar.calendar("resize")
        }
    }
    function d(f, g) {
        c(f, g, true)
    }
    function a(g) {
        var i = e.data(g, "datebox");
        var f = i.options;
        var h = i.calendar.calendar("options").current;
        if (h) {
            c(g, f.formatter.call(g, h));
            e(g).combo("hidePanel")
        }
    }
    function c(f, i, j) {
        var g = e.data(f, "datebox");
        var h = g.options;
        var k = g.calendar;
        e(f).combo("setValue", i);
        k.calendar("moveTo", h.parser.call(f, i));
        if (!j) {
            if (i) {
                i = h.formatter.call(f, k.calendar("options").current);
                e(f).combo("setValue", i).combo("setText", i)
            } else {
                e(f).combo("setText", i)
            }
        }
    }
    e.fn.datebox = function (h, f) {
        if (typeof h == "string") {
            var g = e.fn.datebox.methods[h];
            if (g) {
                return g(this, f)
            } else {
                return this.combo(h, f)
            }
        }
        h = h || {};
        return this.each(function () {
            var i = e.data(this, "datebox");
            if (i) {
                e.extend(i.options, h)
            } else {
                e.data(this, "datebox", {
                    options: e.extend({}, e.fn.datebox.defaults, e.fn.datebox.parseOptions(this), h)
                })
            }
            b(this)
        })
    };
    e.fn.datebox.methods = {
        options: function (f) {
            var g = f.combo("options");
            return e.extend(e.data(f[0], "datebox").options, {
                originalValue: g.originalValue,
                disabled: g.disabled,
                readonly: g.readonly
            })
        },
        calendar: function (f) {
            return e.data(f[0], "datebox").calendar
        },
        setValue: function (f, g) {
            return f.each(function () {
                c(this, g)
            })
        },
        reset: function (f) {
            return f.each(function () {
                var g = e(this).datebox("options");
                e(this).datebox("setValue", g.originalValue)
            })
        }
    };
    e.fn.datebox.parseOptions = function (f) {
        return e.extend({}, e.fn.combo.parseOptions(f), e.parser.parseOptions(f, ["sharedCalendar"]))
    };
    e.fn.datebox.defaults = e.extend({}, e.fn.combo.defaults, {
        panelWidth: 180,
        panelHeight: "auto",
        sharedCalendar: null,
        keyHandler: {
            up: function (f) { },
            down: function (f) { },
            left: function (f) { },
            right: function (f) { },
            enter: function (f) {
                a(this)
            },
            query: function (g, f) {
                d(this, g)
            }
        },
        currentText: "Today",
        closeText: "Close",
        okText: "Ok",
        buttons: [{
            text: function (f) {
                return e(f).datebox("options").currentText
            },
            handler: function (f) {
                e(f).datebox("calendar").calendar({
                    year: new Date().getFullYear(),
                    month: new Date().getMonth() + 1,
                    current: new Date()
                });
                a(f)
            }
        }, {
            text: function (f) {
                return e(f).datebox("options").closeText
            },
            handler: function (f) {
                e(this).closest("div.combo-panel").panel("close")
            }
        }],
        formatter: e.mDate.formatter,
        parser: e.mDate.parser,
        onSelect: function (f) { }
    })
})(jQuery);
(function (e) {
    function c(g) {
        var j = e.data(g, "datetimebox");
        var h = j.options;
        e(g).datebox(e.extend({}, h, {
            onShowPanel: function () {
                var l = e(g).datetimebox("getValue");
                f(g, l, true);
                h.onShowPanel.call(g)
            },
            formatter: e.fn.datebox.defaults.formatter,
            parser: e.fn.datebox.defaults.parser
        }));
        e(g).removeClass("datebox-f").addClass("datetimebox-f");
        e(g).datebox("calendar").calendar({
            onSelect: function (l) {
                h.onSelect.call(g, l)
            }
        });
        var i = e(g).datebox("panel");
        if (!j.spinner) {
            var k = e('<div style="padding:2px"><input style="width:80px"></div>').insertAfter(i.children("div.datebox-calendar-inner"));
            j.spinner = k.children("input")
        }
        j.spinner.timespinner({
            showSeconds: h.showSeconds,
            separator: h.timeSeparator
        }).unbind(".datetimebox").bind("mousedown.datetimebox", function (l) {
            l.stopPropagation()
        });
        f(g, h.value)
    }
    function a(g) {
        var i = e(g).datetimebox("calendar");
        var h = e(g).datetimebox("spinner");
        var j = i.calendar("options").current;
        return new Date(j.getFullYear(), j.getMonth(), j.getDate(), h.timespinner("getHours"), h.timespinner("getMinutes"), h.timespinner("getSeconds"))
    }
    function b(h, g) {
        f(h, g, true)
    }
    function d(i) {
        var g = e.data(i, "datetimebox").options;
        var h = a(i);
        f(i, g.formatter.call(i, h));
        e(i).combo("hidePanel")
    }
    function f(g, l, h) {
        var k = e.data(g, "datetimebox").options;
        e(g).combo("setValue", l);
        if (!h) {
            if (l) {
                var i = k.parser.call(g, l);
                e(g).combo("setValue", k.formatter.call(g, i));
                e(g).combo("setText", k.formatter.call(g, i))
            } else {
                e(g).combo("setText", l)
            }
        }
        var i = k.parser.call(g, l);
        e(g).datetimebox("calendar").calendar("moveTo", i);
        e(g).datetimebox("spinner").timespinner("setValue", j(i));

        function j(o) {
            function m(p) {
                return (p < 10 ? "0" : "") + p
            }
            var n = [m(o.getHours()), m(o.getMinutes())];
            if (k.showSeconds) {
                n.push(m(o.getSeconds()))
            }
            return n.join(e(g).datetimebox("spinner").timespinner("options").separator)
        }
    }
    e.fn.datetimebox = function (i, g) {
        if (typeof i == "string") {
            var h = e.fn.datetimebox.methods[i];
            if (h) {
                return h(this, g)
            } else {
                return this.datebox(i, g)
            }
        }
        i = i || {};
        return this.each(function () {
            var j = e.data(this, "datetimebox");
            if (j) {
                e.extend(j.options, i)
            } else {
                e.data(this, "datetimebox", {
                    options: e.extend({}, e.fn.datetimebox.defaults, e.fn.datetimebox.parseOptions(this), i)
                })
            }
            c(this)
        })
    };
    e.fn.datetimebox.methods = {
        options: function (g) {
            var h = g.datebox("options");
            return e.extend(e.data(g[0], "datetimebox").options, {
                originalValue: h.originalValue,
                disabled: h.disabled,
                readonly: h.readonly
            })
        },
        spinner: function (g) {
            return e.data(g[0], "datetimebox").spinner
        },
        setValue: function (g, h) {
            return g.each(function () {
                f(this, h)
            })
        },
        reset: function (g) {
            return g.each(function () {
                var h = e(this).datetimebox("options");
                e(this).datetimebox("setValue", h.originalValue)
            })
        }
    };
    e.fn.datetimebox.parseOptions = function (g) {
        var h = e(g);
        return e.extend({}, e.fn.datebox.parseOptions(g), e.parser.parseOptions(g, ["timeSeparator",
            {
                showSeconds: "boolean"
            }]))
    };
    e.fn.datetimebox.defaults = e.extend({}, e.fn.datebox.defaults, {
        showSeconds: true,
        timeSeparator: ":",
        keyHandler: {
            up: function (g) { },
            down: function (g) { },
            left: function (g) { },
            right: function (g) { },
            enter: function (g) {
                d(this)
            },
            query: function (h, g) {
                b(this, h)
            }
        },
        buttons: [{
            text: function (g) {
                return e(g).datetimebox("options").currentText
            },
            handler: function (g) {
                e(g).datetimebox("calendar").calendar({
                    year: new Date().getFullYear(),
                    month: new Date().getMonth() + 1,
                    current: new Date()
                });
                d(g)
            }
        }, {
            text: function (g) {
                return e(g).datetimebox("options").okText
            },
            handler: function (g) {
                d(g)
            }
        }, {
            text: function (g) {
                return e(g).datetimebox("options").closeText
            },
            handler: function (g) {
                e(this).closest("div.combo-panel").panel("close")
            }
        }],
        formatter: e.mDate.formatter,
        parser: e.mDate.parser
    })
})(jQuery);
(function ($) {
    function init(_96e) {
        var _96f = $('<div class="slider"><div class="slider-inner"><a href="javascript:void(0)" class="slider-handle"></a><span class="slider-tip"></span></div><div class="slider-rule"></div><div class="slider-rulelabel"></div><div style="clear:both"></div><input type="hidden" class="slider-value"></div>').insertAfter(_96e);
        var t = $(_96e);
        t.addClass("slider-f").hide();
        var name = t.attr("name");
        if (name) {
            _96f.find("input.slider-value").attr("name", name);
            t.removeAttr("name").attr("sliderName", name)
        }
        return _96f
    }
    function _970(_971, _972) {
        var _973 = $.data(_971, "slider");
        var opts = _973.options;
        var _974 = _973.slider;
        if (_972) {
            if (_972.width) {
                opts.width = _972.width
            }
            if (_972.height) {
                opts.height = _972.height
            }
        }
        if (opts.mode == "h") {
            _974.css("height", "");
            _974.children("div").css("height", "");
            if (!isNaN(opts.width)) {
                _974.width(opts.width)
            }
        } else {
            _974.css("width", "");
            _974.children("div").css("width", "");
            if (!isNaN(opts.height)) {
                _974.height(opts.height);
                _974.find("div.slider-rule").height(opts.height);
                _974.find("div.slider-rulelabel").height(opts.height);
                _974.find("div.slider-inner")._outerHeight(opts.height)
            }
        }
        _975(_971)
    }
    function _976(_977) {
        var _978 = $.data(_977, "slider");
        var opts = _978.options;
        var _979 = _978.slider;
        var aa = opts.mode == "h" ? opts.rule : opts.rule.slice(0).reverse();
        if (opts.reversed) {
            aa = aa.slice(0).reverse()
        }
        _97a(aa);

        function _97a(aa) {
            var rule = _979.find("div.slider-rule");
            var _97b = _979.find("div.slider-rulelabel");
            rule.empty();
            _97b.empty();
            for (var i = 0; i < aa.length; i++) {
                var _97c = i * 100 / (aa.length - 1) + "%";
                var span = $("<span></span>").appendTo(rule);
                span.css((opts.mode == "h" ? "left" : "top"), _97c);
                if (aa[i] != "|") {
                    span = $("<span></span>").appendTo(_97b);
                    span.html(aa[i]);
                    if (opts.mode == "h") {
                        span.css({
                            left: _97c,
                            marginLeft: -Math.round(span.outerWidth() / 2)
                        })
                    } else {
                        span.css({
                            top: _97c,
                            marginTop: -Math.round(span.outerHeight() / 2)
                        })
                    }
                }
            }
        }
    }
    function _97d(_97e) {
        var _97f = $.data(_97e, "slider");
        var opts = _97f.options;
        var _980 = _97f.slider;
        _980.removeClass("slider-h slider-v slider-disabled");
        _980.addClass(opts.mode == "h" ? "slider-h" : "slider-v");
        _980.addClass(opts.disabled ? "slider-disabled" : "");
        _980.find("a.slider-handle").draggable({
            axis: opts.mode,
            cursor: "pointer",
            disabled: opts.disabled,
            onDrag: function (e) {
                var left = e.data.left;
                var _981 = _980.width();
                if (opts.mode != "h") {
                    left = e.data.top;
                    _981 = _980.height()
                }
                if (left < 0 || left > _981) {
                    return false
                } else {
                    var _982 = _994(_97e, left);
                    _983(_982);
                    return false
                }
            },
            onBeforeDrag: function () {
                _97f.isDragging = true
            },
            onStartDrag: function () {
                opts.onSlideStart.call(_97e, opts.value)
            },
            onStopDrag: function (e) {
                var _984 = _994(_97e, (opts.mode == "h" ? e.data.left : e.data.top));
                _983(_984);
                opts.onSlideEnd.call(_97e, opts.value);
                opts.onComplete.call(_97e, opts.value);
                _97f.isDragging = false
            }
        });
        _980.find("div.slider-inner").unbind(".slider").bind("mousedown.slider", function (e) {
            if (_97f.isDragging) {
                return
            }
            var pos = $(this).offset();
            var _985 = _994(_97e, (opts.mode == "h" ? (e.pageX - pos.left) : (e.pageY - pos.top)));
            _983(_985);
            opts.onComplete.call(_97e, opts.value)
        });

        function _983(_986) {
            var s = Math.abs(_986 % opts.step);
            if (s < opts.step / 2) {
                _986 -= s
            } else {
                _986 = _986 - s + opts.step
            }
            _987(_97e, _986)
        }
    }
    function _987(_988, _989) {
        var _98a = $.data(_988, "slider");
        var opts = _98a.options;
        var _98b = _98a.slider;
        var _98c = opts.value;
        if (_989 < opts.min) {
            _989 = opts.min
        }
        if (_989 > opts.max) {
            _989 = opts.max
        }
        opts.value = _989;
        $(_988).val(_989);
        _98b.find("input.slider-value").val(_989);
        var pos = _98d(_988, _989);
        var tip = _98b.find(".slider-tip");
        if (opts.showTip) {
            tip.show();
            tip.html(opts.tipFormatter.call(_988, opts.value))
        } else {
            tip.hide()
        }
        if (opts.mode == "h") {
            var _98e = "left:" + pos + "px;";
            _98b.find(".slider-handle").attr("style", _98e);
            tip.attr("style", _98e + "margin-left:" + (-Math.round(tip.outerWidth() / 2)) + "px")
        } else {
            var _98e = "top:" + pos + "px;";
            _98b.find(".slider-handle").attr("style", _98e);
            tip.attr("style", _98e + "margin-left:" + (-Math.round(tip.outerWidth())) + "px")
        }
        if (_98c != _989) {
            opts.onChange.call(_988, _989, _98c)
        }
    }
    function _975(_98f) {
        var opts = $.data(_98f, "slider").options;
        var fn = opts.onChange;
        opts.onChange = function () { };
        _987(_98f, opts.value);
        opts.onChange = fn
    }
    function _98d(_990, _991) {
        var _992 = $.data(_990, "slider");
        var opts = _992.options;
        var _993 = _992.slider;
        var size = opts.mode == "h" ? _993.width() : _993.height();
        var pos = opts.converter.toPosition.call(_990, _991, size);
        if (opts.mode == "v") {
            pos = _993.height() - pos
        }
        if (opts.reversed) {
            pos = size - pos
        }
        return pos.toFixed(0)
    }
    function _994(_995, pos) {
        var _996 = $.data(_995, "slider");
        var opts = _996.options;
        var _997 = _996.slider;
        var size = opts.mode == "h" ? _997.width() : _997.height();
        var _998 = opts.converter.toValue.call(_995, opts.mode == "h" ? (opts.reversed ? (size - pos) : pos) : (size - pos), size);
        return _998.toFixed(0)
    }
    $.fn.slider = function (_999, _99a) {
        if (typeof _999 == "string") {
            return $.fn.slider.methods[_999](this, _99a)
        }
        _999 = _999 || {};
        return this.each(function () {
            var _99b = $.data(this, "slider");
            if (_99b) {
                $.extend(_99b.options, _999)
            } else {
                _99b = $.data(this, "slider", {
                    options: $.extend({}, $.fn.slider.defaults, $.fn.slider.parseOptions(this), _999),
                    slider: init(this)
                });
                $(this).removeAttr("disabled")
            }
            var opts = _99b.options;
            opts.min = parseFloat(opts.min);
            opts.max = parseFloat(opts.max);
            opts.value = parseFloat(opts.value);
            opts.step = parseFloat(opts.step);
            opts.originalValue = opts.value;
            _97d(this);
            _976(this);
            _970(this)
        })
    };
    $.fn.slider.methods = {
        options: function (jq) {
            return $.data(jq[0], "slider").options
        },
        destroy: function (jq) {
            return jq.each(function () {
                $.data(this, "slider").slider.remove();
                $(this).remove()
            })
        },
        resize: function (jq, _99c) {
            return jq.each(function () {
                _970(this, _99c)
            })
        },
        getValue: function (jq) {
            return jq.slider("options").value
        },
        setValue: function (jq, _99d) {
            return jq.each(function () {
                _987(this, _99d)
            })
        },
        clear: function (jq) {
            return jq.each(function () {
                var opts = $(this).slider("options");
                _987(this, opts.min)
            })
        },
        reset: function (jq) {
            return jq.each(function () {
                var opts = $(this).slider("options");
                _987(this, opts.originalValue)
            })
        },
        enable: function (jq) {
            return jq.each(function () {
                $.data(this, "slider").options.disabled = false;
                _97d(this)
            })
        },
        disable: function (jq) {
            return jq.each(function () {
                $.data(this, "slider").options.disabled = true;
                _97d(this)
            })
        }
    };
    $.fn.slider.parseOptions = function (_99e) {
        var t = $(_99e);
        return $.extend({}, $.parser.parseOptions(_99e, ["width", "height", "mode",
            {
                reversed: "boolean",
                showTip: "boolean",
                min: "number",
                max: "number",
                step: "number"
            }]), {
                value: (t.val() || undefined),
                disabled: (t.attr("disabled") ? true : undefined),
                rule: (t.attr("rule") ? eval(t.attr("rule")) : undefined)
            })
    };
    $.fn.slider.defaults = {
        width: "auto",
        height: "auto",
        mode: "h",
        reversed: false,
        showTip: false,
        disabled: false,
        value: 0,
        min: 0,
        max: 100,
        step: 1,
        rule: [],
        tipFormatter: function (_99f) {
            return _99f
        },
        converter: {
            toPosition: function (_9a0, size) {
                var opts = $(this).slider("options");
                return (_9a0 - opts.min) / (opts.max - opts.min) * size
            },
            toValue: function (pos, size) {
                var opts = $(this).slider("options");
                return opts.min + (opts.max - opts.min) * (pos / size)
            }
        },
        onChange: function (_9a1, _9a2) { },
        onSlideStart: function (_9a3) { },
        onSlideEnd: function (_9a4) { },
        onComplete: function (_9a5) { }
    }
})(jQuery);
(function (b) {
    var c, a = b();
    b.fn.sortable = function (d) {
        d = d || {};
        return this.each(function () {
            if (/^enable|disable|destroy$/.test(d)) {
                var h = b(this).children(b(this).data("items")).attr("draggable", d == "enable");
                d == "destroy" && h.add(this).removeData("connectWith").removeData("items").unbind("dragstart.h5s dragend.h5s selectstart.h5s dragover.h5s dragenter.h5s drop.h5s");
                return
            }
            var i, h = b(this).children(d.items),
                g = d.connectWith || false;
            if (h.length == 0) {
                return
            }
            var e = b("<" + h[0].tagName + ' class="sortable-placeholder">');
            var f = d.handle,
                j;
            h.find(f).mousedown(function () {
                j = true
            }).mouseup(function () {
                j = false
            });
            b(this).data("items", d.items);
            a = a.add(e);
            if (g) {
                b(g).add(this).data("connectWith", g)
            }
            h.attr("draggable", "true").bind("dragstart.h5s", function (l) {
                if (f && !j) {
                    return false
                }
                j = false;
                var k = l.originalEvent.dataTransfer;
                k.effectAllowed = "move";
                k.setData("Text", "dummy");
                c = b(this).addClass("sortable-dragging");
                i = c.index()
            }).bind("dragend.h5s", function () {
                c.removeClass("sortable-dragging").fadeIn();
                a.detach();
                if (i != c.index()) {
                    h.parent().trigger("sortupdate")
                }
                c = null
            }).not("a[href], img").bind("selectstart.h5s", function () {
                this.dragDrop && this.dragDrop();
                return false
            }).end().add([this, e]).bind("dragover.h5s dragenter.h5s drop.h5s", function (k) {
                if (!h.is(c) && g !== b(c).parent().data("connectWith")) {
                    return true
                }
                if (k.type == "drop") {
                    k.stopPropagation();
                    a.filter(":visible").after(c);
                    return false
                }
                k.preventDefault();
                k.originalEvent.dataTransfer.dropEffect = "move";
                if (h.is(this)) {
                    c.hide();
                    b(this)[e.index() < b(this).index() ? "after" : "before"](e);
                    a.not(e).detach()
                }
                return false
            })
        })
    }
})(jQuery);
/*
 * jQuery Cookie Plugin v1.4.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function (a) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], a)
    } else {
        if (typeof exports === "object") {
            a(require("jquery"))
        } else {
            a(jQuery)
        }
    }
}(function (f) {
    var c = /\+/g;

    function h(i) {
        return a.raw ? i : encodeURIComponent(i)
    }
    function e(i) {
        return a.raw ? i : decodeURIComponent(i)
    }
    function b(i) {
        return h(a.json ? JSON.stringify(i) : String(i))
    }
    function g(i) {
        if (i.indexOf('"') === 0) {
            i = i.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\")
        }
        try {
            i = decodeURIComponent(i.replace(c, " "));
            return a.json ? JSON.parse(i) : i
        } catch (j) { }
    }
    function d(k, i) {
        var j = a.raw ? k : g(k);
        return f.isFunction(i) ? i(j) : j
    }
    var a = f.cookie = function (u, n, m) {
        if (n !== undefined && !f.isFunction(n)) {
            m = f.extend({}, a.defaults, m);
            if (typeof m.expires === "number") {
                var s = m.expires,
                    j = m.expires = new Date();
                j.setTime(+j + s * 86400000)
            }
            return (document.cookie = [h(u), "=", b(n), m.expires ? "; expires=" + m.expires.toUTCString() : "", m.path ? "; path=" + m.path : "", m.domain ? "; domain=" + m.domain : "", m.secure ? "; secure" : ""].join(""))
        }
        var v = u ? undefined : {};
        var r = document.cookie ? document.cookie.split("; ") : [];
        for (var k = 0, o = r.length; k < o; k++) {
            var p = r[k].split("=");
            var q = e(p.shift());
            var w = p.join("=");
            if (u && u === q) {
                v = d(w, n);
                break
            }
            if (!u && (w = d(w)) !== undefined) {
                v[q] = w
            }
        }
        return v
    };
    a.defaults = {};
    f.removeCookie = function (i, j) {
        if (f.cookie(i) === undefined) {
            return false
        }
        f.cookie(i, "", f.extend({}, j, {
            expires: -1
        }));
        return !f.cookie(i)
    }
}));
(function ($) {
    var escapeable = /["\\\x00-\x1f\x7f-\x9f]/g,
        meta = {
            "\b": "\\b",
            "\t": "\\t",
            "\n": "\\n",
            "\f": "\\f",
            "\r": "\\r",
            '"': '\\"',
            "\\": "\\\\"
        };
    $.toJSON = typeof JSON === "object" && JSON.stringify ? JSON.stringify : function (o) {
        if (o === null) {
            return "null"
        }
        var type = typeof o;
        if (type === "undefined") {
            return undefined
        }
        if (type === "number" || type === "boolean") {
            return "" + o
        }
        if (type === "string") {
            return $.quoteString(o)
        }
        if (type === "object") {
            if (typeof o.toJSON === "function") {
                return $.toJSON(o.toJSON())
            }
            if (o.constructor === Date) {
                var month = o.getUTCMonth() + 1,
                    day = o.getUTCDate(),
                    year = o.getUTCFullYear(),
                    hours = o.getUTCHours(),
                    minutes = o.getUTCMinutes(),
                    seconds = o.getUTCSeconds(),
                    milli = o.getUTCMilliseconds();
                if (month < 10) {
                    month = "0" + month
                }
                if (day < 10) {
                    day = "0" + day
                }
                if (hours < 10) {
                    hours = "0" + hours
                }
                if (minutes < 10) {
                    minutes = "0" + minutes
                }
                if (seconds < 10) {
                    seconds = "0" + seconds
                }
                if (milli < 100) {
                    milli = "0" + milli
                }
                if (milli < 10) {
                    milli = "0" + milli
                }
                return '"' + year + "-" + month + "-" + day + "T" + hours + ":" + minutes + ":" + seconds + "." + milli + 'Z"'
            }
            if (o.constructor === Array) {
                var ret = [];
                for (var i = 0; i < o.length; i++) {
                    ret.push($.toJSON(o[i]) || "null")
                }
                return "[" + ret.join(",") + "]"
            }
            var name, val, pairs = [];
            for (var k in o) {
                type = typeof k;
                if (type === "number") {
                    name = '"' + k + '"'
                } else {
                    if (type === "string") {
                        name = $.quoteString(k)
                    } else {
                        continue
                    }
                }
                type = typeof o[k];
                if (type === "function" || type === "undefined") {
                    continue
                }
                val = $.toJSON(o[k]);
                pairs.push(name + ":" + val)
            }
            return "{" + pairs.join(",") + "}"
        }
    };
    $.evalJSON = typeof JSON === "object" && JSON.parse ? JSON.parse : function (src) {
        return eval("(" + src + ")")
    };
    $.secureEvalJSON = typeof JSON === "object" && JSON.parse ? JSON.parse : function (src) {
        var filtered = src.replace(/\\["\\\/bfnrtu]/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "");
        if (/^[\],:{}\s]*$/.test(filtered)) {
            return eval("(" + src + ")")
        } else {
            throw new SyntaxError("Error parsing JSON, source is not valid.")
        }
    };
    $.quoteString = function (string) {
        if (string.match(escapeable)) {
            return '"' + string.replace(escapeable, function (a) {
                var c = meta[a];
                if (typeof c === "string") {
                    return c
                }
                c = a.charCodeAt();
                return "\\u00" + Math.floor(c / 16).toString(16) + (c % 16).toString(16)
            }) + '"'
        }
        return '"' + string + '"'
    }
})(jQuery);
(function () {
    var a = (function () {
        var b = function () { };
        return b
    })();
    a.getNameValueTrackDataList = function (c, d) {
        var b = "/BD/Tracking/GetTrackBasicInfo";
        var e = [];
        mAjax.post(b, c, function (f) {
            e = f
        }, "", "", false);
        return e
    };
    a.getTaxRateList = function (d, e) {
        var b = "/BD/TaxRate/GetTaxRateList";
        var c = [];
        mAjax.post(b, d, function (f) {
            if (f) {
                c = f;
                for (var g = 0; g < f.length; g++) {
                    f[g].MName = f[g].MName + "(" + (+f[g].MTaxRate).toFixed(2) + "%)";
                    f[g].MTaxRate = f[g].MTaxRate / 100;
                    f[g].MEffectiveTaxRate = f[g].MEffectiveTaxRate / 100
                }
                $.isFunction(e) && e(c)
            }
        }, "", "", false);
        return c
    };
    window.mData = $.mData = a
})();
var clearMsgTimeoutId = null;
var Megi = {
    showMsg: function (b) {
        top.$(".m-action-msg").remove();
        top.$("body").append("<div class='m-action-msg'></div>");
        top.$(".m-action-msg").html(b);
        var a = top.$(".m-wrapper").width();
        var d = top.$(".m-action-msg").width();
        var c = (a - d) / 2;
        top.$(".m-action-msg").css({
            top: "5px",
            left: c + "px"
        }).animate({
            opacity: "show"
        }, "slow", function () {
            $(".m-action-msg").show()
        });
        if (clearMsgTimeoutId != null) {
            clearTimeout(clearMsgTimeoutId)
        }
        clearMsgTimeoutId = setTimeout("Megi.hideMsg", 8000)
    },
    hideMsg: function () {
        top.$(".m-action-msg").remove()
    },
    removeTab: function (a) {
        top.MegiTab.removeTab(a)
    },
    addOrUpdate: function (d, a, b, c) {
        top.MegiTab.addOrUpdateTab(d, a, b, c);
        return false
    },
    addTab: function (d, a, b, c) {
        top.MegiTab.add(d, a, b, c);
        return false
    },
    setStable: function (a) {
        MegiTab.setStable(a)
    },
    show: function (b, d, c, a) {
        Megi.createDialogMessage(b, d, "Info", "info", false, c, a);
        Megi.closeDialogMessageEvent()
    },
    showSuccess: function (b, d, c, a) {
        Megi.createDialogMessage(b, d, "Success", "success", false, c, a);
        Megi.closeDialogMessageEvent()
    },
    alert: function (b, d, c, a) {
        Megi.createDialogMessage(b, d, "Error", "error", false, c, a);
        Megi.closeDialogMessageEvent()
    },
    warning: function (b, d, c, a) {
        Megi.createDialogMessage(b, d, "Warning", "warning", false, c, a);
        Megi.closeDialogMessageEvent()
    },
    confirm: function (b, e, c, d, a) {
        Megi.createDialogMessage(b, c, "Confirm", "confirm", true, d, a);
        $("#divMessageContainer").find(".action>.m-btn-green").click(function () {
            $("#divMessageContainer").dialog("close");
            if (e != null) {
                e()
            }
        });
        $("#divMessageContainer").find(".action>.m-btn-gray").click(function () {
            $("#divMessageContainer").dialog("close")
        })
    },
    closeDialogMessageEvent: function () {
        $("#divMessageContainer").find(".action>.m-btn-green").click(function () {
            $("#divMessageContainer").dialog("close")
        })
    },
    request: function (name, value, url) {
        if (value == undefined) {
            var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
            var r = window.location.search.substr(1).match(reg);
            if (r != null) {
                return unescape(r[2])
            }
            return ""
        } else {
            var pattern = "[?|&]" + name + "=([^&]*)";
            var replaceText = name + "=" + value;
            if (url.match(pattern)) {
                var tmp = "/(" + name + "=)([^&]*)/gi";
                tmp = url.replace(eval(tmp), replaceText);
                return tmp
            } else {
                if (url.match("[?]")) {
                    return url + "&" + replaceText
                } else {
                    return url + "?" + replaceText
                }
            }
            alert(url + "\n" + name + "\n" + value);
            return url + "\n" + name + "\n" + value
        }
    },
    getVersionUrl: function (a) {
        return Megi.request("ver", window.top.VersionNumber, a)
    },
    addTabTitle: function (c, b) {
        if (!c) {
            return c
        }
        if (b == undefined) {
            var e = $(window.frameElement);
            if (e.length == 0) {
                return c
            }
            var a = e.attr("src");
            if (!a) {
                return c
            }
            var d = new RegExp("(?<=_tabTitle_=)(S*)");
            if (!d.test(a)) {
                return c
            }
            var g = d.exec($(window.frameElement).attr("src"))[1];
            b = mDES.decrypt(g)
        }
        var f = "_tabTitle_=" + mDES.encrypt(b);
        return c.indexOf("?") < 0 ? (c + "?" + f) : (c + "&" + f)
    },
    createDialogMessage: function (i, a, c, g, e, f, b) {
        if (f != undefined && b != undefined) {
            i = HtmlLang.Write(f, b, i)
        }
        $("#divMessageContainer").remove();
        if (a == undefined) {
            a = {}
        }
        if (a.width == undefined) {
            a.width = 350
        }
        if (a.height == undefined) {
            a.height = 190
        }
        if (a.title == undefined) {
            a.title = c
        }
        var h = a.height - 150;
        var d = "<div id='divMessageContainer' class='m-dialog'>";
        d += "<div class='content " + g + "' style='height:" + h + "px'>" + i + "</div>";
        d += "<div class='action'>";
        if (e) {
            d += "<a href='javascript:void(0)' class='m-btn m-btn-gray'>Cancel</a>"
        }
        d += "<a href='javascript:void(0)' class='m-btn m-btn-green'>OK</a></div>";
        d += "</div>";
        $(d).appendTo("body");
        a.modal = true;
        $("#divMessageContainer").dialog(a)
    },
    displaySuccess: function (a, b) {
        Megi.createDisplayMessage(a, b, "green");
        window.scrollTo(0, 0)
    },
    createDisplayMessage: function (d, b, a) {
        $(".m-msg-show").remove();
        var c = '<div class="m-msg-show m-msg-show-' + a + '">';
        c += '<div class="close"><a href="javascript:void(0)">&nbsp;</a></div>';
        c += '<div class="content">' + b + "</div>";
        c += "</div>";
        $(d).append(c);
        $(d).find(".m-msg-show>.close>a").click(function () {
            $(".m-msg-show").remove()
        })
    },
    encode: function (a) {
        return a
    },
    confirmDelete: function (a) {
        var b = confirm("Are you sure to delete?");
        if (b) {
            a(b)
        }
    },
    popup: function (a, b) {
        $(a).popup(b)
    },
    trim: function (a) {
        return $.trim(a)
    },
    ComboBox: {
        setDefaultValue: function (selector) {
            var dataOptions = $(selector).attr("data-options");
            if (dataOptions == undefined || dataOptions.length == 0) {
                return
            }
            dataOptions = "{" + dataOptions + "}";
            var obj = eval("(" + dataOptions + ")");
            if (obj.defaultValue == undefined) {
                return
            }
            $(selector).combobox("setValue", obj.defaultValue)
        }
    },
    dateCompare: function (b, c, a) {
        var d = new Date((b + "01").replace(/^(\d{4})(\d{2})(\d{2})$/, "$1/$2/$3"));
        var e = new Date((c.combobox("getValue") + "01").replace(/^(\d{4})(\d{2})(\d{2})$/, "$1/$2/$3"));
        switch (a) {
            case 1:
                if (d > e) {
                    c.combobox("setValue", b)
                }
                break;
            case 2:
                if (d < e) {
                    c.combobox("setValue", b)
                }
                break
        }
    },
    autoChartSize: function () {
        var a = $(window).get(0).innerWidth;
        var b = $(window).get(0).innerHeight;
        $(".m-chart").each(function () {
            var c = $(this).width();
            var g = $(this).find("div").width();
            var d = $(this).find("div").height();
            var e = (c / g) * g;
            var f = (c / g) * d;
            $(this).find("div").css({
                width: e + "px",
                height: f + "px"
            });
            $(this).find("div").find("canvas").css({
                width: e + "px",
                height: f + "px"
            })
        })
    },
    Chart: {
        getTip: function (c, b, a) {
            return "<div class='m-chart-tip'><p class='tip-title'>" + c + "</p><div><p class='tip-lable'>" + b + "</p><p class='tip-value'>" + a + "</p><div class='clear'></div></div></div>"
        }
    },
    getDataGridColumnList: function (b, c) {
        var d = new Array();
        for (var a = 0; a < c.length; a++) {
            d.push(b[c[a]])
        }
        var e = new Array();
        e.push(d);
        return e
    },
    grid: function (p, l, f) {
        var q = typeof (l);
        if (q == "string") {
            if (l == "autoresize") {
                $(p).datagrid("resize", {
                    width: j()
                });
                return
            } else {
                if (l == "deleteSelected" || l == "optSelected" || l == "dbSelected") {
                    var d = "";
                    $(p).parent().find(".row-key-checkbox").each(function () {
                        if ($(this).attr("checked") == "checked") {
                            d = d + $(this).val() + ","
                        }
                    });
                    if (d.length == 0) {
                        $.mDialog.alert(HtmlLang.Write(LangModule.Common, "PleaseSelectOneOrMoreItems", "Please select one or more items!"));
                        return
                    }
                    d = d.substring(0, d.length - 1);
                    if (f.url == undefined) {
                        f.callback(d);
                        return
                    }
                    var a = HtmlLang.Write(LangModule.Common, "AreYouSureToDelete", "Are you sure to delete?");
                    if (d && d.split(",").length > 1) {
                        var h = HtmlLang.Write(LangModule.Common, "SureToDeleteMore", "Are you sure to delete the {0} item ?");
                        a = h.replace("{0}", d.split(",").length)
                    }
                    if (f.msg != undefined && f.msg != null) {
                        a = f.msg
                    }
                    if (f.msg == "") {
                        var k = {};
                        if (f.param != undefined) {
                            k = $.extend(k, f.param)
                        }
                        k.KeyIDs = d;
                        mAjax.submit(f.url, k, function (r) {
                            if (f.callback != undefined) {
                                f.callback(r)
                            }
                        })
                    } else {
                        if (l == "dbSelected") {
                            var k = {};
                            if (f.param != undefined) {
                                k = $.extend(k, f.param)
                            }
                            k.KeyIDs = d;
                            mAjax.submit(f.url, k, function (r) {
                                if (f.callback != undefined) {
                                    f.callback(r)
                                }
                            })
                        } else {
                            $.mDialog.confirm(a, {
                                callback: function () {
                                    var r = {};
                                    if (f.param != undefined) {
                                        r = $.extend(r, f.param)
                                    }
                                    r.KeyIDs = d;
                                    mAjax.submit(f.url, r, function (s) {
                                        if (f.callback != undefined) {
                                            f.callback(s)
                                        }
                                    })
                                }
                            })
                        }
                    }
                    return
                }
            }
            return $(p).datagrid(l, f)
        }
        function j() {
            var r = $(p).closest(".datagrid").parent().width();
            if (r < 200) {
                r = 200
            }
            return r
        }
        if (l.auto == undefined) {
            l.auto = true
        }
        var i = false;
        var e = 0;
        var g = 0;
        var m = l.onClickCell;
        l.onClickCell = function (r, t, s) {
            e = g;
            g = r;
            var u = $(p).parent().find("tr[datagrid-row-index=" + r + "]").find(".row-key-checkbox").attr("checked");
            if (t == l.chkField) {
                if (u == "checked") {
                    i = true;
                    $(p).datagrid("unselectRow", r)
                } else {
                    i = false;
                    $(p).datagrid("selectRow", r)
                }
            } else {
                if (u == "checked") {
                    i = true;
                    $(p).datagrid("selectRow", r)
                } else {
                    i = false;
                    $(p).datagrid("unselectRow", r)
                }
            }
            if (m != undefined) {
                m(r, t, s)
            }
        };

        function o(r, s) {
            if (r) {
                $(p).datagrid("selectRow", s)
            } else {
                $(p).datagrid("unselectRow", s)
            }
            $(p).parent().find("tr[datagrid-row-index=" + s + "]").find(".row-key-checkbox").attr("checked", r)
        }
        var n = l.onClickRow;
        l.onClickRow = function (r, s) {
            o(i, r);
            if (n != undefined) {
                n(r, s)
            }
        };
        var c = l.onDblClickRow;
        l.onDblClickRow = function (r, s) {
            o(i, r);
            if (c != undefined) {
                c(r, s)
            }
        };
        var b = l.onAfterEdit;
        l.onAfterEdit = function (v, w, r) {
            if (g == v) {
                o(i, v)
            } else {
                var t = $(p).parent().find("tr[datagrid-row-index=" + e + "]").attr("isSelected");
                var u = t == "true" ? true : false;
                o(u, e);
                var s = $(p).parent().find("tr[datagrid-row-index=" + v + "]").attr("isSelected") == "true" ? true : false;
                $(p).parent().find("tr[datagrid-row-index=" + v + "]").find(".row-key-checkbox").attr("checked", s)
            }
            if (b != undefined) {
                b(v, w, r)
            }
        };
        l.onSelect = function (r, s) {
            $(p).parent().find("tr[datagrid-row-index=" + r + "]").find(".row-key-checkbox").attr("checked", true);
            $(p).parent().find("tr[datagrid-row-index=" + r + "]").attr("isSelected", true)
        };
        l.onUnselect = function (r, s) {
            $(p).parent().find("tr[datagrid-row-index=" + r + "]").find(".row-key-checkbox").attr("checked", false);
            $(p).parent().find("tr[datagrid-row-index=" + r + "]").attr("isSelected", false)
        };
        l.onCheckAll = function () {
            var r = l.isSelectAll ? ".row-key-checkbox" : ".row-key-checkbox:enabled";
            $(p).parent().find(r).attr("checked", true);
            $(p).parent().find(".datagrid-row").attr("isSelected", true)
        };
        l.onUncheckAll = function () {
            var r = l.isSelectAll ? ".row-key-checkbox" : ".row-key-checkbox:enabled";
            $(p).parent().find(r).attr("checked", false);
            $(p).parent().find(".datagrid-row").attr("isSelected", false)
        };
        $(p).datagrid(l, f);
        if (l.auto) {
            l.width = j();
            l.fitcolumns = true;
            $(window).resize(function () {
                $(p).datagrid("resize", {
                    width: j()
                })
            })
        }
    },
    gridOperatorEventBind: function (b, d, g, f) {
        var e = d.attr("key");
        var h = $(b).datagrid("getRowById", {
            idFieldName: "MItemID",
            rowId: e
        });
        var k = new Array();
        for (var j = 0; j < f.length; j++) {
            var a = f[j];
            var c = h[a];
            c = c == undefined ? "" : c;
            k.push(c)
        }
        if (g && $.isFunction(g)) {
            $(d).bind("click", function () {
                g.apply(this, k)
            })
        }
    },
    gridEventBind: function (b, d, f, h, c) {
        var e = d.attr("key");
        var g = $(b).datagrid("getRowById", {
            idFieldName: "MItemID",
            rowId: e
        });
        if (c) {
            var a = g[c] ? g[c] : "";
            if ($(d).is("input")) {
                $(d).val(a)
            } else {
                $(d).text(a)
            }
        }
        if (f && $.isFunction(f)) {
            $(d).bind("click", function () {
                f.apply(this, h)
            })
        }
    },
    mergeGrid: function mergeGridColCells(b, a) {
        var e = b.datagrid("getRows");
        var c = 0;
        var d = 0;
        if (e.length < 1) {
            return
        }
        $.each(e, function (g, f) {
            if (f[a] == e[c][a]) {
                d = g
            } else {
                b.datagrid("mergeCells", {
                    index: c,
                    field: a,
                    rowspan: d - c + 1
                });
                c = g;
                d = g
            }
        });
        b.datagrid("mergeCells", {
            index: c,
            field: a,
            rowspan: d - c + 1
        })
    },
    changeLang: function (b, a) {
        if (a == undefined) {
            a = "/Framework/ChangeLang"
        }
        $("#loginBox").mask(HtmlLang.Write(LangModule.Common, "waitChanglang", "switching..."));
        $.ajax({
            type: "POST",
            url: a,
            data: {
                langId: b
            },
            success: function (c) {
                if (c == true) {
                    window.mWindow.reload()
                }
                $("#loginBox").unmask()
            }
        })
    },
    getUrlParam: function (b) {
        var a = new RegExp("[?&]" + b + "=([^&#]*)").exec(window.location.href);
        if (a == null || a[1] == undefined) {
            return null
        } else {
            return a[1]
        }
    },
    isIE: function () {
        var a = navigator.userAgent.toLowerCase();
        var b = /(msie\s|trident.*rv:)([\w.]+)/;
        return b.exec(a) != null
    },
    isIE9Previous: function () {
        return $.browser.msie != undefined && $.browser.msie && parseInt($.browser.version) <= 9
    },
    isSafari: function () {
        return /^((?!chrome).)*safari/i.test(navigator.userAgent)
    },
    getCombineTitle: function (c) {
        var b = "";
        var a = $("#hidCurrentLangID", top.window.document).val();
        if (a == "0x0009") {
            b += " "
        }
        return c.join(b)
    },
    attachPropChangeEvent: function (b, a) {
        if ($.browser.msie && !Megi.isIE9Previous()) {
            b.onpropertychange = a
        } else {
            b.addEventListener("input", a, false)
        }
    },
    regClickToSelectAllEvt: function () {
        return false;
        if (!Megi.isEdge()) {
            $('input:text:not(".click-no-select"), input:password, textarea:not(".click-no-select")').off("click.selAll").on("click.selAll", function (a) {
                if (!Megi.isTextSelected(this)) {
                    $(this).selectAll(a)
                }
            })
        }
    },
    isTextSelected: function (a) {
        if (typeof a.selectionStart == "number") {
            return a.selectionEnd - a.selectionStart > 0
        } else {
            if (typeof document.selection != "undefined") {
                return document.selection.createRange().text.length > 0
            }
        }
    },
    isLowVersionIE9: function () {
        return $.browser.msie != undefined && $.browser.msie && parseInt($.browser.version) < 9
    },
    isEdge: function () {
        return navigator.userAgent.indexOf("Edge") > -1
    },
    openNewTab: function (e, a, b) {
        var c = document.createElement("form");
        c.action = e;
        c.method = "post";
        if (b) {
            c.target = "_blank"
        }
        if (a) {
            for (var f in a) {
                var d = document.createElement("input");
                d.type = "hidden";
                d.name = f;
                d.value = typeof a[f] === "object" ? JSON.stringify(a[f]) : a[f];
                c.appendChild(d)
            }
        }
        c.style.display = "none";
        document.body.appendChild(c);
        c.submit()
    },
    postUrl: function (e, g, c) {
        var a = $("#frmSubmit");
        if (a.length == 0) {
            a = $("<form id='frmSubmit' method='post'></form>");
            a.appendTo($("body"))
        }
        a.attr("action", e);
        if (g) {
            var h = g.split("&");
            for (var f = 0; f < h.length; f++) {
                var b = h[f].split("=");
                var d = a.find("input:hidden[name=" + b[0] + "]");
                if (d.length == 0) {
                    d = $("<input type='hidden' name='" + b[0] + "'/>")
                }
                d.attr("value", b[1]);
                a.append(d)
            }
        }
        if (c || c == undefined) {
            $("body").mask("")
        }
        a.submit()
    },
    openDialog: function (f, e, k, l, a) {
        var j = {};
        var g = k.split("&");
        for (var b = 0; b < g.length; b++) {
            var c = g[b].split("=");
            j[c[0]] = c[1]
        }
        var d = {
            mTitle: e,
            mShowbg: true,
            mShowTitle: true,
            mDrag: "mBoxTitle",
            mContent: "iframe:" + f,
            mPostData: j
        };
        if (l) {
            d.mWidth = l
        }
        if (a) {
            d.mHeight = a
        }
        $.mDialog.show(d)
    },
    getQueryString: function (b) {
        var c = new RegExp("(^|&)" + b + "=([^&]*)(&|$)", "i");
        var a = window.location.search.substr(1).match(c);
        if (a != null) {
            return unescape(a[2])
        }
        return null
    }
};
(function (a) {
    a = a || {};
    (function () {
        var d = (function () {
            var e = function (f) {
                var g = this;
                this.getText = function (h) {
                    h = h || f;
                    return $(h).textbox("getText")
                };
                this.getName = function (h) {
                    h = h || f;
                    return $(h).next().attr("name")
                };
                this.getInput = function (h) {
                    h = h || f;
                    return $(h)
                };
                this.getSourceInput = function (h) {
                    return h = h || f
                };
                this.getValue = function (h) {
                    h = h || f;
                    return $(h).val()
                };
                this.setValue = function (i, h) {
                    h = h || f;
                    $(h).val(i)
                };
                this.isValueChange = function (h) {
                    h = h || f;
                    var i = $(h).attr("originalValue");
                    if (i == undefined) {
                        return false
                    }
                    return i == $(h).val() ? false : true
                };
                this.resize = function (i, h) {
                    h = h || f;
                    $(h).width(i)
                };
                this.validate = function (h) {
                    h = h || f;
                    g.getInput(h).trigger("focus.hint");
                    var i = $(h).textbox("isValid");
                    g.getInput(h).trigger("blur.hint");
                    return i
                };
                this.disable = function (h) {
                    h = h || f;
                    $(h).textbox("disable")
                };
                this.enable = function (h) {
                    h = h || f;
                    $(h).textbox("enable")
                };
                this.resize = function (i, h) {
                    h = h || f;
                    $(h).width(i)
                }
            };
            e.name = "textbox";
            e.createInstance = function (f) {
                return new e(f)
            };
            return e
        })();
        window.mTextBox = $.mTextBox = d
    })();
    (function () {
        var d = (function () {
            var f = "m-default";
            var g = "easyui-date-type";
            var e = function (h) {
                h = $(h).hasClass("combo-text") ? $(h).parent().prev(".combotree-f") : h;
                var i = this;
                this.getText = function (j) {
                    j = j || h;
                    return $(j).combotree("getText")
                };
                this.setText = function (k, j) {
                    j = j || h;
                    return $(j).combotree("setText", k)
                };
                this.getName = function (j) {
                    j = j || h;
                    return $(j).next().find(".combo-value").attr("name")
                };
                this.getInput = function (j) {
                    j = j || h;
                    return $(j).combobox("textbox")
                };
                this.getSourceInput = function (j) {
                    return j = j || h
                };
                this.getValue = function (j) {
                    j = j || h;
                    return $(j).combotree("getValue")
                };
                this.getPanel = function (j) {
                    j = j || h;
                    return $(j).combotree("panel")
                };
                this.showPanel = function (j) {
                    j = j || h;
                    return $(j).combotree("showPanel")
                };
                this.hidePanel = function (j) {
                    j = j || h;
                    return $(j).combotree("hidePanel")
                };
                this.readonly = function (k) {
                    k = k || h;
                    var l = i.getText(k);
                    if (l) {
                        var j = i.getInput(k);
                        if (j.hasClass("tooltip-f")) {
                            j.tooltip("destroy")
                        }
                        j.removeAttr("etitle");
                        j.attr("etitle", l).tooltip({
                            content: l
                        });
                        $(k).combobox("readonly")
                    }
                };
                this.setHint = function (j, l) {
                    l = l || h;
                    j = j || $(l).attr("hint");
                    if (j) {
                        var k = i.getInput(l);
                        k.addClass("has-hint");
                        k.attr("hint", $(l).attr("hint"));
                        k.off("blur.hint").on("blur.hint", function () {
                            mHint.blurFunc(this)
                        }).off("focus.hint").on("focus.hint", function () {
                            mHint.focusFunc(this, j)
                        }).blur()
                    }
                };
                this.setTabIndex = function (j, l) {
                    l = l || h;
                    j = j || $(l).attr("tabIndex");
                    if (j) {
                        var k = i.getInput(l);
                        k.attr("tabIndex", $(l).attr("tabIndex"))
                    }
                };
                this.isValueChange = function (j) {
                    j = j || h;
                    var k = $(j).attr("originalValue");
                    if (k == undefined) {
                        return false
                    }
                    return k == $(j).combotree("getValue") ? false : true
                };
                this.setValue = function (k, j) {
                    j = j || h;
                    if ($(j).hasClass(f) && k || (!$(j).hasClass(f) && !$(j).hasClass(g))) {
                        $(j).combotree("setValue", k)
                    }
                };
                this.getOptions = function (j) {
                    j = j || h;
                    return $(j).combotree("options")
                };
                this.getData = function (j) {
                    j = j || h;
                    return $(j).combotree("getData")
                };
                this.validate = function (k) {
                    k = k || h;
                    var r = i.getText(k);
                    var u = i.getValue(k);
                    if (r && u == undefined) {
                        var m = i.getData(k);
                        var l = i.getOptions(k);
                        var q = l.valueField;
                        var s = l.textField;
                        var p = "";
                        for (var t = 0; r && (t < m.length); t++) {
                            var o = m[t];
                            if (o[s] && o[s].indexOf(r) > -1) {
                                p = o[q];
                                break
                            }
                        }
                        i.setValue(p, k)
                    }
                    var j = j || $(k).attr("hint");
                    if (j) {
                        mHint.blurFunc(i.getInput(k), j)
                    }
                    var n = $(k).combotree("isValid");
                    i.getInput(k).trigger("blur.hint");
                    return n
                };
                this.disable = function (j) {
                    j = j || h;
                    $(j).combotree("disable")
                };
                this.enable = function (j) {
                    j = j || h;
                    $(j).combotree("enable")
                };
                this.resize = function (k, j) {
                    j = j || h;
                    $(j).combotree("resize", k)
                }
            };
            e.name = "combobox";
            e.className = "combotree-f";
            e.inputSelector = ".combo-text:not(.datebox-input)";
            e.createInstance = function (h) {
                return new e(h)
            };
            return e
        })();
        window.mCombotree = $.mCombotree = d
    })();
    (function () {
        var d = (function () {
            var f = "m-default";
            var g = "easyui-date-type";
            var e = function (h) {
                h = $(h).hasClass("combo-text") ? $(h).parent().prev(".combobox-f,.combogrid-f") : h;
                var i = this;
                this.getText = function (j) {
                    j = j || h;
                    return $(j).combobox("getText")
                };
                this.setText = function (k, j) {
                    j = j || h;
                    return $(j).datebox("setText", k)
                };
                this.getName = function (j) {
                    j = j || h;
                    return $(j).next().find(".combo-value").attr("name")
                };
                this.getInput = function (j) {
                    j = j || h;
                    return $(j).combobox("textbox")
                };
                this.getSourceInput = function (j) {
                    return j = j || h
                };
                this.getValue = function (j) {
                    j = j || h;
                    return $(j).combobox("getValue")
                };
                this.getPanel = function (j) {
                    j = j || h;
                    return $(j).combobox("panel")
                };
                this.showPanel = function (j) {
                    j = j || h;
                    return $(j).combobox("showPanel")
                };
                this.hidePanel = function (j) {
                    j = j || h;
                    return $(j).combobox("hidePanel")
                };
                this.readonly = function (k) {
                    k = k || h;
                    var l = i.getText(k);
                    if (l) {
                        var j = i.getInput(k);
                        if (j.hasClass("tooltip-f")) {
                            j.tooltip("destroy")
                        }
                        j.removeAttr("etitle");
                        j.attr("etitle", l).tooltip({
                            content: l
                        });
                        $(k).combobox("readonly")
                    }
                };
                this.setHint = function (j, l) {
                    l = l || h;
                    j = j || $(l).attr("hint");
                    if (j) {
                        var k = i.getInput(l);
                        k.addClass("has-hint");
                        k.attr("hint", $(l).attr("hint"));
                        k.off("blur.hint").on("blur.hint", function () {
                            mHint.blurFunc(this)
                        }).off("focus.hint").on("focus.hint", function () {
                            mHint.focusFunc(this, j)
                        }).blur()
                    }
                };
                this.setTabIndex = function (j, l) {
                    l = l || h;
                    j = j || $(l).attr("tabIndex");
                    if (j) {
                        var k = i.getInput(l);
                        k.attr("tabIndex", $(l).attr("tabIndex"))
                    }
                };
                this.isValueChange = function (j) {
                    j = j || h;
                    var k = $(j).attr("originalValue");
                    if (k == undefined) {
                        return false
                    }
                    return k == $(j).combobox("getValue") ? false : true
                };
                this.setDateValue = function (j, k) {
                    k = k || h;
                    var m = mDate.parse(j).getTime();
                    var n = i.getData(k);
                    var l = i.getOptions(k);
                    var o = l.valueField;
                    for (var q = 0; q < n.length; q++) {
                        var p = n[q];
                        if (mDate.parse(p[o]).getTime() == m) {
                            $(k).hasClass("combogrid-f") ? $(k).combogrid("setValue", p[o]) : $(k).combobox("setValue", p[o]);
                            break
                        }
                    }
                };
                this.setValue = function (k, j) {
                    j = j || h;
                    if ($(j).hasClass(f) && k || (!$(j).hasClass(f) && !$(j).hasClass(g))) {
                        $(j).hasClass("combogrid-f") ? $(j).combogrid("setValue", k) : $(j).combobox("setValue", k)
                    } else {
                        if ($(j).hasClass(g)) {
                            i.setDateValue(k, j)
                        }
                    }
                };
                this.getOptions = function (j) {
                    j = j || h;
                    return $(j).combobox("options")
                };
                this.getData = function (j) {
                    j = j || h;
                    return $(j).combobox("getData")
                };
                this.validate = function (k) {
                    k = k || h;
                    var r = i.getText(k);
                    var u = i.getValue(k);
                    if (r && u == undefined) {
                        var m = i.getData(k);
                        var l = i.getOptions(k);
                        var q = l.valueField;
                        var s = l.textField;
                        var p = "";
                        for (var t = 0; r && (t < m.length); t++) {
                            var o = m[t];
                            if (o[s] && o[s].indexOf(r) > -1) {
                                p = o[q];
                                break
                            }
                        }
                        i.setValue(p, k)
                    }
                    var j = j || $(k).attr("hint");
                    if (j) {
                        mHint.blurFunc(i.getInput(k), j)
                    }
                    var n = $(k).combobox("isValid");
                    i.getInput(k).trigger("blur.hint");
                    return n
                };
                this.disable = function (j) {
                    j = j || h;
                    $(j).combobox("disable")
                };
                this.enable = function (j) {
                    j = j || h;
                    $(j).combobox("enable")
                };
                this.resize = function (k, j) {
                    j = j || h;
                    $(j).combobox("resize", k)
                }
            };
            e.name = "combobox";
            e.className = "combobox-f";
            e.inputSelector = ".combo-text:not(.datebox-input)";
            e.createInstance = function (h) {
                return new e(h)
            };
            return e
        })();
        window.mCombobox = $.mCombobox = d
    })();
    (function () {
        var d = (function () {
            var e = function (f) {
                this.createInstance = function (g) {
                    f = g || f;
                    if ($(f).parent().prev(".combotree-f").length > 0 || $(f).hasClass("combotree-f")) {
                        return new mCombotree(f)
                    }
                    if ($(f).parent().prev(".combobox-f,.combo-f").length > 0 || $(f).hasClass("combobox-f")) {
                        return new mCombobox(f)
                    }
                }
            };
            return e
        })();
        d.name = "combo";
        d.className = "combo-f";
        d.inputSelector = ".combo-text:not(.datebox-input)";
        window.mCombo = $.mCombo = d
    })();
    (function () {
        var d = (function () {
            var e = function (f) {
                var g = this;
                this.getText = function (h) {
                    h = h || f;
                    return $(h).numberbox("getText")
                };
                this.getName = function (h) {
                    h = h || f;
                    return $(h).next().attr("name")
                };
                this.getInput = function (h) {
                    h = h || f;
                    return $(h)
                };
                this.getSourceInput = function (h) {
                    return h = h || f
                };
                this.getValue = function (h) {
                    h = h || f;
                    return $(h).numberbox("getValue")
                };
                this.setValue = function (i, h) {
                    h = h || f;
                    $(h).numberbox("setValue", i)
                };
                this.setHint = function (h, j) {
                    j = j || f;
                    h = h || $(j).attr("hint");
                    if (h) {
                        var i = g.getInput(j);
                        i.addClass("has-hint");
                        i.attr("hint", $(j).attr("hint"));
                        i.off("blur.hint").on("blur.hint", function () {
                            mHint.blurFunc(this)
                        }).off("focus.hint").on("focus.hint", function () {
                            mHint.focusFunc(this, h)
                        }).blur()
                    }
                };
                this.setTabIndex = function (h, j) {
                    j = j || f;
                    h = h || $(j).attr("tabIndex");
                    if (h) {
                        var i = g.getInput(j);
                        i.attr("tabIndex", $(j).attr("tabIndex"))
                    }
                };
                this.isValueChange = function (h) {
                    h = h || f;
                    var i = $(h).attr("originalValue");
                    if (i == undefined) {
                        return false
                    }
                    return i == $(h).numberbox("getValue") ? false : true
                };
                this.validate = function (h) {
                    h = h || f;
                    g.getInput(h).trigger("focus.hint");
                    var i = $(h).numberbox("isValid");
                    g.getInput(h).trigger("blur.hint");
                    return i
                };
                this.disable = function (h) {
                    h = h || f;
                    $(h).numberbox("disable")
                };
                this.enable = function (h) {
                    h = h || f;
                    $(h).numberbox("enable")
                };
                this.resize = function (i, h) {
                    h = h || f;
                    $(h).width(i)
                }
            };
            e.name = "numberbox";
            e.className = "numberbox-f";
            e.createInstance = function (f) {
                return new e(f)
            };
            return e
        })();
        window.mNumberbox = $.mNumberbox = d
    })();
    (function () {
        var d = (function () {
            var e = function (f) {
                var g = this;
                this.getText = function (h) {
                    h = h || f;
                    return $(h).numberspinner("getText")
                };
                this.getName = function (h) {
                    h = h || f;
                    return $(h).next().attr("name")
                };
                this.getInput = function (h) {
                    h = h || f;
                    return $(h)
                };
                this.getSourceInput = function (h) {
                    return h = h || f
                };
                this.getValue = function (h) {
                    h = h || f;
                    return $(h).numberspinner("getValue")
                };
                this.setValue = function (i, h) {
                    h = h || f;
                    $(h).numberspinner("setValue", i)
                };
                this.getUpspinner = function (h) {
                    h = h || f;
                    return $(h).siblings().find(".spinner-arrow-up")
                };
                this.getDownspinner = function (h) {
                    h = h || f;
                    return $(h).siblings().find(".spinner-arrow-down")
                };
                this.setHint = function (h, j) {
                    j = j || f;
                    h = h || $(j).attr("hint");
                    if (h) {
                        var i = g.getInput(j);
                        i.addClass("has-hint");
                        i.attr("hint", $(j).attr("hint"));
                        i.off("blur.hint").on("blur.hint", function () {
                            mHint.blurFunc(this)
                        }).off("focus.hint").on("focus.hint", function () {
                            mHint.focusFunc(this, h)
                        }).blur()
                    }
                };
                this.setTabIndex = function (h, j) {
                    j = j || f;
                    h = h || $(j).attr("tabIndex");
                    if (h) {
                        var i = g.getInput(j);
                        i.attr("tabIndex", $(j).attr("tabIndex"))
                    }
                };
                this.isValueChange = function (h) {
                    h = h || f;
                    var i = $(h).attr("originalValue");
                    if (i == undefined) {
                        return false
                    }
                    return i == $(h).numberspinner("getValue") ? false : true
                };
                this.validate = function (h) {
                    h = h || f;
                    g.getInput(h).trigger("focus.hint");
                    var i = $(h).numberspinner("isValid");
                    g.getInput(h).trigger("blur.hint");
                    return i
                };
                this.disable = function (h) {
                    h = h || f;
                    $(h).numberspinner("disable")
                };
                this.enable = function (h) {
                    h = h || f;
                    $(h).numberspinner("enable")
                };
                this.resize = function (i, h) {
                    h = h || f;
                    $(h).numberspinner("resize", i)
                }
            };
            e.name = "numberspinner";
            e.className = "numberspinner-f";
            e.inputSelector = ".numberspinner-f";
            e.createInstance = function (f) {
                return new e(f)
            };
            return e
        })();
        window.mNumberSpinner = $.mNumberSpinner = d
    })();
    (function () {
        var d = (function () {
            var e = function (f) {
                f = $(f).hasClass("combo-text") ? $(f).parent().prev(".datebox-f") : f;
                var g = this;
                this.getText = function (h) {
                    h = h || f;
                    return $(h).datebox("getText")
                };
                this.setText = function (i, h) {
                    h = h || f;
                    return $(h).datebox("setText", i)
                };
                this.getName = function (h) {
                    h = h || f;
                    return $(h).next().find(".combo-value").attr("name")
                };
                this.getInput = function (h) {
                    h = h || f;
                    return $(h).datebox("textbox")
                };
                this.getSourceInput = function (h) {
                    return h = h || f
                };
                this.getValue = function (h) {
                    h = h || f;
                    return $(h).datebox("getValue")
                };
                this.getPanel = function (h) {
                    h = h || f;
                    return $(h).datebox("panel")
                };
                this.showPanel = function (h) {
                    h = h || f;
                    return $(h).datebox("showPanel")
                };
                this.hidePanel = function (h) {
                    h = h || f;
                    return $(h).datebox("hidePanel")
                };
                this.setValue = function (i, h) {
                    h = h || f;
                    $(h).datebox("setValue", mDate.parse(i))
                };
                this.setHint = function (h, j) {
                    j = j || f;
                    h = h || $(j).attr("hint");
                    if (h) {
                        var i = g.getInput(j);
                        i.addClass("has-hint");
                        i.attr("hint", $(j).attr("hint"));
                        i.off("blur.hint").on("blur.hint", function () {
                            mHint.blurFunc(this)
                        }).off("focus.hint").on("focus.hint", function () {
                            mHint.focusFunc(this, h)
                        }).blur()
                    }
                };
                this.setTabIndex = function (h, j) {
                    j = j || f;
                    h = h || $(j).attr("tabIndex");
                    if (h) {
                        var i = g.getInput(j);
                        i.attr("tabIndex", $(j).attr("tabIndex"))
                    }
                };
                this.isValueChange = function (h) {
                    h = h || f;
                    var i = $(h).attr("originalValue");
                    if (i == undefined) {
                        return false
                    }
                    return i == $(h).datebox("getValue") ? false : true
                };
                this.validate = function (i) {
                    i = i || f;
                    var k = g.getText(i);
                    var m = g.getValue(i);
                    if (k) {
                        var j = mDate.format(k);
                        j = j ? j : "";
                        j != mDate.format(g.getValue()) && g.setValue(j)
                    }
                    var h = h || $(i).attr("hint");
                    if (h) {
                        mHint.blurFunc(g.getInput(i), h)
                    }
                    var l = $(i).datebox("isValid");
                    g.getInput(i).trigger("blur.hint");
                    return l
                };
                this.disable = function (h) {
                    h = h || f;
                    $(h).datebox("disable")
                };
                this.enable = function (h) {
                    h = h || f;
                    $(h).datebox("enable")
                };
                this.resize = function (i, h) {
                    h = h || f;
                    $(h).datebox("resize", i)
                }
            };
            e.name = "datebox";
            e.className = "datebox-f";
            e.inputSelector = ".datebox-input";
            e.createInstance = function (f) {
                return new e(f)
            };
            return e
        })();
        window.mDatebox = $.mDatebox = d
    })();
    (function () {
        var d = (function () {
            var e = function (f) {
                var g = this;
                this.getName = function (h) {
                    h = h || f;
                    return $(h).attr("name")
                };
                this.getInput = function (h) {
                    h = h || f;
                    return $(h)
                };
                this.getSourceInput = function (h) {
                    return h = h || f
                };
                this.getValue = function (h) {
                    h = h || f;
                    return $(h).val()
                };
                this.setValue = function (i, h) {
                    h = h || f;
                    $(h).val(i)
                };
                this.setHint = function (h, j) {
                    j = j || f;
                    h = h || $(j).attr("hint");
                    if (h) {
                        var i = g.getInput(j);
                        i.addClass("has-hint");
                        i.attr("hint", $(j).attr("hint"));
                        i.off("blur.hint").on("blur.hint", function () {
                            mHint.blurFunc(this)
                        }).off("focus.hint").on("focus.hint", function () {
                            mHint.focusFunc(this, h)
                        }).blur()
                    }
                };
                this.setTabIndex = function (h, j) {
                    j = j || f;
                    h = h || $(j).attr("tabIndex");
                    if (h) {
                        var i = g.getInput(j);
                        i.attr("tabIndex", $(j).attr("tabIndex"))
                    }
                };
                this.isValueChange = function (h) {
                    h = h || f;
                    var i = $(h).attr("originalValue");
                    if (i == undefined) {
                        return false
                    }
                    return i == $(h).val() ? false : true
                };
                this.validate = function (h) {
                    h = h || f;
                    g.getInput(h).trigger("focus.hint");
                    var i = $(h).validatebox("isValid");
                    g.getInput(h).trigger("blur.hint");
                    return i
                };
                this.disable = function (h) {
                    h = h || f;
                    $(h).attr("readonly", "readonly")
                };
                this.enable = function (h) {
                    h = h || f;
                    $(h).attr("readonly", "")
                };
                this.resize = function (i, h) {
                    h = h || f;
                    $(h).width(i)
                }
            };
            e.name = "validatebox";
            e.className = "easyui-validatebox";
            e.createInstance = function (f) {
                return new e(f)
            };
            return e
        })();
        window.mValidatebox = $.mValidatebox = d
    })();
    var b = [mTextBox, mCombobox, mCombotree, mDatebox, mNumberbox, mValidatebox];
    var c = (function () {
        var d = function (e) {
            var f = this
        };
        return d
    })();
    $.fn.mIsEasyUIControl = function (d) {
        d = d ? d : this;
        for (var e = 0; e < b.length; e++) {
            if ($(d).hasClass(b[e].className)) {
                return b[e].createInstance(d)
            }
        }
        return false
    };
    $.fn.mGetEasyUIControlText = function (d) {
        return d.createInstance(this).getText()
    };
    $.fn.mGetEasyUIControlValue = function (d) {
        return d.createInstance(this).getValue()
    };
    $.fn.mValidateEasyUI = function (d) {
        d = d ? d : this;
        var g = true;
        var h = $(d).mGetEasyUIControls();
        for (var k = 0; k < h.length; k++) {
            var e = h[k];
            for (var f = 0; f < e.controls.length; f++) {
                g = e.type.createInstance(e.controls[f]).validate() && g
            }
        }
        return g
    };
    $.fn.mCancelValidateClass = function (d) {
        d = d ? d : this;
        $(".validatebox-invalid").not(".easyui-load-valid").removeClass("validatebox-invalid")
    };
    $.fn.mGetEasyUIControls = function (f) {
        f = f ? f : this;
        var d = [];
        for (var e = 0; e < b.length; e++) {
            var g = b[e];
            var h = ($(f).hasClass(g.className) && !$(f).hasClass("no-validate")) ? [$(f)] : $("." + g.className + ":not(.no-validate)", f);
            if (h && h.length > 0) {
                d.push({
                    type: g,
                    controls: h
                })
            }
        }
        return d
    };
    $.fn.mGetComboboxObject = function (d, h) {
        h = h ? h : this;
        var f = $(h).combobox("getData");
        var e = $(h).combobox("getValue");
        for (var g = 0; g < f.length; g++) {
            if (f[g][d] == e) {
                return f[g]
            }
        }
        return {}
    };
    $.fn.mGetKeyValueByKeyName = function (g, d) {
        d = d.split(",");
        var f = [];
        for (var e = 0; e < d.length; e++) {
            f.push(_.encode(g[d[e]]))
        }
        return f.join(",")
    };
    $.fn.mGetDataGridSingleRowData = function (f, d, h, k) {
        var h = $(d).attr(h || "keyname").split(",");
        var k = $(d).attr(k || "keyvalue").split(",");
        var m = $(f).datagrid("getRows");
        for (var l = 0; l < m.length; l++) {
            var g = true;
            for (var e = 0; e < h.length; e++) {
                g = g && (m[l][h[e]] === _.decode(k[e]))
            }
            if (g === true) {
                return m[l]
            }
        }
        return false
    };
    $.fn.mBindDatagridRowEvent = function (f, d, e, g, h) {
        var i = $.fn.mGetDataGridSingleRowData(f, d, g, h);
        if ($.isFunction(e) && row) {
            $(d).off("click.eu").on("click.eu", function () {
                e.apply(row)
            })
        }
    };
    c.mIsEasyUIControl = $.fn.mIsEasyUIControl;
    c.mGetEasyUIControlText = $.fn.mGetEasyUIControlText;
    c.mGetEasyUIControlValue = $.fn.mGetEasyUIControlValue;
    c.mValidateEasyUI = $.fn.mValidateEasyUI;
    c.mGetEasyUIControls = $.fn.mGetEasyUIControls;
    c.mCancelValidateClass = $.fn.mCancelValidateClass;
    c.mBindDatagridRowEvent = $.fn.mBindDatagridRowEvent;
    c.mGetDataGridSingleRowData = $.fn.mGetDataGridSingleRowData;
    c.mGetKeyValueByKeyName = $.fn.mGetKeyValueByKeyName;
    $.mEasyUI = window.mEasyUI = a.mEasyUI = c
})(Megi);
$(function () {
    $(document).off("click.menu", ".menu-item").on("click.menu", ".menu-item", function (g) {
        var h = $.browser.msie ? g.srcElement : g.target;
        if (h == this) {
            $("a,span,div,li,input[type='button']", $(this)).click()
        }
    });
    $(document).off("focus.minput", window.mCombo.inputSelector).on("focus.minput", window.mCombo.inputSelector, function () {
        var h = new window.mCombo(this).createInstance();
        var g = h.getInput();
        if (g.attr("readonly") == "readonly") {
            return
        }
        h.showPanel();
        $(this).trigger("focus.hint")
    }).off("blur.minput", window.mCombo.inputSelector).on("blur.minput", window.mCombo.inputSelector, function () {
        $(this).attr("allsel", 0);
        var h = new window.mCombo(this).createInstance();
        var g = h.getInput();
        if (g.val() == "") {
            h.setValue("");
            h.setText("")
        }
    });
    $("div:not(#divOrgList .item-list):not(.combo-panel),span,tbody").off("scroll.hi").on("scroll.hi", function (k) {
        if (Megi.isIE()) {
            return false
        }
        if ($(k.target || k.srcElement).is(".combo")) {
            return
        }
        var h = $(window.mCombo.inputSelector, this);
        var l = false;
        for (var m = 0; m < h.length; m++) {
            var g = new window.mCombo(h.eq(m)).createInstance();
            g.hidePanel();
            l = true
        }
        var j = $(window.mDatebox.inputSelector, this);
        for (var m = 0; m < j.length; m++) {
            var n = new window.mDatebox(j.eq(m));
            n.hidePanel();
            n.getInput().trigger("blur");
            l = true
        }
        l && $(document).trigger("click")
    });
    $(document).off("focus.minput", window.mDatebox.inputSelector).on("focus.minput", window.mDatebox.inputSelector, function () {
        var g = new window.mDatebox(this);
        $(this).trigger("focus.hint");
        g.showPanel()
    }).off("click.minput", window.mDatebox.inputSelector).on("click.minput", window.mDatebox.inputSelector, function () {
        if ($(this).val().length > 0) {
            var g = c(this);
            var i = a($(this).val(), g);
            var h = e($(this).val(), g);
            $(this).attr("location", i == 0 ? 1 : (h == ($(this).val().length) ? 3 : 2));
            $(this).attr("start", i);
            $(this).attr("end", h);
            d(this, i, h)
        }
    }).off("keyup.minput", window.mDatebox.inputSelector).on("keyup.minput", window.mDatebox.inputSelector, function (j) {
        var g = new window.mDatebox(this);
        var i = c(this);
        switch (j.keyCode) {
            case 37:
                i && b(this, i - 1);
                $(this).trigger("click.minput");
                break;
            case 8:
                var h = $(this).val();
                if (h) {
                    if (h.length == 4 || h.length == 7) {
                        $(this).val(h.substring(0, h.length - 1))
                    }
                }
                break;
            case 38:
                f(g, 1);
                break;
            case 39:
                (i < $(this).val().length + 1) && b(this, i + 1);
                $(this).trigger("click.minput");
                break;
            case 40:
                f(g, -1);
                break;
            default:
                break
        }
        if ($(this).val().length > 5 && $(this).val().substr($(this).val().length - 2, 1) == mDate.Spliter && $(this).val().substr($(this).val().length - 1, 1) == mDate.Spliter) {
            $(this).val($(this).val().substr(0, $(this).val().length - 1));
            return b(this, i - 1)
        }
        if ((j.keyCode >= 48 && j.keyCode <= 57) || (j.keyCode >= 96 && j.keyCode <= 105)) {
            if ((i == 4 || i == 7 || (i == 6 && ((j.keyCode >= 50 && j.keyCode <= 57) || (j.keyCode >= 98 && j.keyCode <= 105))))) {
                if (i < ($(this).val().length)) {
                    b(this, i + 1);
                    $(this).trigger("click.minput")
                } else {
                    $(this).val($(this).val().trimEnd(mDate.Spliter) + mDate.Spliter);
                    b(this, i + 1)
                }
            }
        }
    }).off("blur.minput", window.mDatebox.inputSelector).on("blur.minput", window.mDatebox.inputSelector, function () {
        var g = new window.mDatebox(this);
        var h = mDate.parse($(this).val());
        if (g && h && g.getPanel().is(":hidden")) {
            g.setValue(h);
            g.setText(mDate.format(mDate.parse(h)))
        }
    });
    $(document).off("keydown.spinner", window.mNumberSpinner.inputSelector).on("keydown.spinner", window.mNumberSpinner.inputSelector, function (g) {
        switch (g.keyCode) {
            case 38:
                new mNumberSpinner(this).getUpspinner().trigger("click");
                break;
            case 40:
                new mNumberSpinner(this).getDownspinner().trigger("click");
                break;
            default:
                break
        }
    });
    $(document).off("blur.xss", "input:visible:not(:disabled)").on("blur.xss", "input:visible:not(:disabled)", function (g) {
        $(this).val($(this).val())
    });

    function f(l, i) {
        var k = l.getInput().attr("location");
        var h = l.getInput().attr("start");
        var g = l.getInput().attr("end");
        if (k) {
            var j = mDate.parse(l.getInput().val());
            if (j) {
                switch (k) {
                    case "1":
                        j = j.addYears(i);
                        break;
                    case "2":
                        j = j.addMonths(i);
                        break;
                    case "3":
                        j = j.addDays(i);
                        break;
                    default:
                        break
                }
                l.setValue(j);
                d(l.getInput()[0], h, g)
            }
        }
    }
    function a(j, g) {
        for (var h = g - 1; h > 0; h--) {
            if (!j.charAt(h).match(/[0-9]/)) {
                return h + 1
            }
        }
        return 0
    }
    function e(j, g) {
        for (var h = g; h < j.length; h++) {
            if (!j.charAt(h).match(/[0-9]/)) {
                return h
            }
        }
        return j.length
    }
    function b(j, g) {
        if (navigator.userAgent.indexOf("MSIE") > -1) {
            var h = document.selection.createRange();
            var i = j.createTextRange();
            i.moveStart("character", g);
            i.collapse();
            i.select()
        } else {
            j.setSelectionRange(g, g)
        }
    }
    function c(i) {
        var g = 0;
        if (document.selection) {
            var h = document.selection.createRange();
            h.moveStart("character", -$(i).val().length);
            g = h.text.length
        } else {
            if (i.selectionStart || i.selectionStart == "0") {
                g = i.selectionStart
            }
        }
        return (g)
    }
    function d(g, j, h) {
        j = j || 0;
        h = h || $(g).val().length;
        if (g.setSelectionRange) {
            g.focus();
            g.setSelectionRange(j, h)
        } else {
            if (g.createTextRange) {
                var i = g.createTextRange();
                i.collapse(true);
                i.moveEnd("character", h);
                i.moveStart("character", j);
                i.select()
            }
        }
    }
});
(function () {
    var a = (function () {
        var b = function (e, f) {
            var d = this;
            var c = "/GL/GLDashboard/IsPeirodSettled";
            var g = "/GL/GLDashboard/GetSettledPeriod";
            this.glSelect = function (i, h) {
                if (i) {
                    mAjax.Post(c, {
                        date: i
                    }, function (j) {
                        if (j == true || j == "true") {
                            $.isFunction(h) && h(dateStr)
                        } else {
                            mDialog.message(HtmlLang.Write(LangModule.GL, "Period", "期间") + i.getFullYear() + "-" + (i.getMonth() + 1) + HtmlLang.Write(LangModule.Common, "IsClosedInGeneralLedger", "在总账已经结账，请先反结账"));
                            var k = new mDatebox(e);
                            k.setValue("");
                            k.getInput().focus();
                            return false
                        }
                    }, function () { }, false, true)
                }
            };
            this.initCalendar = function () {
                var h = $(e).attr("disabled");
                mAjax.Post(g, null, function (i) {
                    if (i.Success == false) {
                        return
                    }
                    var p = i.BeginDate;
                    var k = i.OpenDate;
                    var q = f.validType;
                    var m = true;
                    if (!q) {
                        m = true;
                        f.validType = " minDate ['" + p + "'] "
                    } else {
                        if (q.indexOf("minDate") >= 0) {
                            m = true;
                            var n = new RegExp("minDate\\s\\['(.*?)'\\]", "ig");
                            var l = n.exec(q);
                            if (!!l) {
                                var o = l[1];
                                if (mDate.parse(o) < mDate.parse(p)) {
                                    p = o
                                }
                                f.validType = q.replace(n, "minDate ['" + p + "']")
                            }
                        } else {
                            if (q.indexOf("maxDate") >= 0) {
                                m = false;
                                var n = new RegExp("maxDate\\s\\['(.*?)'\\]", "ig");
                                var l = n.exec(q);
                                if (!!l) {
                                    p = l[1];
                                    k = p
                                }
                            }
                        }
                    }
                    $(e).datebox(f);
                    new mDatebox(e);
                    var j = $(e).datebox("calendar");
                    j.calendar({
                        validator: function (u) {
                            if (h == "disabled") {
                                return true
                            }
                            var s = u.getFullYear();
                            var t = u.getMonth() + 1;
                            var r = k.split("-");
                            if (m && ((s * 100 + t) < (parseInt(r[0]) * 100 + parseInt(r[1])))) {
                                return false
                            }
                            if (!m && ((s * 100 + t) >= (parseInt(r[0]) * 100 + parseInt(r[1])))) {
                                return false
                            }
                            return true
                        }
                    })
                }, function () { }, false, true)
            };
            this.init = function () {
                var h = f.onSelect;
                if (!$.isFunction(h)) {
                    h = d.glSelect
                } else {
                    h = function (i) {
                        d.glSelect(i, h)
                    }
                }
                d.initCalendar()
            }
        };
        return b
    })();
    $.fn.mGLDatebox = function (b) {
        return new a(this, b).init()
    }
})();
$(function () {
    $("input.gl-easyui-datebox").each(function () {
        var dataOptions = {};
        var dataAttr = $(this).attr("data-options");
        if (dataAttr) {
            dataOptions = $.extend(eval("({" + dataAttr + "})"), dataOptions || {})
        }
        $(this).mGLDatebox(dataOptions)
    })
});
$.extend($.fn.validatebox.defaults.rules, {
    gt: {
        validator: function (c, a) {
            var b = +c;
            return b > +(a[0])
        },
        message: HtmlLang.Write(LangModule.Common, "entervaluegreaterthan", "请输入一个大于{0}的值.")
    },
    lt: {
        validator: function (c, a) {
            var b = +c;
            return b < +(a[0])
        },
        message: HtmlLang.Write(LangModule.Common, "entervaluelessthan", "请输入一个小于{0}的值.")
    },
    ge: {
        validator: function (c, a) {
            var b = +c;
            return b >= +(a[0])
        },
        message: HtmlLang.Write(LangModule.Common, "entervaluegreaterequalthan", "请输入一个大于或等于{0}的值.")
    },
    le: {
        validator: function (c, a) {
            var b = +c;
            return b <= +(a[0])
        },
        message: HtmlLang.Write(LangModule.Common, "entervaluelessequalthan", "请输入一个小于或者等于{0}的值.")
    },
    idcard: {
        validator: function (a) {
            return /^\d{15}(\d{2}[A-Za-z0-9])?$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "IDIncorrent", "Id card number format is not correct.")
    },
    minLength: {
        validator: function (b, a) {
            return b.length >= a[0]
        },
        message: HtmlLang.Write(LangModule.Common, "Needtoenteratleastcharacters", "Need to enter at least {0} characters.")
    },
    length: {
        validator: function (a, c) {
            var b = $.trim(a).length;
            return b >= c[0] && b <= c[1]
        },
        message: HtmlLang.Write(LangModule.Common, "InputContentLength", "The input length must be between {0} and {1}")
    },
    phone: {
        validator: function (a) {
            var c = /([0-9]{3,4}-)?[0-9]{7,8}/;
            var b = /^((\+?86)|(\(\+86\)))?(13[012356789][0-9]{8}|15[012356789][0-9]{8}|18[02356789][0-9]{8}|147[0-9]{8}|170[0-9]{8}|1349[0-9]{7})$/;
            return b.test(a) || c.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "PhoneNumberIncorrect", "Phone Number Incorrect.eq:010-88888888")
    },
    mobile: {
        validator: function (a) {
            return /^(13|15|18)\d{9}$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "MobileNumberIncorrect", "Mobile phone number format is not correct.")
    },
    intOrFloat: {
        validator: function (a) {
            return /^\d+(\.\d+)?$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "IntOrFloat", "Please enter the Numbers, and ensure the correct format.")
    },
    currency: {
        validator: function (a) {
            return /^\d+(\.\d+)?$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "CurrencyIncorrent", "Currency format is not correct.")
    },
    qq: {
        validator: function (a) {
            return /^[1-9]\d{4,9}$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "QQIncorrent", "QQ Number format is not correct.")
    },
    integer: {
        validator: function (a) {
            return /^([+]?[0-9])|([-]?[0-9])+\d*$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "InputInt", "Please enter an integer.")
    },
    age: {
        validator: function (a) {
            return /^(?:[1-9][0-9]?|1[01][0-9]|120)$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "AgeIncorrent", "Age must be an integer between 0 and 120.")
    },
    chinese: {
        validator: function (a) {
            return /^[\Α-\￥]+$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "InputChinese", "Please input Chinese.")
    },
    english: {
        validator: function (a) {
            return /^[A-Za-z]+$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "InputEnglish", "Please input English.")
    },
    unnormal: {
        validator: function (a) {
            return /.+/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "unnormal", "The input value can't be empty and contains other illegal characters.")
    },
    numchseng: {
        validator: function (a) {
            return /^[\u4E00-\u9FA5\uF900-\uFA2D\da-zA-Z]+$/.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "unnormal", "The input value can't be empty and contains other illegal characters.")
    },
    numCheck: {
        validator: function (a) {
            return /^[0-9]*$/.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "unnormal", "The input value can't be empty and contains other illegal characters.")
    },
    username: {
        validator: function (a) {
            return /^[a-zA-Z][a-zA-Z0-9_]{5,15}$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "UserNameIncorrent", "user name illegal (letter, allowing 6-16 bytes, allow alphanumeric underscore).")
    },
    faxno: {
        validator: function (a) {
            return /^((\(\d{2,3}\))|(\d{3}\-))?(\(0\d{2,3}\)|0\d{2,3}-)?[1-9]\d{6,7}(\-\d{1,4})?$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "FaxnoIncorrent", "Fax number is not correct.")
    },
    zip: {
        validator: function (a) {
            return /^[1-9]\d{5}$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "ZipIncorrent", "Zip number is not correct.")
    },
    ip: {
        validator: function (a) {
            return /d+.d+.d+.d+/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "IPIncorrent", "IP is not correct.")
    },
    name: {
        validator: function (a) {
            return /^[\Α-\￥]+$/i.test(a) | /^\w+[\w\s]+\w+$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "InputName", "Please input name.")
    },
    date: {
        validator: function (a) {
            return /^(?:(?!0000)[0-9]{4}([-]?)(?:(?:0?[1-9]|1[0-2])\1(?:0?[1-9]|1[0-9]|2[0-8])|(?:0?[13-9]|1[0-2])\1(?:29|30)|(?:0?[13578]|1[02])\1(?:31))|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)([-]?)0?2\2(?:29))$/i.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "DateFormatIncorrent", "Date Format is not corrent.")
    },
    msn: {
        validator: function (a) {
            return /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/.test(a)
        },
        message: HtmlLang.Write(LangModule.Common, "MSNIncorrent", "MSN is not corrent.eq:abc@hotnail(msn/live).com")
    },
    same: {
        validator: function (b, a) {
            if ($("#" + a[0]).val() != "" && b != "") {
                return $("#" + a[0]).val() == b
            } else {
                return true
            }
        },
        message: HtmlLang.Write(LangModule.Common, "TowPasswordNotSame", "Tow  password not match")
    },
    maxDate: {
        validator: function (a, c) {
            var b = $.fn.datebox.defaults.parser(c[0]);
            var d = $.fn.datebox.defaults.parser(a);
            return d < b
        },
        message: HtmlLang.Write(LangModule.Common, "datemustlessthan", "The date must be less than {0}.")
    },
    minDate: {
        validator: function (a, c) {
            var b = $.fn.datebox.defaults.parser(c[0]);
            var d = $.fn.datebox.defaults.parser(a);
            return d >= b
        },
        message: HtmlLang.Write(LangModule.Common, "datemustlargerthan", "The date must be larger than or equals to {0}.")
    },
    day: {
        validator: function (b) {
            var a = parseInt(b);
            return a >= 1 && a <= 31
        },
        message: HtmlLang.Write(LangModule.Common, "day", "day must between 1 and 31")
    },
    isBlank: {
        validator: function (b, a) {
            return $.trim(b) != ""
        },
        message: HtmlLang.Write(LangModule.Common, "unnormal", "The input value can't be empty and contains other illegal characters.")
    },
    notEqual: {
        validator: function (b, a) {
            return b != a[0]
        },
        message: HtmlLang.Write(LangModule.Common, "InputNotEqualValue", "The input value can't equal with {0} !")
    }
});
$.extend($.fn.datagrid.methods, {
    cascadeCheck: function (g, h) {
        var e = $.data(g[0], "treegrid").options;
        if (e.singleSelect) {
            return
        }
        var j = e.idField;
        var b = false;
        var d = $(g).treegrid("getSelections");
        for (var a = 0; a < d.length; a++) {
            if (d[a][j] == h.id) {
                b = true
            }
        }
        if (h.deepCascade || b === false) {
            f(g[0], h.id, j, b)
        }
        c(g[0], h.id, j, h.deepCascade, b);

        function f(t, p, v, o) {
            var s = $(t).treegrid("getParent", p);
            if (s) {
                var l = s[v];
                if (o) {
                    var u = true;
                    var m = $(t).treegrid("getChildren", l);
                    var q = $(t).treegrid("getSelections");
                    for (var k = 0; k < m.length; k++) {
                        var r = false;
                        for (var n = 0; n < q.length; n++) {
                            if (m[k][v] == q[n][v]) {
                                r = true;
                                break
                            }
                        }
                        if (!r) {
                            u = false;
                            break
                        }
                    }
                    if (u) {
                        $(t).treegrid("select", l)
                    } else {
                        $(t).treegrid("unselect", l)
                    }
                    f(t, l, v, u)
                } else {
                    $(t).treegrid("unselect", l);
                    f(t, l, v, false)
                }
            }
        }
        function c(p, n, r, o, m) {
            if (!m && o) {
                $(p).treegrid("expand", n)
            }
            var k = $(p).treegrid("getChildren", n);
            if (!k || k.length == 0) {
                return
            }
            for (var q = 0; q < k.length; q++) {
                var l = k[q][r];
                if (m) {
                    $(p).treegrid("select", l)
                } else {
                    $(p).treegrid("unselect", l)
                }
            }
        }
    }
});
$.fn.combotree.defaults.editable = true;
$.extend($.fn.combotree.defaults.keyHandler, {
    up: function () { },
    down: function () { },
    enter: function () { },
    click: function () { },
    query: function (m) {
        var g = $(this).combotree("options");
        var k = $(this).combotree("tree");
        if (g.multiple) {
            var h = k.tree("getChecked");
            if (h && h.length > 0) {
                for (var a = 0; a < h.length; a++) {
                    var l = h[a];
                    k.tree("uncheck", l.target)
                }
            }
        } else {
            $(this).combotree("setValue", "")
        }
        var f = k.tree("getChildren");
        var c = new Array();
        for (var a = 0; a < f.length; a++) {
            var l = f[a];
            if (l.text.indexOf(m) >= 0) {
                c.push(l);
                getAllParent(k, l, c);
                getAllChildren(k, l, c)
            }
        }
        for (var a = 0; a < f.length; a++) {
            var l = f[a];
            var d = false;
            for (var b = 0; b < c.length; b++) {
                if (l.id == c[b].id) {
                    d = true;
                    break
                }
            }
            if (d) {
                $(l.target).show()
            } else {
                $(l.target).hide()
            }
        }
        if (!g.hasSetEvents) {
            g.hasSetEvents = true;
            var e = g.onShowPanel;
            g.onShowPanel = function () {
                var j = k.tree("getChildren");
                for (var n = 0; n < j.length; n++) {
                    $(j[n].target).show()
                }
                e.call(this)
            };
            $(this).combo("options").onShowPanel = g.onShowPanel
        }
    }
});

function getAllChildren(c, d, g) {
    var e = c.tree("getChildren", d.target);
    if (e && e.length > 0) {
        for (var a = 0; a < e.length; a++) {
            var f = e[a];
            var h = false;
            for (var b = 0; b < g.length; b++) {
                showNode = g[b];
                if (f.id == showNode.id) {
                    h = true;
                    break
                }
            }
            if (!h) {
                g.push(f)
            }
            getAllChildren(c, f, g)
        }
    } else {
        return
    }
}
function getAllParent(b, c, e) {
    var d = b.tree("getParent", c.target);
    if (d) {
        var f = false;
        for (var a = 0; a < e.length; a++) {
            showNode = e[a];
            if (d.id == showNode.id) {
                f = true;
                break
            }
        }
        if (!f) {
            e.push(d)
        }
        getAllParent(b, d, e)
    } else {
        return
    }
}
$.extend($.fn.combobox.methods, {});
$.extend($.fn.datagrid.methods, {
    doCheckAll: function (d, b) {
        var a = $(d).datagrid("getPanel");
        var c = $("tr[datagrid-row-index]:visible input[type='checkbox']:visible:not(disabled)", a);
        if (!c || c.length == 0) {
            return
        }
        c.attr("checked", b)
    },
    doCheck: function (e, c) {
        var a = $(e).datagrid("getPanel");
        var d = $("tr[datagrid-row-index]:visible input[type='checkbox']:visible:not(disabled)" + (!c ? ":checked" : ":not(:checked)"), a);
        var b = $("tr.datagrid-header-row:visible input[type='checkbox']:visible:not(disabled)", a);
        if (!b || b.length == 0) {
            return
        }
        b.attr("checked", d.length == 0 ? c : !c)
    },
    resizeColumn: function (c, r) {
        var b = $(c).datagrid("options");
        if (b.frozenColumns.length > 0) {
            return
        }
        var k = b.columns[0];
        var o = $(c).datagrid("getPanel");
        var n = o.find(".datagrid-header:visible table");
        if (n.length < 1) {
            return
        }
        var d = n.eq(0);
        var f = $("style[easyui]", o);
        if (f.length == 0) {
            o.closest("div.datagrid-view").append('<style type="text/css" easyui="true"></style>');
            f = $("style[easyui]", o)
        }
        f.empty();
        for (var l = 0; l < n.length && n.length > 1; l++) {
            if (n.eq(l).find("td[field]:visible").length > 0) {
                d = n.eq(l);
                break
            }
        }
        var j = d.find("tr:eq(0) td:visible:eq(0)");
        var g = j.attr("field");
        var m = new RegExp("((datagrid-cell-c\\S+-)" + g + ")").exec(j.find(" > div").attr("class"))[2];
        var h = 0;
        var q = d.closest("div.datagrid-header:visible").width() - (b.scrollY ? 20 : 0);
        for (var l = 0; l < k.length; l++) {
            if (d.find("tr:eq(0) td[field='" + k[l].field + "']").is(":hidden")) {
                continue
            }
            h += k[l].fixwidth
        }
        var e = "";
        var a = [];
        for (var l = 0; l < k.length; l++) {
            if (d.find("tr:eq(0) td [field='" + k[l].field + "']").is(":hidden")) {
                continue
            }
            var p = +k[l].fixwidth / h * q - 10;
            e += "." + m + k[l].field + "{ width:" + p + "px }\n";
            k[l].width = p + 8;
            a.push(["." + m + k[l].field, p + "px"])
        }
        e += "";
        $("style[easyui]", o).html(e);
        $.data(c[0], "datagrid").ss.clean();
        $.data(c[0], "datagrid").ss.add(a)
    },
    addEditor: function (c, b) {
        if (b instanceof Array) {
            $.each(b, function (d, f) {
                var g = $(c).datagrid("getColumnOption", f.field);
                g.editor = f.editor
            })
        } else {
            var a = $(c).datagrid("getColumnOption", b.field);
            a.editor = b.editor
        }
    },
    removeEditor: function (c, b) {
        if (b instanceof Array) {
            $.each(b, function (d, f) {
                var g = $(c).datagrid("getColumnOption", f);
                g.editor = {}
            })
        } else {
            var a = $(c).datagrid("getColumnOption", b);
            a.editor = {}
        }
    },
    getRowById: function (c, e) {
        var d = $(c).datagrid("getData");
        if (!d || d.rows.length == 0) {
            return {}
        }
        var f = d.rows;
        for (var a = 0; a < f.length; a++) {
            var b = f[a];
            if (b[e.idFieldName] == e.rowId) {
                return b
            }
        }
        return {}
    },
    getRowByIndex: function (c, a) {
        var b = $(c).datagrid("getData");
        if (!b || b.rows.length == 0 || a > b.length) {
            return {}
        }
        return b.rows[a]
    },
    autoMergeCells: function (a, b) {
        return a.each(function () {
            var l = $(this);
            if (!b) {
                b = l.datagrid("getColumnFields")
            }
            var m = l.datagrid("getRows");
            var d = 0,
                e = 0,
                k = {};
            for (d; d < m.length; d++) {
                var g = m[d];
                e = 0;
                for (e; e < b.length; e++) {
                    var c = b[e];
                    var f = k[c];
                    if (!f) {
                        f = k[c] = {};
                        f[g[c]] = [d]
                    } else {
                        var h = f[g[c]];
                        if (h) {
                            h.push(d)
                        } else {
                            h = f[g[c]] = [d]
                        }
                    }
                }
            }
            $.each(k, function (j, i) {
                $.each(i, function () {
                    var o = this;
                    if (o.length > 1) {
                        var r, p, n = o[0];
                        for (var s = 0; s < o.length; s++) {
                            r = o[s];
                            p = o[s + 1];
                            if (p && (p - r) == 1) {
                                continue
                            }
                            var q = r - n + 1;
                            if (q > 1) {
                                l.datagrid("mergeCells", {
                                    index: n,
                                    field: j,
                                    rowspan: q
                                })
                            }
                            if (p && (p - r) != 1) {
                                n = p
                            }
                        }
                    }
                })
            })
        })
    },
    autoMergeCellAndCells: function (a, b) {
        return a.each(function () {
            var l = $(this);
            if (!b) {
                b = l.datagrid("getColumnFields")
            }
            var g = b[0];
            if (!g) {
                return
            }
            var m = l.datagrid("getRows");
            var c = 0,
                d = 0,
                k = {};
            for (c; c < m.length; c++) {
                var f = m[c];
                d = 0;
                var e = k[g];
                if (!e) {
                    e = k[g] = {};
                    e[f[g]] = [c]
                } else {
                    var h = e[f[g]];
                    if (h) {
                        h.push(c)
                    } else {
                        h = e[f[g]] = [c]
                    }
                }
            }
            $.each(k, function (j, i) {
                $.each(i, function () {
                    var p = this;
                    if (p.length > 1) {
                        var s, q, n = p[0];
                        for (var t = 0; t < p.length; t++) {
                            s = p[t];
                            q = p[t + 1];
                            if (q && (q - s) == 1) {
                                continue
                            }
                            var r = s - n + 1;
                            if (r > 1) {
                                for (var o = 0; o < b.length; o++) {
                                    l.datagrid("mergeCells", {
                                        index: n,
                                        field: b[o],
                                        rowspan: r
                                    })
                                }
                            }
                            if (q && (q - s) != 1) {
                                n = q
                            }
                        }
                    }
                })
            })
        })
    }
});
$.extend($.fn.tabs.methods, {
    getTabById: function (e, b) {
        var c = $.data(e[0], "tabs").tabs;
        for (var d = 0; d < c.length; d++) {
            var a = c[d];
            if (a.panel("options").id == b) {
                return a
            }
        }
        return null
    },
    selectById: function (a, b) {
        return a.each(function () {
            var f = $.data(this, "tabs");
            var l = f.options;
            var n = f.tabs;
            var m = f.selectHis;
            if (n.length == 0) {
                return
            }
            var e = $(this).tabs("getTabById", b);
            if (!e) {
                return
            }
            var j = $(this).tabs("getSelected");
            if (j) {
                if (e[0] == j[0]) {
                    return
                }
                $(this).tabs("unselect", $(this).tabs("getTabIndex", j));
                if (!j.panel("options").closed) {
                    return
                }
            }
            e.panel("open");
            var g = e.panel("options").title;
            m.push(g);
            var i = e.panel("options").tab;
            i.addClass("tabs-selected");
            var d = $(this).find(">div.tabs-header>div.tabs-wrap");
            var k = i.position().left;
            var c = k + i.outerWidth();
            if (k < 0 || c > d.width()) {
                var h = k - (d.width() - i.width()) / 2;
                $(this).tabs("scrollBy", h)
            } else {
                $(this).tabs("scrollBy", 0)
            }
            $(this).tabs("resize");
            l.onSelect.call(this, g, $(this).tabs("getTabIndex", e))
        })
    },
    existsById: function (a, b) {
        return $(a[0]).tabs("getTabById", b) != null
    }
});

function treeMatchTest(f, a, d, b) {
    var j = false;
    for (var k = 0; k < f.length; k++) {
        var e = false;
        var h = false;
        var g = false;
        var c = f[k];
        e = d || (!a || ($.isFunction(a) ? a(c) : (c.text.toLowerCase().indexOf(a.toLowerCase()) >= 0)));
        if (!e) {
            if (c.children && c.children.length > 0) {
                g = treeMatchTest(c.children, a, false, b)
            }
        }
        if (b && b.showDisabled) {
            h = false
        } else {
            if (b && b.hidItemKey && b.hideItemValue) {
                h = c[b.hidItemKey] == b.hideItemValue
            } else {
                h = "MIsActive" in c ? c.MIsActive == false || c.MIsActive == "0" : false
            }
        } (e || g) && !h ? $("#" + c.domId).show() : $("#" + c.domId).hide();
        if (e) {
            if (c.children && c.children.length > 0) {
                treeMatchTest(c.children, a, true)
            }
        }
        j = j || e || g
    }
    return j
}
$.extend($.fn.tree.methods, {
    doFilter: function (a, b) {
        return a.each(function () {
            b = b || "";
            var c = $.data(this, "tree").data;
            var d = $.data(this, "tree").options;
            treeMatchTest(c, b, false, d)
        })
    },
    checkAll: function (d) {
        var c = $(d).tree("getRoots");
        for (var a = 0; a < c.length; a++) {
            var b = $(d).tree("find", c[a].id);
            $(d).tree("check", b.target)
        }
    },
    unCheckAll: function (d) {
        var c = $(d).tree("getRoots");
        for (var a = 0; a < c.length; a++) {
            var b = $(d).tree("find", c[a].id);
            $(d).tree("uncheck", b.target)
        }
    }
});
$.fn.combotree.defaults.editable = true;
$.extend($.fn.combotree.defaults.keyHandler, {
    query: function (a) {
        var b = $.data($.data(this, "combotree").tree[0], "tree").data;
        var c = $.data($.data(this, "combotree").tree[0], "tree").options;
        treeMatchTest(b, a, false, c)
    }
});
var addComboboxAttrName = "add-combobox-type";
var addComboboxOptionsAtrrName = "add-options";
var addComboboxDataOptions = {
    bank: {},
    bankaccount: {},
    contact: {
        url: "",
        mode: "local",
        valueField: "MItemID",
        textField: "MName",
        hideItemKey: "MIsActive",
        hideItemValue: false,
    },
    account: {
        url: "",
        valueField: "MItemID",
        textField: "MFullName",
        hideItemKey: "MIsActive",
        hideItemValue: false,
    },
    employee: {
        url: "/BD/Employees/GetEmployees?isDefaultOrg=true&includeDisable=true",
        valueField: "MItemID",
        textField: "MFullName",
        hideItemKey: "MIsActive",
        hideItemValue: false,
    },
    inventory: {
        url: "/BD/Item/GetItemList",
        queryParams: {
            IncludeDisable: true
        },
        valueField: "MItemID",
        textField: "MText",
        hideItemKey: "MIsActive",
        hideItemValue: false
    },
    expense: {
        url: "/BD/ExpenseItem/GetExpenseItemListByTier?includeDisable=true",
        valueField: "MItemID",
        textField: "MText",
        groupField: "MGroupName",
        hideItemKey: "MIsActive",
        hideItemValue: false,
        groupFormatter: function (a) {
            if (a != null && a != "") {
                return a
            }
        },
    },
    currency: {
        url: "/BD/Currency/GetBDCurrencyList?isIncludeBase=true",
        valueField: "MCurrencyID",
        textField: "MCurrencyID"
    },
    taxrate: {
        url: " /BD/TaxRate/GetTaxRateList",
        valueField: "MItemID",
        textField: "MText",
    },
    trackOption: {
        url: "/BD/Tracking/GetTrackOptionsById",
        valueField: "MValue",
        textField: "MName",
        hideItemKey: "MValue1",
        hideItemValue: "0"
    },
    voucherExplanation: {
        url: "/GL/GLVoucher/GetVoucherExplanationList",
        valueField: "MItemID",
        textField: "MContent"
    }
};
var addCombboxTypeOptions = {
    account: {
        itemTitle: HtmlLang.Write(LangModule.Common, "New", "New"),
        dialogTitle: HtmlLang.Write(LangModule.Common, "newaccount", "New Account"),
        url: "/BD/BDAccount/AccountEdit?id=&parentId=&parentName=&isCombox=true",
        width: 670,
        height: 500,
        showSearchBox: true,
        searchColumns: [{
            field: "MNumber",
            title: HtmlLang.Write(LangModule.Common, "AccountCode", "科目代码"),
            width: "20%",
        }, {
            field: "MName",
            title: HtmlLang.Write(LangModule.Common, "AccountName", "科目名称"),
            width: "30%",
        }, {
            field: "MFullName",
            title: HtmlLang.Write(LangModule.Common, "AccountfullName", "科目全称"),
            width: "40%",
        }]
    },
    bank: {
        itemTitle: HtmlLang.Write(LangModule.Common, "New", "New"),
        dialogTitle: HtmlLang.Write(LangModule.Common, "newbanktype", "New Bank Type"),
        url: "/BD/BDBank/BDBankTypeEdit",
        width: 350,
        height: 280
    },
    bankaccount: {
        itemTitle: HtmlLang.Write(LangModule.Common, "New", "New"),
        dialogTitle: HtmlLang.Write(LangModule.Common, "newbankaccount", "New Bank Account"),
        url: "/BD/BDBank/BDBankAccountEdit?type=1",
        width: 450,
        height: 420
    },
    contact: {
        itemTitle: HtmlLang.Write(LangModule.Common, "New", "New"),
        dialogTitle: HtmlLang.Write(LangModule.Common, "NewContact", "New Contact"),
        url: "/BD/Contacts/ContactsEdit/",
        width: 1080,
        height: 450,
        isReload: true
    },
    employee: {
        itemTitle: HtmlLang.Write(LangModule.Common, "New", "New"),
        dialogTitle: HtmlLang.Write(LangModule.Common, "NewEmployee", "New Employee"),
        url: "/BD/Employees/EmployeesEdit/",
        width: 1100,
        height: 450
    },
    inventory: {
        itemTitle: HtmlLang.Write(LangModule.Common, "New", "New"),
        dialogTitle: HtmlLang.Write(LangModule.Common, "NewInventoryItem", "New Inventory Item"),
        url: "/BD/Item/ItemEdit/",
        width: 620,
        height: 450
    },
    expense: {
        itemTitle: HtmlLang.Write(LangModule.Common, "New", "New"),
        dialogTitle: HtmlLang.Write(LangModule.Common, "NewExpenseItem", "New Expense Item"),
        url: "/BD/ExpenseItem/ExpenseItemEdit",
        width: 520,
        height: 400
    },
    currency: {
        itemTitle: HtmlLang.Write(LangModule.Common, "New", "New"),
        dialogTitle: HtmlLang.Write(LangModule.Common, "NewCurrency", "新增货币"),
        url: "/BD/Currency/AddCurrency/",
        width: 400,
        height: 330
    },
    taxrate: {
        itemTitle: HtmlLang.Write(LangModule.Common, "New", "New"),
        dialogTitle: HtmlLang.Write(LangModule.Common, "NewTaxRate", "New Tax Rate"),
        url: "/BD/TaxRate/TaxRateEdit/",
        width: 620,
        height: 330
    },
    trackOption: {
        itemTitle: HtmlLang.Write(LangModule.Common, "New", "New"),
        dialogTitle: HtmlLang.Write(LangModule.Common, "NewTrackOption", "New Tracking Option"),
        url: "/BD/Tracking/CategoryOptionEdit",
        width: 400,
        height: 400
    },
    voucherExplanation: {
        itemTitle: HtmlLang.Write(LangModule.Common, "Management", "管理"),
        dialogTitle: HtmlLang.Write(LangModule.Common, "ExplanationManagement", "摘要管理"),
        url: "/GL/GLVoucher/GLExplanationEdit",
        width: 600,
        height: 400
    },
    filterScheme: {
        itemTitle: HtmlLang.Write(LangModule.Common, "New", "New"),
        dialogTitle: HtmlLang.Write(LangModule.Common, "AddFilterScheme", "新增过滤方案"),
        url: "/GL/GLVoucher/GLExplanationEdit",
        width: 600,
        height: 420
    }
};
(function () {
    var mAddCombobox = (function () {
        var mAddCombobox = function (selector, dataOptions, a) {
            var addOptions = $.extend(true, {}, a);
            var that = this;
            var searchLang = HtmlLang.Write(LangModule.Common, "AdvanceSearch", "高级搜索");
            var indexLang = HtmlLang.Write(LangModule.Common, "Index", "序号");
            addOptions.itemTitle = addOptions.itemTitle || HtmlLang.Write(LangModule.Common, "newitem", "New Item");
            addOptions.dialogTitle = addOptions.dialogTitle || addOptions.itemTitle;
            this.init = function () {
                var loadSuccess = dataOptions.onLoadSuccess;
                loadSuccess = $.isFunction(loadSuccess) ? loadSuccess : function () { };
                var loadSuccessAdd = (addOptions.url && addOptions.hasPermission) ? that.loadSuccess : function () { };
                dataOptions.onLoadSuccess = function () {
                    try {
                        loadSuccess($(selector).combobox("getData"))
                    } catch (msg) { }
                    loadSuccessAdd()
                };
                if (dataOptions.data) {
                    dataOptions.url = null
                }
                $(selector).combobox(dataOptions)
            };
            this.loadSuccess = function () {
                var $panel = $(selector).combobox("panel");
                if ($(".add-combobox-item", $panel.parent()).length === 0) {
                    var addDiv = $("<div class='combobox-item add-combobox-item'><span class='combobox-add'>&nbsp;</span><a href='javascript:void(0);'>" + addOptions.itemTitle + "</a></div>");
                    $panel.parent().append(addDiv);
                    addDiv.off("click.add").on("click.add", that.openAddDialog)
                }
                if (addOptions.showSearchBox) {
                    if ($(".search-combobox-item", $panel.parent()).length === 0) {
                        var searchDiv = $("<div class='combobox-item search-combobox-item'><span class='combobox-search'>&nbsp;</span><a href='javascript:void(0);'>" + searchLang + "</a></div>");
                        $panel.parent().append(searchDiv);
                        searchDiv.off("click.search").on("click.search", that.openSearchDialog)
                    }
                }
                if (addOptions.ButtonList && addOptions.ButtonList.length > 0) {
                    for (var i = 0; i < addOptions.ButtonList.length; i++) {
                        var itemClass = "button-combobox-item" + i;
                        var buttonItem = addOptions.ButtonList[i];
                        if ($("." + itemClass, $panel.parent()).length === 0) {
                            var searchDiv = $("<div class='combobox-item add-combobox-item button-combobox-itme " + itemClass + "'><span class='" + buttonItem.buttonClass + "'>&nbsp;</span><a href='javascript:void(0);'>" + buttonItem.buttonName + "</a></div>");
                            $panel.parent().append(searchDiv);
                            searchDiv.off("click").on("click", buttonItem.buttonEvent)
                        }
                    }
                }
            };
            this.openAddDialog = function () {
                var url = "";
                var $panel = $(selector).combobox("panel");
                if ($(".add-combobox-item", $panel.parent()).length > 0) {
                    url = $(".add-combobox-item", $panel.parent()).attr("url")
                }
                if (url == undefined || url == "" || url == null) {
                    url = addOptions.url
                }
                $.mDialog.show({
                    mTitle: addOptions.dialogTitle,
                    mWidth: addOptions.width || 450,
                    mHeight: addOptions.height || 350,
                    mDrag: "mBoxTitle",
                    mShowbg: true,
                    mContent: "iframe:" + url,
                    mCloseCallback: that.closeCallback
                })
            };
            this.openSearchDialog = function () {
                $(selector).combobox("hidePanel");
                if ($(".search-combobox-dialog", "body").length > 0) {
                    $(".search-combobox-dialog", "body").remove()
                }
                var html = "<div class='search-combobox-dialog' id='searchComboboxDialog' style='display:none;'><div class='search-combobox-search-div'><input class='search-combobox-search-input'><span class='search-combobox-search-span searchbox-button'>&nbsp;&nbsp;</span><span class='search-combobox-close-box mCloseBox'>&nbsp;&nbsp;</span></div><div class='search-combobox-table-div'><table class='search-combobox-table'></table></div></div></div>";
                $("body").append(html);
                $.mDialog.show({
                    mTitle: searchLang,
                    mWidth: addOptions.swidth || 600,
                    mHeight: addOptions.sheight || 400,
                    mDrag: "search-combobox-search-div",
                    mShowbg: false,
                    mShowTitle: false,
                    mContent: "id:searchComboboxDialog",
                    mOpenCallback: that.initSearchContent
                })
            };
            this.initSearchContent = function () {
                $(".search-combobox-search-input").focus();
                var func = function (data) {
                    that.showData2SearchTable(data, "", $(selector).combobox("getValue"))
                };
                if ($(selector).combobox("getData")) {
                    func($(selector).combobox("getData"))
                } else {
                    mAjax.Post(dataOptions.url, {}, function (data) {
                        func(data)
                    })
                }
            };
            this.showData2SearchTable = function (data, keyword, value) {
                var table = $(".search-combobox-table");
                if (!data) {
                    data = table.data("data")
                } else {
                    table.data("data", data)
                }
                var matchTr = "";
                table.empty();
                var header = "<tr class='search-combobox-table-header'><th style='width:50px'>" + indexLang + "</th>";
                var averageWith = (table.width() - 50) / (addOptions.searchColumns.length);
                for (var i = 0; i < addOptions.searchColumns.length; i++) {
                    var searchColumn = addOptions.searchColumns[i];
                    header += "<th style='width:" + (searchColumn.width || averageWith) + "'>" + searchColumn.title + "</th>"
                }
                header + "</tr>";
                table.append(header);
                for (var i = 0; i < data.length; i++) {
                    var matchData = data[i];
                    var fond = false;
                    var tr = "<tr " + dataOptions.valueField + "='" + matchData[dataOptions.valueField] + "' class='search-combobox-table-tr'><td class='search-combobox-table-td-index'>" + (i + 1) + "</td>";
                    for (var j = 0; j < addOptions.searchColumns.length; j++) {
                        if (keyword) {
                            if (matchData[addOptions.searchColumns[j].field] && matchData[addOptions.searchColumns[j].field].indexOf(keyword) >= 0) {
                                fond = true
                            }
                        } else {
                            fond = true
                        }
                        tr += "<td>" + mText.encode(matchData[addOptions.searchColumns[j].field]) + "</td>"
                    }
                    tr += "</tr>";
                    if (fond) {
                        $tr = $(tr);
                        table.append($tr);
                        $tr.data("addData", matchData)
                    }
                }
                var tr = value ? $("tr.search-combobox-table-tr[" + dataOptions.valueField + "='" + value + "']", table) : $("tr.search-combobox-table-tr:eq(0)", table);
                $("td", tr).addClass("combobox-item-selected");
                $(".search-combobox-table-div").height($(".search-combobox-table-div").parent().height() - $(".search-combobox-search-div").height() - 22);
                that.scroll2Tr(tr);
                that.initSearchBoxEvent()
            };
            this.initSearchBoxEvent = function () {
                var table = $(".search-combobox-table");
                $("tr:gt(0)", table).each(function (index) {
                    var $tr = $(this);
                    $tr.off("click.add").on("click.add", function (e) {
                        $(".search-combobox-close-box").trigger("click");
                        $(selector).combobox("select", $(this).attr(dataOptions.valueField));
                        e.stopPropagation();
                        return false
                    })
                });
                $(".search-combobox-search-input").off("keyup.add").on("keyup.add", function (e) {
                    if (e.keyCode == 13) {
                        that.getNextPrevRow(table).trigger("click")
                    } else {
                        if (e.keyCode == 38 || e.keyCode == 39) {
                            var tr = that.getNextPrevRow(table, -1);
                            if (tr.length > 0) {
                                $("td.combobox-item-selected").removeClass("combobox-item-selected"), $("td", tr).addClass("combobox-item-selected");
                                that.scroll2Tr(tr)
                            }
                            that.stopPropagation(e)
                        } else {
                            if (e.keyCode == 40 || e.keyCode == 37) {
                                var tr = that.getNextPrevRow(table, 1);
                                if (tr.length > 0) {
                                    $("td.combobox-item-selected").removeClass("combobox-item-selected"), $("td", tr).addClass("combobox-item-selected");
                                    that.scroll2Tr(tr)
                                }
                                that.stopPropagation(e)
                            } else {
                                that.showData2SearchTable(false, $(this).val());
                                that.stopPropagation(e)
                            }
                        }
                    }
                })
            };
            this.scroll2Tr = function (tr) {
                var div = $(".search-combobox-table-div");
                if ((tr.offset().top > (div.height() + div.offset().top - tr.height())) || (tr.offset().top < div.offset().top)) {
                    $(div).scrollTop(tr.offset().top + $(div).scrollTop() - $(div).offset().top)
                }
            };
            this.getNextPrevRow = function (table, dir) {
                switch (dir) {
                    case 1:
                        return $("td.combobox-item-selected:eq(0)").parent().next("tr.search-combobox-table-tr");
                    case -1:
                        return $("td.combobox-item-selected:eq(0)").parent().prev("tr.search-combobox-table-tr");
                    default:
                        return $("td.combobox-item-selected:eq(0)").parent()
                }
            };
            this.stopPropagation = function (e) {
                if (e.stopPropagation) {
                    e.stopPropagation()
                } else {
                    if (window.event) {
                        window.event.cancelBubble = true
                    }
                }
                return false
            };
            this.closeCallback = function (param) {
                addOptions.callback && $.isFunction(addOptions.callback) && addOptions.callback(param);
                if (addOptions.isReload !== false) {
                    $(selector).combobox("reload");
                    if (param) {
                        param = typeof param == "object" ? param[addOptions.keyField || "MItemID"] : param;
                        var valueField = $(selector).combobox("options").valueField;
                        if ($(selector).combobox("getData") && $(selector).combobox("getData").where("x." + valueField + " == '" + param + "'").length > 0) {
                            $(selector).combobox("select", param)
                        }
                    }
                }
                addOptions.hideWhenClose && $(selector).combobox("hidePanel")
            }
        };
        return mAddCombobox
    })();
    $.fn.mAddCombobox = function (type, dataOptions, addOptions) {
        type = type || $(this).attr(addComboboxAttrName);
        var dataAttr = $(this).attr("data-options");
        if (dataAttr) {
            dataOptions = $.extend(eval("({" + dataAttr + "})"), dataOptions || {})
        }
        if (addComboboxDataOptions[type]) {
            dataOptions = $.extend(addComboboxDataOptions[type], dataOptions || {})
        }
        var addAttr = $(this).attr("add-options");
        if (addAttr) {
            addOptions = $.extend(eval("({" + addAttr + "})"), addOptions || {})
        }
        if (addCombboxTypeOptions[type]) {
            addOptions = $.extend(addCombboxTypeOptions[type], addOptions || {})
        }
        return new mAddCombobox(this, dataOptions, addOptions).init()
    }
})();
$(function () {
    $("input,select").filter(function () {
        return $(this).attr(addComboboxAttrName)
    }).each(function () {
        $(this).mAddCombobox()
    })
});
$.extend($.fn.datagrid.defaults.editors, {
    addCombobox: {
        init: function (a, b) {
            var c = $("<input type='text' class='" + ((b.addOptions && b.addOptions.addClass) ? (b.addOptions.addClass) : "") + "'>").appendTo(a);
            c.mAddCombobox(b.type, b.dataOptions, b.addOptions, b.callback);
            return c
        },
        getValue: function (b) {
            var a = $(b).combobox("options");
            if (a.multiple) {
                return $(b).combobox("getValues").join(a.separator)
            } else {
                return $(b).combobox("getValue")
            }
        },
        setValue: function (a, b) {
            var c = $(a).combobox("options");
            if (c.multiple) {
                if (b) {
                    $(a).combobox("setValues", b.split(c.separator))
                } else {
                    $(a).combobox("clear")
                }
            } else {
                $(a).combobox("setValue", b)
            }
        },
        resize: function (b, a) {
            $(b).combobox("resize", a)
        },
        setText: function (c, d) {
            $(c).combobox("setText", d)
        },
    }
});
var addCombotreeAttrName = "add-combotree-type";
var addCombotreeOptionsAtrrName = "add-options";
(function () {
    var mAddCombotree = (function () {
        var mAddCombotree = function (selector, dataOptions, a) {
            var that = this;
            var addOptions = $.extend(true, {}, a);
            var indexLang = HtmlLang.Write(LangModule.Common, "Index", "序号");
            addOptions.itemTitle = addOptions.itemTitle || HtmlLang.Write(LangModule.Common, "New", "New");
            addOptions.dialogTitle = addOptions.dialogTitle || addOptions.itemTitle;
            this.init = function () {
                var loadSuccess = dataOptions.onLoadSuccess;
                loadSuccess = $.isFunction(loadSuccess) ? loadSuccess : function () { };
                var loadSuccessAdd = (addOptions.url && addOptions.hasPermission) ? that.loadSuccess : function () { };
                dataOptions.onLoadSuccess = function () {
                    try {
                        loadSuccess(selector)
                    } catch (msg) { }
                    loadSuccessAdd()
                };
                if (dataOptions.data) {
                    dataOptions.url = null
                }
                $(selector).combotree(dataOptions)
            };
            this.loadSuccess = function () {
                var $panel = $(selector).combotree("panel");
                if ($(".add-combotree-item", $panel.parent()).length === 0) {
                    var addDiv = $("<div class='combotree-item add-combotree-item'><span class=''>+&nbsp;</span><a href='javascript:void(0);'>" + addOptions.itemTitle + "</a></div>");
                    $panel.parent().append(addDiv);
                    addDiv.off("click.add").on("click.add", that.openAddDialog)
                }
                $(selector).combo("resizeByItem")
            };
            this.openAddDialog = function () {
                var url = "";
                var $panel = $(selector).combotree("panel");
                if ($(".add-combotree-item", $panel.parent()).length > 0) {
                    url = $(".add-combotree-item", $panel.parent()).attr("url")
                }
                if (url == undefined || url == "") {
                    url = addOptions.url
                }
                $.mDialog.show({
                    mTitle: addOptions.dialogTitle,
                    mWidth: addOptions.width || 450,
                    mHeight: addOptions.height || 350,
                    mDrag: "mBoxTitle",
                    mShowbg: true,
                    mContent: "iframe:" + url,
                    mCloseCallback: that.closeCallback
                })
            };
            this.stopPropagation = function (e) {
                if (e.stopPropagation) {
                    e.stopPropagation()
                } else {
                    if (window.event) {
                        window.event.cancelBubble = true
                    }
                }
                return false
            };
            this.closeCallback = function (param) {
                addOptions.callback && $.isFunction(addOptions.callback) && addOptions.callback(param);
                addOptions.hideWhenClose && $(selector).combobox("hidePanel")
            }
        };
        return mAddCombotree
    })();
    $.fn.mAddCombotree = function (type, dataOptions, addOptions) {
        type = type || $(this).attr(addCombotreeAttrName);
        var dataAttr = $(this).attr("data-options");
        if (dataAttr) {
            dataOptions = $.extend(eval("({" + dataAttr + "})"), dataOptions || {})
        }
        var addAttr = $(this).attr("add-options");
        if (addAttr) {
            addOptions = $.extend(eval("({" + addAttr + "})"), addOptions || {})
        }
        return new mAddCombotree(this, dataOptions, addOptions).init()
    }
})();
$(function () {
    $("input,select").filter(function () {
        return $(this).attr(addCombotreeAttrName)
    }).each(function () {
        $(this).mAddCombotree()
    })
});
$.extend($.fn.datagrid.defaults.editors, {
    addCombotree: {
        init: function (a, b) {
            var c = $("<input type='text' class='" + ((b.addOptions && b.addOptions.addClass) ? (b.addOptions.addClass) : "") + "'>").appendTo(a);
            c.mAddCombotree(b.type, b.dataOptions, b.addOptions, b.callback);
            return c
        },
        getValue: function (b) {
            var a = $(b).combotree("options");
            if (a.multiple) {
                return $(b).combotree("getValues").join(a.separator)
            } else {
                return $(b).combotree("getValue")
            }
        },
        setValue: function (a, b) {
            var c = $(a).combotree("options");
            if (c.multiple) {
                if (b) {
                    $(a).combotree("setValues", b.split(c.separator))
                } else {
                    $(a).combotree("clear")
                }
            } else {
                $(a).combotree("setValue", b)
            }
        },
        showPanel: function () {
            $(target).combotree("showPanel")
        },
        resize: function (b, a) {
            $(b).combotree("resize", a)
        }
    }
});
var addCombogridAttrName = "add-combogrid-type";
var addCombogridOptionsAtrrName = "add-options";
(function () {
    var mAddCombogrid = (function () {
        var mAddCombogrid = function (selector, dataOptions, addOptions) {
            var that = this;
            var indexLang = HtmlLang.Write(LangModule.Common, "Index", "序号");
            addOptions.itemTitle = addOptions.itemTitle || HtmlLang.Write(LangModule.Common, "newitem", "New Item");
            addOptions.dialogTitle = addOptions.dialogTitle || addOptions.itemTitle;
            this.init = function () {
                var loadSuccess = dataOptions.onLoadSuccess;
                loadSuccess = $.isFunction(loadSuccess) ? loadSuccess : function () { };
                var loadSuccessAdd = (addOptions.url && addOptions.hasPermission) ? that.loadSuccess : function () { };
                dataOptions.onLoadSuccess = function () {
                    try {
                        loadSuccess($(selector).combogrid("getData"))
                    } catch (msg) { }
                    loadSuccessAdd()
                };
                if (dataOptions.data) {
                    dataOptions.url = null
                }
                $(selector).combogrid(dataOptions)
            };
            this.loadSuccess = function () {
                var $panel = $(selector).combogrid("panel");
                if ($(".add-combogrid-item", $panel.parent()).length === 0) {
                    var addDiv = $("<div class='combogrid-item add-combogrid-item'><span class=''>+&nbsp;</span><a href='javascript:void(0);'>" + addOptions.itemTitle + "</a></div>");
                    $panel.parent().append(addDiv);
                    addDiv.off("click.add").on("click.add", that.openAddDialog)
                }
            };
            this.openAddDialog = function () {
                var url = "";
                var $panel = $(selector).combogrid("panel");
                if ($(".add-combogrid-item", $panel.parent()).length > 0) {
                    url = $(".add-combogrid-item", $panel.parent()).attr("url")
                }
                if (url == undefined || url == "") {
                    url = addOptions.url
                }
                if ($.isFunction(url)) {
                    url($(selector))
                } else {
                    $.mDialog.show({
                        mTitle: addOptions.dialogTitle,
                        mWidth: addOptions.width || 450,
                        mHeight: addOptions.height || 350,
                        mDrag: "mBoxTitle",
                        mShowbg: true,
                        mContent: "iframe:" + url,
                        mCloseCallback: that.closeCallback
                    })
                }
            };
            this.stopPropagation = function (e) {
                if (e.stopPropagation) {
                    e.stopPropagation()
                } else {
                    if (window.event) {
                        window.event.cancelBubble = true
                    }
                }
                return false
            };
            this.closeCallback = function (param) {
                addOptions.callback && $.isFunction(addOptions.callback) && addOptions.callback(param)
            }
        };
        return mAddCombogrid
    })();
    $.fn.mAddCombogrid = function (type, dataOptions, addOptions) {
        type = type || $(this).attr(addCombogridAttrName);
        var dataAttr = $(this).attr("data-options");
        if (dataAttr) {
            dataOptions = $.extend(eval("({" + dataAttr + "})"), dataOptions || {})
        }
        var addAttr = $(this).attr("add-options");
        if (addAttr) {
            addOptions = $.extend(eval("({" + addAttr + "})"), addOptions || {})
        }
        return new mAddCombogrid(this, dataOptions, addOptions).init()
    }
})();
$(function () {
    $("input,select").filter(function () {
        return $(this).attr(addCombogridAttrName)
    }).each(function () {
        $(this).mAddCombogrid()
    })
});
$.extend($.fn.datagrid.defaults.editors, {
    addCombogrid: {
        init: function (a, b) {
            var c = $("<input type='text' class='" + ((b.addOptions && b.addOptions.addClass) ? (b.addOptions.addClass) : "") + "'>").appendTo(a);
            c.mAddCombogrid(b.type, b.dataOptions, b.addOptions, b.callback);
            return c
        },
        getValue: function (b) {
            var a = $(b).combogrid("options");
            if (a.multiple) {
                return $(b).combogrid("getValues").join(a.separator)
            } else {
                return $(b).combogrid("getValue")
            }
        },
        setValue: function (a, b) {
            var c = $(a).combogrid("options");
            if (c.multiple) {
                if (b) {
                    $(a).combogrid("setValues", b.split(c.separator))
                } else {
                    $(a).combogrid("clear")
                }
            } else {
                $(a).combogrid("setValue", b)
            }
        },
        setText: function (b, a) {
            $(b).combogrid("setText", a)
        },
        showPanel: function () {
            $(target).combogrid("showPanel")
        },
        resize: function (b, a) {
            $(b).combogrid("resize", a)
        }
    }
});
$.extend($.fn.datagrid.defaults.editors, {
    monthpicker: {
        init: function (j, c) {
            var l = c.readonly === true;
            var b = c.lang ? c.lang : "en";
            var d = c.minDate;
            var i = c.maxDate;
            var e = c.height || $(j).innerHeight();
            var a = c.width || $(j).innerWidth();
            var h = c.required === true;
            var f = c.className || "";
            var k = "<input type='text' class='Wdate " + f + " validatebox' data-options='required:" + h + "'  style='align:center;" + (e ? ("height:" + e + "px;") : "") + (a ? ("width:" + a + "px;") : "") + "' onfocus=\"WdatePicker({ dateFmt: 'yyyy-MM',readOnly:" + l + ", lang: '" + b + "', skin:'" + b + "'" + (d ? (",minDate:'" + d + "'") : "") + (i ? (",maxDate:'" + i + "'") : "") + ((c.onpicked && $.isFunction(c.onpicked)) ? (",onpicked:function(){$(this).trigger('onpicked');}") : "") + '})"/>';
            var g = $(k).appendTo(j);
            if (c.onpicked && $.isFunction(c.onpicked)) {
                g.off("onpicked").on("onpicked", function () {
                    c.onpicked($(this).val())
                })
            }
            g.validatebox({
                required: h
            });
            return g
        },
        getValue: function (a) {
            var b = $(a).val();
            var c = b ? mDate.parse(b + "-01") : "";
            if (c && c.getFullYear() == 1900) {
                return ""
            }
            return c
        },
        setValue: function (a, b) {
            var c = mDate.parse(b) || "";
            if (c && c.getFullYear() == 1900) {
                c = ""
            } else {
                if (c) {
                    c = c.format("yyyy-MM")
                }
            }
            $(a).val(c)
        },
        resize: function (b, a) {
            $(b).width(a)
        }
    }
});
(function (b) {
    var a = (function () {
        var c = function () {
            var f = this;
            b.aJaxSubmitArray = [];
            var g = "hiddenToken";
            var e = "hiddenPageID";
            this.checkResubmit = function (h) {
                return _.indexOfArray(aJaxSubmitArray, h) >= 0
            }, this.removeAjaxSbumit = function (h) {
                aJaxSubmitArray = _.removeFromArray(aJaxSubmitArray, h)
            }, this.Post = this.post = function (o, v, u, k, n, l, t, j) {
                v = v || {};
                var s = {
                    url: o,
                    param: $.extend(true, {}, v)
                };
                var h = $("input[name='" + g + "']");
                var q = h.attr("pageid");
                var m = h.val();
                var i = $.toJSON(v);
                var p = 1024 * 1024 * 1;
                j = j === true || (j !== false && i.length >= p);
                if (j === true) {
                    i = $.toJSON({
                        data: mZip.zip(i),
                        zip: true
                    })
                }
                var r = {
                    type: "post",
                    url: o,
                    contentType: "application/json; charset=utf-8",
                    data: i,
                    async: l !== false,
                    beforeSend: function (w) {
                    !!q && w.setRequestHeader(e, q);
                        if (!!m && t) {
                            w.setRequestHeader(g, m)
                        }
                    },
                    success: function (x) {
                        f.removeAjaxSbumit(s);
                        f.setTokenValue(x);
                        if (n) {
                            $("body").unmask()
                        }
                        if (x && x.accessDenied === 1) {
                            top.showLoginDialog(x.type, function () { })
                        } else {
                            if (x && x.RequstExcetion) {
                                f.removeAjaxSbumit(s);
                                $("body").unmask();
                                $("html").unmask();
                                var y = {
                                    mWidth: 600,
                                    mHeight: 500,
                                    mShowbg: true,
                                    mContent: "iframe:" + x.ErrorUrl + "&showclose=1",
                                    mNoAuth: true,
                                    mShowTitle: false,
                                    mBoxID: "errorPage"
                                };
                                top.$.mDialog.show(y);
                                $(".m-notfound-img", "body").css("height", "70%");
                                $(".m-error-parentdiv").css("display", "block")
                            } else {
                                if (x && x.lengthOutOfRange === 1) {
                                    var z = "";
                                    var B = x.list;
                                    for (var w = 0; w < B.length; w++) {
                                        z += B[w] + "<br>"
                                    }
                                    $.isFunction(k) && k(x);
                                    top.$.mDialog.error(z, function () { }, true)
                                } else {
                                    if (x && x.IsJsonResult) {
                                        if (new mError().checkResultValid(x)) {
                                            var A = x.Data;
                                            window.mFilter.doFilter("track", [o, v, A]);
                                            $.isFunction(u) && u(A);
                                            b.noCancelValidate !== true && $("body").mCancelValidateClass()
                                        }
                                    } else {
                                        var A = !!x.Data ? x.Data : x;
                                        window.mFilter.doFilter("track", [o, v, A]);
                                        $.isFunction(u) && u(A);
                                        b.noCancelValidate !== true && $("body").mCancelValidateClass()
                                    }
                                }
                            }
                        }
                    },
                    error: function (w) {
                        f.removeAjaxSbumit(s);
                        $("body").unmask();
                        $("html").unmask();
                        $.isFunction(k) && k(w)
                    }
                };
                if (t && f.checkResubmit(s)) {
                    console.warn("美记研发组提醒：发现重复提交问题，具体url如下:" + o + ",具体的请求参数如下:" + JSON.stringify(v));
                    return false
                } else {
                    aJaxSubmitArray.push(s)
                }
                if (n) {
                    $("body").mask("")
                }
                $.ajax(r)
            };
            this.setTokenValue = function (h) {
                if (!!h) {
                    if (h[g] && h[g].length > 0) {
                        $("input[name='" + g + "']").val(h[g])
                    }
                }
            };
            this.Submit = this.submit = function (k, o, m, l, h, n, j, i) {
                return f.post(k, o, m, l, h !== true, n !== true, j !== true, i)
            };
            this.FormGet = this.formPost = function (h, i, k, j) {
                $.ajax({
                    type: "post",
                    url: h,
                    contentType: "application/x-www-form-urlencoded;charset=utf-8",
                    data: i ? $.toJSON(i) : "",
                    success: function (l) {
                        d = l.Data;
                        if (d && !d.Success && d.Relogin) {
                            $(b).mTopWindow.showLoginDialog();
                            if (j && j != undefined) {
                                j(d)
                            }
                        } else {
                            if (d && k != undefined) {
                                k(d)
                            }
                        }
                        b.noCancelValidate !== true && $("body").mCancelValidateClass()
                    },
                    error: function (l) {
                        $.isFunction(j) && j(l)
                    }
                })
            };
            this.Get = this.get = function (h, i, k, j) {
                $.ajax({
                    type: "get",
                    url: h,
                    contentType: "application/json; charset=utf-8",
                    data: i ? $.toJSON(i) : "",
                    success: function (m) {
                        var l = m.Data;
                        if (l && l.accessDenied === 1) {
                            top.showLoginDialog(function () {
                                c.Get(h, i, k, j)
                            })
                        } else {
                            if ($.isFunction(k)) {
                                k(l)
                            }
                        }
                        b.noCancelValidate !== true && $("body").mCancelValidateClass()
                    },
                    error: function (l) {
                        $.isFunction(j) && j(l)
                    }
                })
            }
        };
        return c
    })();
    $.mAjax = b.mAjax = new a()
})(window);
(function () {
    var a = (function () {
        var b = function () {
            var c = this;
            this.getErroeModel = function (e) {
                var f = Object.keys(MActionResultCodeEnum);
                for (var d = 0; d < f.length; d++) {
                    if (MActionResultCodeEnum[f[d]].Code == e) {
                        return MActionResultCodeEnum[f[d]]
                    }
                }
            };
            this.checkResultValid = function (k) {
                if (k.Success === false || k.Codes) {
                    var f = "";
                    var h = false;
                    for (var d = 0; d < k.Codes.length; d++) {
                        if (k.Codes[d] != MActionResultCodeEnum.Success.Code) {
                            var g = c.getErroeModel(k.Codes[d]);
                            f += "<div class='m-error-code-text' >" + (g.Message && (g.Message.indexOf("<") == 0) ? g.Message : mText.encode(g.Message)) + "</div>";
                            h = h || (k.Codes[d] == MActionResultCodeEnum.ExceptionExist.Code)
                        }
                    }
                    if (k.Messages && k.Messages.length > 0 && !h) {
                        for (var e = 0; e < k.Messages.length; e++) {
                            f += "<div class='m-error-message-text' >" + (k.Messages[e] && (k.Messages[e].indexOf("<") == 0) ? k.Messages[e] : mText.encode(k.Messages[e])) + "</div>"
                        }
                    }
                    if (f.length > 0) {
                        mDialog.error(f, null, true);
                        return false
                    }
                }
                return true
            }
        };
        return b
    })();
    window.mError = a
})();
var MActionResultCodeEnum = {
    Success: {
        Code: 200,
        Message: HtmlLang.Write(LangModule.Common, "Success", "成功")
    },
    AccessTokenMissing: {
        Code: 400,
        Message: HtmlLang.Write(LangModule.Common, "AccessTokenMissing", "登录令牌丢失")
    },
    ContextMissing: {
        Code: 401,
        Message: HtmlLang.Write(LangModule.Common, "ContactInvalid", "登录信息丢失")
    },
    ContextExpired: {
        Code: 402,
        Message: HtmlLang.Write(LangModule.Common, "ContextExpired", "登录已经过期")
    },
    UnTracableAddress: {
        Code: 403,
        Message: HtmlLang.Write(LangModule.Common, "UnTracableAddress", "地址不可达")
    },
    AddressNotMatch: {
        Code: 404,
        Message: HtmlLang.Write(LangModule.Common, "AddressNotMatch", "登录所在的IP与系统IP不一致")
    },
    OrgExpired: {
        Code: 405,
        Message: HtmlLang.Write(LangModule.Common, "OrgExpired", "组织过期")
    },
    SyncBusy: {
        Code: 406,
        Message: HtmlLang.Write(LangModule.Common, "SyncBusy", "当前组织其他用户正在进行操作，请稍后重试！")
    },
    AccessDenied: {
        Code: 501,
        Message: HtmlLang.Write(LangModule.Common, "AccessDenied", "没有权限")
    },
    ExceptionExist: {
        Code: 502,
        Message: HtmlLang.Write(LangModule.Common, "ExceptionExistPelaseRetry", "系统出现异常, 请关闭此窗口后重试!")
    },
    MContactInvalid: {
        Code: 900,
        Message: HtmlLang.Write(LangModule.Common, "ContactInvalid", "联系人被删除或者禁用")
    },
    MEmployeeInvalid: {
        Code: 901,
        Message: HtmlLang.Write(LangModule.Common, "EmployeeInvalid", "员工被删除或者禁用")
    },
    MMerItemInvalid: {
        Code: 902,
        Message: HtmlLang.Write(LangModule.Common, "MerItemInvalid", "商品项目被删除或者禁用")
    },
    MExpItemInvalid: {
        Code: 903,
        Message: HtmlLang.Write(LangModule.Common, "ExpItemInvalid", "费用项目被删除或者禁用")
    },
    MPaItemInvalid: {
        Code: 904,
        Message: HtmlLang.Write(LangModule.Common, "PaItemInvalid", "工资项目被删除或者禁用")
    },
    MTrackItemInvalid: {
        Code: 905,
        Message: HtmlLang.Write(LangModule.Common, "TrackItemInvalid", "跟踪项被删除或者禁用")
    },
    MNumberInvalid: {
        Code: 906,
        Message: HtmlLang.Write(LangModule.Common, "NumberInvalid", "编号重复或者不合法")
    },
    MAccountInvalid: {
        Code: 907,
        Message: HtmlLang.Write(LangModule.Common, "AccountInvalid", "科目被删除或者禁用")
    },
    MCurrencyInvalid: {
        Code: 908,
        Message: HtmlLang.Write(LangModule.Common, "CurrencyInvalid", "币别被删除或者禁用")
    },
    MPeriodClosed: {
        Code: 909,
        Message: HtmlLang.Write(LangModule.Common, "PeriodClosed", "选择的期间已经结账了")
    },
    MPeriodBeforeStart: {
        Code: 910,
        Message: HtmlLang.Write(LangModule.Common, "PeriodBeforeStart", "选择的期在总账启用之前")
    },
    MVoucherApproved: {
        Code: 911,
        Message: HtmlLang.Write(LangModule.Common, "VoucherApproved", "凭证已审核")
    },
    MVoucherUnapprove: {
        Code: 912,
        Message: HtmlLang.Write(LangModule.Common, "VoucherUnapprove", "凭证未审核")
    },
    MPeriodTransferExists: {
        Code: 913,
        Message: HtmlLang.Write(LangModule.Common, "PeriodTransferExists", "本期的期末结转类型已经存在了，请先删除")
    },
    MInitBalanceOver: {
        Code: 914,
        Message: HtmlLang.Write(LangModule.Common, "InitBalanceOver", "总账未完成初始化")
    },
    MTrackGroupInvalid: {
        Code: 915,
        Message: HtmlLang.Write(LangModule.Common, "TrackGroupInvalid", "跟踪项分组已经被禁用或者删除")
    },
    MAccountHasSub: {
        Code: 916,
        Message: HtmlLang.Write(LangModule.Common, "AccountHasSub", "选择的科目含有子科目")
    },
    MExpItemHasSub: {
        Code: 917,
        Message: HtmlLang.Write(LangModule.Common, "ExpItemHasSub", "选择的费用项目含有子项目")
    },
    MCheckGroupValueNotMatchWithAccount: {
        Code: 918,
        Message: HtmlLang.Write(LangModule.Common, "CheckGroupValueNotMatchWithAccount", "核算维度的值与科目的核算维度不匹配")
    },
    MVoucherHasNotEntry: {
        Code: 919,
        Message: HtmlLang.Write(LangModule.Common, "VoucherHasNotEntry", "凭证分录为空")
    },
    MCreditDebitImbalance: {
        Code: 920,
        Message: HtmlLang.Write(LangModule.Common, "CreditDebitImbalance", "凭证分录借贷方不平衡")
    },
    MVoucherEntryHasNotAccountOrAccountNotMatchCheckGroup: {
        Code: 921,
        Message: HtmlLang.Write(LangModule.Common, "VoucherEntry", "凭证分录没有选择科目或者科目与核算维度值不匹配")
    },
    MVoucherModuleFastCodeInvalid: {
        Code: 922,
        Message: HtmlLang.Write(LangModule.Common, "VoucherModuleFastCodeInvalid", "凭证模板快速码重复了")
    },
    MCurrencyNotMatchAccount: {
        Code: 923,
        Message: HtmlLang.Write(LangModule.Common, "CurrencyNotMatchAccount", "非外币核算的科目录入了外币")
    },
    MOneDocCreatedMoreThanOneVoucher: {
        Code: 924,
        Message: HtmlLang.Write(LangModule.Common, "OneDocCreatedMoreThanOneVoucher", "一张业务单据生成多多张非法凭证")
    },
    MHasUnsettledPeriodBefore: {
        Code: 925,
        Message: HtmlLang.Write(LangModule.Common, "HasUnsettledPeriodBefore", "本期之前有未结账的期")
    },
    MInvalidDocExsits: {
        Code: 926,
        Message: HtmlLang.Write(LangModule.Common, "InvalidDocExsits", "存在不合法的业务单据")
    },
    MAccountNumberDuplicated: {
        Code: 927,
        Message: HtmlLang.Write(LangModule.Common, "AccountNumberDuplicated", "科目编号重复了")
    },
    MAccountNameDuplicated: {
        Code: 928,
        Message: HtmlLang.Write(LangModule.Common, "AccountNameDuplicated", "科目名称重复了")
    },
    MAccountParentInvalid: {
        Code: 929,
        Message: HtmlLang.Write(LangModule.Common, "AccountParentInvalid", "科目父级科目不合法")
    },
    MAccountNewCheckGroupNotMathWithOldData: {
        Code: 930,
        Message: HtmlLang.Write(LangModule.Common, "AccountNewCheckGroupNotMathWithOldData", "科目新的核算维度与历史数据不符")
    },
    MAccountDetailIncomplete: {
        Code: 931,
        Message: HtmlLang.Write(LangModule.Common, "AccountDetailIncomplete", "科目基本信息不全")
    },
    MVoucherExplanationDuplicated: {
        Code: 932,
        Message: HtmlLang.Write(LangModule.Common, "VoucherExplanationDuplicated", "凭证摘要重复")
    },
    MVoucherExplanationInvalid: {
        Code: 933,
        Message: HtmlLang.Write(LangModule.Common, "VoucherExplanationInvalid", "凭证摘要不合法")
    },
    MVoucherInvalid: {
        Code: 934,
        Message: HtmlLang.Write(LangModule.Common, "VoucherInvalid", "凭证不合法")
    },
    MBillHasAlreadyCreatedVoucher: {
        Code: 935,
        Message: HtmlLang.Write(LangModule.Common, "BillHasAlreadyCreatedVoucher", "单据已经生成了凭证，不可重复生成!")
    },
    MBankAccountInvalid: {
        Code: 936,
        Message: HtmlLang.Write(LangModule.Common, "BankAccountInvalid", "银行账号不合法!")
    },
    MFixAssetsTypeNumberDuplicated: {
        Code: 937,
        Message: HtmlLang.Write(LangModule.Common, "FixAssetsTypeNumberDuplicated", "资产类型编码重复!")
    },
    MFixAssetsTypeNameDuplicated: {
        Code: 938,
        Message: HtmlLang.Write(LangModule.Common, "FixAssetsNameDuplicated", "资产类型名称重复!")
    },
    MFixAssetsNumberDuplicated: {
        Code: 939,
        Message: HtmlLang.Write(LangModule.Common, "FixAssetsNumberDuplicated", "资产编码重复!")
    },
    MFixAssetsNameDuplicated: {
        Code: 940,
        Message: HtmlLang.Write(LangModule.Common, "FixAssetsNameDuplicated", "资产名称重复!")
    },
    MFixAssetsTypeRelatedFixAssets: {
        Code: 941,
        Message: HtmlLang.Write(LangModule.Common, "FixAssetsTypeRelatedFixAssets", "资产类型被引用!")
    },
    MFixAssetsAlreadyDepreciated: {
        Code: 942,
        Message: HtmlLang.Write(LangModule.Common, "FixAssetsAlreadyDepreciated", "资产已经开始折旧!")
    },
    MFixAssetsAlreadyDisposed: {
        Code: 943,
        Message: HtmlLang.Write(LangModule.Common, "FixAssetsAlreadyDisposed", "资产卡片已经被处置，不可重复处置!")
    },
    MFixAssetsIsNormal: {
        Code: 944,
        Message: HtmlLang.Write(LangModule.Common, "FixAssetsIsNormal", "资产卡片处于正常状态，不可撤销处置!")
    },
    MDeprecationVoucherCreated: {
        Code: 945,
        Message: HtmlLang.Write(LangModule.Common, "DeprecationVoucherCreated", "本期计提凭证已经生成，请删除后重试!")
    },
    MFixAssetsInvalid: {
        Code: 946,
        Message: HtmlLang.Write(LangModule.Common, "FixAssetsInvalid", "资产卡片不合法!")
    },
    MAccountAreRequiredForDepreciation: {
        Code: 947,
        Message: HtmlLang.Write(LangModule.Common, "AccountAreRequiredForDepreciation", "请设置计提折旧需要的科目!")
    },
    MDepreciatedVoucherHasBeenCreatedDuringItsHandledPeriod: {
        Code: 948,
        Message: HtmlLang.Write(LangModule.Common, "DepreciatedVoucherHasBeenCreatedDuringItsHandledPeriod", "资产处置的期间已经开始计提折旧了，请删除折旧凭证后再做撤销处置操作!")
    },
    MExistsCreatedDepreciationVoucherAfterThisPeriod: {
        Code: 949,
        Message: HtmlLang.Write(LangModule.Common, "ExistsCreatedDepreciationVoucherAfterThisPeriod", "当前期间以后期间存在计提折旧凭证，请先删除!")
    },
    MExistsUnDepreciatedPeriodBefore: {
        Code: 950,
        Message: HtmlLang.Write(LangModule.Common, "ExistsUndepreciatedPeriodBeforeCurrent", "当前期之前存在未计提的期间，请先计提!")
    },
    MDepreciationVoucherIsApproved: {
        Code: 951,
        Message: HtmlLang.Write(LangModule.Common, "DepreciationVoucherIsApproved", "当前期计提生成的凭证已经审核，请先反审核凭证!")
    },
    MExistsChangeAfterThisPeriod: {
        Code: 952,
        Message: HtmlLang.Write(LangModule.Common, "ExistsChangeAfterThisPeriod", "当前期间以后期间存在影响折旧的变更，不可当期删除计提折旧凭证或重新生成计提折旧凭证!")
    },
    MResubmitException: {
        Code: 953,
        Message: HtmlLang.Write(LangModule.Common, "ResubmitException", "请求已经提交，请不要重复操作!")
    },
    MLoginInfoLost: {
        Code: 954,
        Message: HtmlLang.Write(LangModule.Common, "LoginInfoLost", "登陆信息已经丢失，请刷新页面重试!")
    },
    MFapiaoDeletedOrObsolete: {
        Code: 955,
        Message: HtmlLang.Write(LangModule.Common, "FapiaoDeletedOrObsolete", "发票不存在或者已作废!")
    },
    MTableNotExists: {
        Code: 956,
        Message: HtmlLang.Write(LangModule.Common, "TableNotExists", "开票单不存在!")
    },
    MFapiaoAmountCannotLargerThanTableAmount: {
        Code: 957,
        Message: HtmlLang.Write(LangModule.Common, "FapiaoAmountCannotLargerThanTableAmount", "发票金额不可大于开票单金额!")
    },
    MExistsFapiaoInReconciledStatus: {
        Code: 958,
        Message: HtmlLang.Write(LangModule.Common, "ExistsFapiaoInReconciledStatus", " 存在已经勾兑的发票，无法为其设置勾兑状态!")
    },
    MExistsFapiaoInNoReconciledStatus: {
        Code: 959,
        Message: HtmlLang.Write(LangModule.Common, "ExistsFapiaoInNoReconciledStatus", "存在已经设置为无需勾兑的发票，无法为其设置勾兑状态!")
    },
    MExistsFapiaoInNoCodingStatus: {
        Code: 960,
        Message: HtmlLang.Write(LangModule.Common, "ExistsFapiaoInNoCodingStatus", "存在已经设置为无需生成凭证的发票，无法为其设置生成凭证状态!")
    },
    MExistsFapiaoCreatedFapiao: {
        Code: 961,
        Message: HtmlLang.Write(LangModule.Common, "ExistsFapiaoCreatedFapiao", "存在已经生成凭证的发票，如需重新生成，请先删除凭证!")
    },
    MFapiaoCreateVoucherWithNoContact: {
        Code: 962,
        Message: HtmlLang.Write(LangModule.Common, "FapiaoCreateVoucherWithNoContact", "存在联系人为空的发票，请先选择或者录入生成凭证的联系人!")
    },
    MFapiaoCreateVoucherWithNoDebitAccount: {
        Code: 963,
        Message: HtmlLang.Write(LangModule.Common, "FapiaoCreateVoucherWithNoDebitAccount", "存在借方科目为空的发票，请先选择借方科目!")
    },
    MFapiaoCreateVoucherWithNoCreditAccount: {
        Code: 964,
        Message: HtmlLang.Write(LangModule.Common, "FapiaoCreateVoucherWithNoCreditAccount", "存在贷方科目为空的发票，请先选择贷方科目!")
    },
    MFapiaoCreateVoucherWithNoTaxAccount: {
        Code: 965,
        Message: HtmlLang.Write(LangModule.Common, "FapiaoCreateVoucherWithNoTaxAccount", "存在税金额不为0但是税科目为空的发票，请先选择税科目!")
    },
    MFapiaoModuleFastCodeInvalid: {
        Code: 966,
        Message: HtmlLang.Write(LangModule.Common, "FapiaoModuleFastCodeInvalid", "发票模板编码重复!")
    },
    MOutFapiaoPeriodIsClosed: {
        Code: 967,
        Message: HtmlLang.Write(LangModule.Common, "OutFapiaoPeriodIsClosed", "销项发票生成凭证对应期间已经结账，请先反结账该期间!")
    },
    MOutFapiaoPeriodStartGL: {
        Code: 968,
        Message: HtmlLang.Write(LangModule.Common, "OutFapiaoPeriodStartGL", "销项发票中存在启用日期之前的数据，不能生成凭证！")
    },
    MExistsReconciledFapiao: {
        Code: 980,
        Message: HtmlLang.Write(LangModule.Common, "TableExistsReconciledFapiao", "开票单存在已经勾对的发票，如需删除，请先删除发票勾对关系!")
    },
    MExistsVoucherNumberLagerThanSetLength: {
        Code: 981,
        Message: HtmlLang.Write(LangModule.Common, "MExistsVoucherNumberLagerThanSetLength", "系统存在超过所设置最大位数编码的凭证编号，请修改凭证最大位数!")
    },
    MVoucherNumberNotMeetDemand: {
        Code: 982,
        Message: HtmlLang.Write(LangModule.Common, "MVoucherNumberNotMeetDemand", "凭证编号的位数已达到系统设置的最大值，请【用户在设置-总账设置-凭证设置-凭证编号设置】进行调整!")
    },
    MVoucherEntryMoreThanOne: {
        Code: 983,
        Message: HtmlLang.Write(LangModule.Common, "VoucherEntryMoreThanOne", "凭证至少有两行分录!")
    },
    MVoucherDeleted: {
        Code: 984,
        Message: HtmlLang.Write(LangModule.Common, "VoucherDeleted", "凭证已经被删除!")
    },
    MVoucherSpanApprove: {
        Code: 985,
        Message: HtmlLang.Write(LangModule.Common, "VoucherSpanApprove", "不支持跨期批量操作!")
    },
    MExistsFapiaoCreatedVoucher: {
        Code: 1000,
        Message: HtmlLang.Write(LangModule.Common, "MExistsFapiaoCreatedVoucher", "存在已经生成凭证的发票，请刷新发票速记列表后重新操作.")
    }
};
(function () {
    var a = (function () {
        var b = function (c) { };
        return b
    })();
    $.fn.mTopWindow = (function (c, b) {
        while (c != b) {
            b = c;
            c = c.parent
        }
        return b
    })(window.parent, window);
    $.fn.mSubmit = function () {
        window.mFilter.doFilter("track", [$(this).attr("action")]);
        $(this).submit()
    };
    $.fn.mFormSubmit = function (c) {
        if (c.validate == undefined) {
            c.validate = true
        }
        var b = $(this);
        return top.accessRequest(function () {
            b.mFormPost(c, true)
        })
    };
    $.fn.mFormValidate = function (b) {
        b = b ? b : this;
        return true && $(b).mValidateEasyUI()
    };
    $.fn.mFormGetForm = function (b) {
        b = b ? b : this;
        var c = new Array();
        var d = {};
        $(dataFieldSelector, b).each(function () {
            var g = value = "";
            var e = $(this).mIsEasyUIControl();
            if ($(this).hasClass(langFieldClassName)) {
                c.push($(this).getLangEditorData())
            } else {
                if (e) {
                    g = e.getName();
                    value = e.getValue()
                } else {
                    g = $(this).attr("name");
                    var f = $(this).attr("type");
                    if (f == "checkbox") {
                        value = $(this).attr("checked") == "checked" ? true : false
                    } else {
                        if (f == "radio") {
                            if ($(this).is(":checked") == true) {
                                value = $(this).val()
                            }
                        } else {
                            $(this).trigger("focus.hint");
                            value = $(this).val();
                            $(this).trigger("blur.hint")
                        }
                    }
                }
            }
            if (g) {
                if ($(this).hasClass("money-format")) {
                    value = value.replace(/\,/g, "")
                }
                d[g] = value
            }
        });
        d.MultiLanguage = c;
        return d
    };
    $.fn.mFormSetForm = function (b, d) {
        d = d ? d : this;
        var c = [];
        $(dataFieldSelector).each(function () {
            var j = $(this).attr("name");
            var e = b[j];
            var f = $(this).mIsEasyUIControl();
            if ($(this).hasClass(langFieldClassName)) {
                var g = b[multiLanguageName];
                var k = "";
                for (var h = 0; h < g.length; h++) {
                    if (g[h].MFieldName == $(this).attr("name")) {
                        k = g[h];
                        break
                    }
                }
                $(this).initLangEditor(k)
            } else {
                if (f) {
                    e = b[f.getName()];
                    f.setValue(e)
                } else {
                    if ($(this).attr("type") == "radio") {
                        $(this).attr("checked", e == true && $(this).val() == "true")
                    } else {
                        if ($(this).attr("type") == "checkbox") {
                            $(this).attr("checked", (e == "true" || e == true))
                        } else {
                            if (e && (e.toString().indexOf("/Date(") > -1 || $(this).hasClass("date-type"))) {
                                e = $.mDate.format(e)
                            } else {
                                if ((e || e == 0) && $(this).hasClass("money-type")) {
                                    e = mMath.toMoneyFormat(e)
                                }
                            }
                            $(this).is("input") || $(this).is("select") ? $(this).val(e) : $(this).text(e)
                        }
                    }
                }
            }
        });
        if ($(d).initHint != undefined) {
            $(d).initHint()
        }
        $("input,selected,textarea", d).attr("changed", "")
    };
    $.fn.mFormClearForm = function (b) {
        b = b ? b : this;
        $(b).find(dataFieldSelector).each(function () {
            var c = "";
            if ($(this).attr("defaultValue") != undefined) {
                c = $(this).attr("defaultValue")
            }
            var d = $(this).mIsEasyUIControl();
            if (d) {
                d.setValue(c)
            } else {
                if ($(this).attr("type") == "radio") {
                    $(this).attr("checked", false)
                } else {
                    if ($(this).attr("type") == "checkbox") {
                        $(this).attr("checked", false)
                    } else {
                        $(this).val(c)
                    }
                }
            }
        })
    };
    $.fn.mFormDisable = function (b) {
        b = b ? b : this;
        $(dataFieldSelector, b).each(function () {
            var e = value = "";
            var c = $(this).mIsEasyUIControl();
            if ($(this).hasClass(langFieldClassName)) {
                $(this).attr("readonly", "readonly");
                $(this).next(".m-lang-btn").hide()
            } else {
                if (c) {
                    c.disable()
                } else {
                    var d = $(this).attr("type");
                    if (d == "checkbox" || d == "radio") {
                        $(this).attr("disabled", "disabled")
                    } else {
                        $(this).attr("readonly", "readonly")
                    }
                }
            }
        })
    };
    $.fn.mFormEnable = function (b) {
        b = b ? b : this;
        $(dataFieldSelector, b).each(function () {
            var e = value = "";
            var c = $(this).mIsEasyUIControl();
            if ($(this).hasClass(langFieldClassName)) {
                $(this).attr("readonly", "");
                $(this).next(".m-lang-btn").show()
            } else {
                if (c) {
                    c.enable()
                } else {
                    var d = $(this).attr("type");
                    if (d == "checkbox" || d == "radio") {
                        $(this).attr("disabled", "")
                    } else {
                        $(this).attr("readonly", "")
                    }
                }
            }
        })
    };
    $.fn.mFormGet = function (c, b) {
        b = b ? b : this;
        $(b).mask("");
        var d = c.param || {};
        $(keyFieldSelector).each(function () {
            var g = "";
            var f = "";
            var e = $(this).mIsEasyUIControl();
            if (e) {
                f = e.getName();
                g = e.getValue()
            } else {
                if ($(this).attr("type") == "radio") {
                    if ($(this).is(":checked") == true) {
                        f = $(this).attr("name");
                        g = $(this).val()
                    }
                } else {
                    if ($(this).attr("type") == "checkbox") {
                        f = $(this).attr("name");
                        g = $(this).attr("checked")
                    } else {
                        f = $(this).attr("name");
                        g = $(this).val()
                    }
                }
            }
            d[f] = g
        });
        mAjax.Post(c.url, d, function (e) {
            if (e && c.fill !== false) {
                $(b).mFormSetForm(e)
            }
            if (c.callback && $.isFunction(c.callback)) {
                c.callback(e)
            }
            $(b).unmask()
        }, function () {
            $(b).unmask()
        })
    };
    $.fn.mFormPost = function (c, b) {
        if (!c.param) {
            c.param = null
        }
        if (c.validate == true) {
            var g = $(this).mFormValidate();
            var f = true;
            if (c.extValidate != undefined) {
                f = c.extValidate()
            }
            if (!g || !f) {
                return
            }
        }
        var e = b === true ? mAjax.submit : mAjax.post;
        var d = $(this).mFormGetForm();
        if (c.param == null) {
            c.param = $.extend(true, c.param, d)
        } else {
            for (prop in c.param) {
                if (typeof c.param[prop] === "object" && !!(c.param[prop])) {
                    c.param[prop] = $.extend(true, c.param[prop], d)
                }
            }
        }
        e(c.url, c.param, function (h) {
            if (c.callback != undefined) {
                c.callback(h)
            }
        })
    }
})();
(function () {
    var a = (function () {
        var b = function (c) {
            var d = this;
            c = c || "body";
            this.initHint = function () {
                var k = d.findHintControl();
                for (var f = 0; f < k.length; f++) {
                    var g = k.eq(f);
                    var h = g.attr("hint");
                    var e = h;
                    if (e) {
                        var j = g.mIsEasyUIControl();
                        if (j) {
                            j.setHint(e)
                        } else {
                            g.off("blur.hint").on("blur.hint", function () {
                                b.blurFunc(this)
                            }).off("focus.hint").on("focus.hint", function () {
                                b.focusFunc(this, e)
                            }).blur()
                        }
                    }
                }
            };
            this.findHintControl = function () {
                inputs = $("input,select,textarea", c).filter(function () {
                    return $(this).attr("hint") && !$(this).hasClass("has-hint")
                }) || [];
                if (inputs.length == 0 && $(c).attr("hint") && !$(c).hasClass("has-hint")) {
                    inputs = $(c)
                }
                return inputs
            }
        };
        return b
    })();
    $.fn.initHint = function (b) {
        b = b || this;
        new a(b).initHint()
    };
    window.mHint = $.mHint = a;
    $.extend(a, {
        blurFunc: function (b) {
            if (!$(b).hasClass("hint-blur")) {
                $(b).addClass("hint-blur");
                $(b).val($(b).val())
            }
        },
        focusFunc: function (b, c) {
            if ($(b).hasClass("hint-blur")) {
                $(b).removeClass("hint-blur");
                $(b).val($(b).val())
            }
        }
    })
})();
$(function () {
    $("body").initHint()
});
window.focusSwitch = function (a, b) {
    $(a).val("");
    $(b).val("");
    $(a).off("focus.switch").on("focus.switch", function () {
        $(this).hide();
        $(b).show().focus()
    }).keyup(function () {
        if ($(this).attr("hint") != $(this).val()) {
            $(b).val($(this).val())
        }
    }).blur(function () {
        if ($(this).attr("hint") != $(this).val()) {
            $(b).val($(this).val())
        }
    });
    $(b).off("blur.switch").on("blur.switch", function () {
        if ($(this).val().length == 0) {
            $(this).hide();
            $(a).show()
        }
    }).keyup(function () {
        $(a).val($(this).val())
    }).blur(function () {
        $(a).val($(this).val())
    })
};
(function (a) {
    a.fn.extend({
        insertAtCaret: function (b) {
            var g = a(this)[0];
            var f = a.trim(a(this).attr("hint"));
            if (f != "") {
                g.value = g.value.replace(f, "")
            }
            if (document.selection) {
                this.focus();
                sel = document.selection.createRange();
                sel.text = b;
                this.focus()
            } else {
                if (g.selectionStart || g.selectionStart == "0") {
                    var d = g.selectionStart;
                    var e = g.selectionEnd;
                    var c = g.scrollTop;
                    g.value = g.value.substring(0, d) + b + g.value.substring(e, g.value.length);
                    this.focus();
                    g.selectionStart = d + b.length;
                    g.selectionEnd = d + b.length;
                    g.scrollTop = c
                } else {
                    this.value += b;
                    this.focus()
                }
            }
        }
    })
})(jQuery);
(function () {
    var a = (function () {
        var b = function (e, d) {
            e = e || ("." + window.mLanguageClassName);
            d = d || "";
            var c = this;
            this.langDiv = "";
            this.divId = "";
            this.inDiv = false;
            this.langConfigBtn = "";
            this.currentLang = b.getLang()[0];
            this.disabled = false;
            this.setLangEditorData = function () {
                var g = d.MMultiLanguageField;
                for (var h = 0; h < g.length; h++) {
                    var f = g[h].MValue;
                    $("#" + g[h].MLocaleID, c.langDiv).val(f ? f : "");
                    if (g[h].MLocaleID == c.currentLang.LangID) {
                        $(e).val(f ? f : "")
                    }
                }
            };
            this.initLangEditor = function () {
                c.divId = c.fieldName + "LangDiv";
                c.langDiv = $("#" + c.divId);
                $(e).data(langDataName, d);
                $(e).data(langDivId, c.divId);
                if ($("#" + c.divId).length == 0) {
                    c.initLangDiv();
                    c.initLangEditorDiv();
                    c.initLangDivEvent();
                    window.setInterval(c.postionInterval, 100)
                }
                if (d) {
                    c.setLangEditorData()
                }
            };
            this.selectorKeyup = function () {
                var f = $(e).val();
                var g = $("#" + b.getLang()[0].LangID, c.langDiv).val();
                for (var h = 0; h < b.getLang().length; h++) {
                    if (g !== $("#" + b.getLang()[h].LangID, c.langDiv).val()) {
                        g = false;
                        break
                    } else {
                        g = $("#" + b.getLang()[h].LangID, c.langDiv).val()
                    }
                }
                if (g === false) {
                    $("#" + c.currentLang.LangID, c.langDiv).val(f)
                } else {
                    $("input[type='text']", c.langDiv).val(f)
                }
            };
            this.langOkClick = function () {
                c.hideLangDiv();
                var f = $("#" + c.currentLang.LangID, c.langDiv).val();
                $(e).val(f);
                $(e).validatebox("isValid")
            };
            this.langCancelClick = function () {
                c.hideLangDiv()
            };
            this.hideAllLangDiv = function () {
                $("." + mLanguageDivClassName).not(c.langDiv).hide()
            };
            this.showLangDiv = function () {
                c.disabled = $(e).attr("disabled");
                var f = b.getLang();
                for (var g = 0; g < f.length; g++) {
                    if (c.disabled == "disabled") {
                        $("#" + f[g].LangID, "#" + c.divId).attr("disabled", "disabled")
                    } else {
                        $("#" + f[g].LangID, "#" + c.divId).removeAttr("disabled")
                    }
                }
                c.langDiv.show()
            };
            this.hideLangDiv = function () {
                c.langDiv.hide();
                c.checkLangValue()
            };
            this.checkLangValue = function () {
                var f = "";
                var h = [];
                for (var g = 0; g < b.getLang().length; g++) {
                    var j = $("#" + b.getLang()[g].LangID, c.langDiv).val();
                    if (j == "") {
                        h.push(g)
                    } else {
                        if (f == "") {
                            f = j
                        }
                    }
                }
                for (var g = 0; g < h.length; g++) {
                    $("#" + b.getLang()[h[g]].LangID, c.langDiv).val(f)
                }
            };
            this.toggleLangDiv = function () {
                c.hideAllLangDiv();
                if (c.langDiv.is(":hidden")) {
                    c.initLangDivPostion();
                    c.showLangDiv()
                } else {
                    c.hideLangDiv()
                }
            };
            this.fieldName = $(e).attr("name");
            this.initLangDiv = function () {
                var k = "<div id='" + c.divId + "' class='" + mLanguageDivClassName + "'>";
                k += "<ul>";
                var h = b.getLang();
                for (var g = 0; g < h.length; g++) {
                    var f = "<li>" + h[g].LangName + "</li>";
                    var j = "<li><input type='text' style='line-height:16px;height:16px' id='" + h[g].LangID + "' value=''/>";
                    k += f + j
                }
                k += "<li class='m-lang-ok-cancel'><input class='m-lang-ok l-btn easyui-linkbutton-yellow ' type='button' value='" + LangKey.OK + "'/></li>";
                k += "</ul>";
                k += "</div>";
                c.langDiv = $(k)
            };
            this.postionInterval = function () {
                if (c.langDiv.is(":visible")) {
                    var f = c.langDiv.offset;
                    if (f.left != $(e).offset().left) {
                        c.initLangDivPostion()
                    }
                }
            };
            this.getLangData = function () { };
            this.initLangDivPostion = function () {
                var g = $(e).offset().top + $(e).outerHeight() + c.langDiv.outerHeight();
                var f = $(".m-imain-content").length > 0 ? $(window).outerHeight() : ($("body").outerHeight() - $(".m-fixed-bottom").outerHeight());
                var g = (g >= f) ? ($(e).offset().top - c.langDiv.outerHeight()) : ($(e).offset().top + $(e).outerHeight());
                c.langDiv.css({
                    left: $(e).offset().left + "px",
                    top: g + "px"
                })
            };
            this.initLangDivEvent = function () {
                c.langConfigBtn.off("click.lang").on("click.lang", function (f) {
                    c.toggleLangDiv();
                    if (f.stopPropagation) {
                        f.stopPropagation()
                    } else {
                        if (window.event) {
                            window.event.cancelBubble = true
                        }
                    }
                });
                c.langDiv.off("click.lang").on("click.lang", function (f) {
                    if (f.stopPropagation) {
                        f.stopPropagation()
                    } else {
                        if (window.event) {
                            window.event.cancelBubble = true
                        }
                    }
                });
                $("." + langOkClassName, c.langDiv).off("click.lang").on("click.lang", c.langOkClick);
                $("." + langCancelClassName, c.langDiv).off("click.lang").on("click.lang", c.langCancelClick);
                $(e).on("blur.lang", c.selectorKeyup)
            };
            this.initLangEditorDiv = function () {
                var f = "<span class='" + mLangBtnClassName + "'></span>";
                c.langConfigBtn = $(f);
                $(e).after(c.langConfigBtn);
                c.langDiv.width($(e).outerWidth() - 2);
                $(e).css({
                    width: $(e).width() - c.langConfigBtn.width() + "px"
                });
                $(e).addClass(langInputClassName);
                c.langConfigBtn.css({
                    top: ($(e).offset().top + $(e).outerHeight()) - (c.langConfigBtn.offset().top + c.langConfigBtn.height()) - 1 + "px",
                    right: 1 + "px"
                });
                c.langDiv.appendTo("body");
                $("input", c.langDiv).not("input[type='button']").width((c.langDiv.width() - 15) + "px");
                $(e).width($(e).width());
                $("input", c.langDiv).not("input[type='button']").mSelect()
            }
        };
        return b
    })();
    window.mLang = $.mLang = jQuery.mLang = a;
    $.fn.initLangEditor = function (b) {
        return new a(this, b).initLangEditor()
    };
    a.getLang = function () {
        return top.OrgLang || parent.OrgLang || window.OrgLang
    };
    $.fn.getLangEditorData = function () {
        if (!$(this).hasClass(langFieldClassName)) {
            return undefined
        }
        var c = $(this).data(langDataName);
        if (!c) {
            var d = a.getLang();
            c = {};
            c.MMultiLanguageField = [];
            c.MFieldName = $(this).attr("name");
            for (var b = 0; b < d.length; b++) {
                c.MMultiLanguageField.push({
                    MLocaleID: d[b].LangID,
                    MValue: ""
                })
            }
        }
        var e = $("#" + $(this).data(langDivId));
        var f = c.MMultiLanguageField;
        for (var b = 0; b < f.length; b++) {
            f[b].MValue = $("#" + f[b].MLocaleID, e).val()
        }
        return c
    }
})();
$(function () {
    $("." + langFieldClassName).not(":hidden").each(function () {
        $(this).initLangEditor()
    });
    $(document).off("click.lang").on("click.lang", function () {
        $("." + mLanguageDivClassName).not(":hidden").each(function () {
            $("." + langOkClassName, $(this)).trigger("click.lang")
        })
    })
});
(function (a) {
    var b = (function () {
        var c = function () { };
        return c
    })();
    $.extend(b, {
        toMoneyFormat: function (h, e, f) {
            var d = e || 2;
            if (f != undefined) {
                e = f;
                if (h != null && h != "") {
                    var c = String(h);
                    if (c.indexOf(".") > -1) {
                        var g = c.split(".");
                        if (g.length == 1 || g[1].length <= f) {
                            e = f
                        } else {
                            if (g[1].length < d) {
                                e = g[1].length
                            } else {
                                e = d
                            }
                        }
                    }
                }
            }
            return b.toMilliFormat(b.toDecimal(h, e))
        },
        toMilliFormat: function (h) {
            var e = h + "";
            e = e.replace(new RegExp(",", "g"), "");
            var f = "";
            if (/^([-+]).*$/.test(e)) {
                f = e.replace(/^([-+]).*$/, "$1");
                e = e.replace(/^([-+])(.*)$/, "$2")
            }
            if (/^[0-9]+(\.[0-9]+)?$/.test(e)) {
                var e = e.replace(new RegExp("^[0]+", "g"), "");
                if (/^\./.test(e)) {
                    e = "0" + e
                }
                var c = e.replace(/^[0-9]+(\.[0-9]+)?$/, "$1");
                var d = e.replace(/^([0-9]+)(\.[0-9]+)?$/, "$1");
                var g = /(\d+)(\d{3})/;
                while (g.test(d)) {
                    d = d.replace(g, "$1,$2")
                }
                return f + d + c
            } else {
                return h
            }
        },
        toDecimal: function (d, f) {
            if (d == undefined || d == null || $.trim(d) == "") {
                return ""
            }
            if (isNaN(d)) {
                return d
            }
            var e = 100;
            if (f == undefined) {
                f = 2
            }
            if (f == 0) {
                var c = String(d);
                if (c.indexOf(".") > -1) {
                    return c.split(".")[0]
                } else {
                    return c
                }
            } else {
                if (f == 3) {
                    e = 1000
                } else {
                    if (f == 4) {
                        e = 10000
                    } else {
                        if (f == 5) {
                            e = 100000
                        } else {
                            if (f == 6) {
                                e = 1000000
                            } else {
                                if (f == 7) {
                                    e = 10000000
                                } else {
                                    if (f == 8) {
                                        e = 100000000
                                    }
                                }
                            }
                        }
                    }
                }
            }
            var h = parseFloat(d);
            if (isNaN(h)) {
                alert("function:changeTwoDecimal->parameter error");
                return false
            }
            if (h > 0) {
                h = h + 1e-10
            }
            var h = Math.round(h * e) / e;
            var i = h.toString();
            var g = i.indexOf(".");
            if (g < 0) {
                g = i.length;
                i += "."
            }
            while (i.length <= g + f) {
                i += "0"
            }
            return i
        }
    });
    $.mMath = window.mMath = a.Math = b
})(Megi);
var switchDashboardConfirm = false;
var dashboardTitles = [{
    title: HtmlLang.Write(LangModule.Common, "dashboard", "Dashboard"),
    url: "/FW/FWHome/FWDashboard?type=0&ver=" + window.top.VersionNumber
}, {
    title: HtmlLang.Write(LangModule.GL, "GeneralLedger", "General Ledger"),
    url: "/GL/GLVoucher/GLVoucherHome?ver=" + window.top.VersionNumber
}, {
    title: HtmlLang.Write(LangModule.Common, "bankaccounts", "Bank Accounts"),
    url: "/BD/BDBank/BDBankHome?ver=" + window.top.VersionNumber
}, {
    title: HtmlLang.Write(LangModule.Common, "purchase", "Purchase"),
    url: "/IV/Bill/BillList?ver=" + window.top.VersionNumber
}, {
    title: HtmlLang.Write(LangModule.Common, "sales", "Sales"),
    url: "/IV/Invoice/InvoiceList?ver=" + window.top.VersionNumber
}, {
    title: HtmlLang.Write(LangModule.Common, "expenseclaims", "Expense Claims"),
    url: "/IV/Expense/ExpenseList?ver=" + window.top.VersionNumber
}, {
    title: HtmlLang.Write(LangModule.Common, "allreports", "All Reports"),
    url: "/Report/?ver=" + window.top.VersionNumber,
    ignoreUrl: "/Report/Report2/"
}, {
    title: HtmlLang.Write(LangModule.FP, "FapiaoHome", "发票"),
    url: "/FP/FPHome/FPDashboard"
}];
var MegiTab = {
    tabswitch: new BrowserTabSwitch(),
    addTitle: function (b, e, d) {
        var c = '<li ><span class="m-tab-inner">';
        c += '<span class="m-tab-loading"></span>';
        c += '<a href="###" onclick="MegiTab.showCurrent(' + e + ')" class="m-tab-item" locked="' + (d ? "1" : "") + '" data-index="' + e + '">';
        c += b;
        c += "</a>";
        c += '<a href="###"  data-index="' + e + '" class="close">&nbsp;</a>';
        c += "</span></li>";
        var a = $(c);
        $(".m-tab").find("ul").find("li").last().before(a);
        var f = $(".m-tab").find("ul").find("li").last().prev();
        $(f).css("max-width", ($(f).width() + 5) + "px");
        return a
    },
    addContent: function (c, f, b, a) {
        var e = $(".m-tab-content[data-index='" + f + "']");
        e.attr("data-url", c);
        var d = $("iframe", e)[0];
        c = Megi.getVersionUrl(c);
        c = Megi.addTabTitle(c, a);
        d.src = c;
        $(d).attr("used", "used");
        if (b === true) {
            if ($.browser.msie) {
                d.onreadystatechange = function () {
                    if (d.readyState == "complete") {
                        $(d).attr("change", "change");
                        MegiTab.initChangeInput(d)
                    }
                }
            } else {
                d.onload = function () {
                    $(d).attr("change", "change");
                    MegiTab.initChangeInput(d)
                }
            }
        }
        return e
    },
    resetLiStyle: function () {
        $(".m-tab-item").closest("li").each(function () {
            var a = $(this).attr("data-cls");
            $(this).removeClass("current");
            if (a != undefined) {
                $(this).addClass(a)
            }
        })
    },
    update: function (h, b, e, d) {
        h = h == 0 ? h : (h || MegiTab.getTabIndex(e));
        $(".m-tab-content[data-index='" + h + "']").attr("data-url", e);
        var f = $("iframe", ".m-tab-content[data-index='" + h + "']")[0];
        var i = $(f).attr("src");
        var c = f.contentWindow;
        c.MReady = null;
        var a = "&_tabTitle_=" + mDES.encrypt(b);
        if (i && i.toLowerCase() != e.toLowerCase()) {
            var g = function () {
                e = Megi.getVersionUrl(e);
                e = Megi.addTabTitle(e, b);
                c.mWindow.reload(e);
                $(".m-tab-item[data-index='" + h + "']").text(b)
            };
            if (switchDashboardConfirm === true) {
                c.$.mDialog.confirm(HtmlLang.Write(LangModule.Common, "suretorefresh", " Sure to switch dashboard to " + b + "?"), function () {
                    g()
                })
            } else {
                g()
            }
        } else {
            if (d === true) {
                e = Megi.getVersionUrl(e);
                e = Megi.addTabTitle(e, b);
                c.mWindow.reload(e)
            }
        }
    },
    showCurrent: function (b) {
        var c = $("li.current", ".m-tab").find(".m-tab-item");
        var a = c.attr("data-index") != b && c.attr("locked") == "1";
        if (a) {
            return false
        }
        MegiTab.resetLiStyle();
        $(".m-tab-content,.m-tab-ctrl").hide();
        $(".m-tab-item[data-index='" + b + "']").closest("li").addClass("current");
        $(".m-tab-content[data-index='" + b + "']").show();
        try {
            var d = $.mTab.getCurrentIframe()[0].contentWindow.MReady;
            $.isFunction(d) && d()
        } catch (f) { }
        $(window).resize()
    },
    isTabExsits: function (a) {
        var b = false;
        if (a) {
            $(".m-tab").find(".m-tab-item").each(function () {
                var c = $(this).html();
                if (a.toLowerCase() === c.toLowerCase()) {
                    b = $(this).closest(".m-tab-item").attr("data-index")
                }
            })
        }
        return b
    },
    getTabIndexByTitle: function (c) {
        var a = false;
        if (!c) {
            a = $(".m-tab-item", ".current").attr("data-index")
        } else {
            var b = MegiTab.isDashboardTitle(c);
            if (b) {
                return b
            }
            $(".m-tab").find(".m-tab-item").each(function () {
                var d = $(this).html();
                if (c.toLowerCase() === d.toLowerCase()) {
                    a = $(this).closest(".m-tab-item").attr("data-index")
                }
            })
        }
        return a
    },
    isDashboardTitle: function (a) {
        if (a) {
            for (var b = 0; b < dashboardTitles.length; b++) {
                if (dashboardTitles[b].title.toLowerCase() == a.toLowerCase().trimEnd("/")) {
                    return dashboardTitles[b]
                }
            }
        }
        return false
    },
    getIframeByUrl: function (b) {
        var a = MegiTab.getTabIndex(b, true);
        return (a >= "0" && a <= "10") ? $("iframe", ".m-tab-content[data-index='" + a + "']")[0] : a
    },
    getTabIndex: function (f, e) {
        var g = false;
        if (!f) {
            g = $(".m-tab-item", ".current").attr("data-index")
        } else {
            if (e !== true) {
                var d = MegiTab.isDashboardUrl(f);
                if (d) {
                    return d
                }
            }
            var c = f.split("?")[0].toLowerCase();
            var b = "/BD/Setup";
            var a = f.indexOf(b) > -1;
            $(".m-tab-content").each(function () {
                var h = $(this).attr("data-url");
                var i = h;
                if (!!h) {
                    h = h.split("?")[0].toLowerCase();
                    if (c.trim("/") == h.trim("/") || a && i.indexOf(b) > -1) {
                        g = $(this).attr("data-index")
                    }
                }
            })
        }
        return g
    },
    isDashboardUrl: function (a) {
        var a = a.split("?")[0];
        if (a) {
            for (var b = 0; b < dashboardTitles.length; b++) {
                var c = a.toLowerCase().trimEnd("/");
                var d = dashboardTitles[b].url.split("?")[0].toLowerCase().trimEnd("/");
                var e = dashboardTitles[b].ignoreUrl ? dashboardTitles[b].ignoreUrl.split("?")[0].toLowerCase() : "########";
                if (c.indexOf(d) > -1 && c.indexOf(e) == -1) {
                    return dashboardTitles[b]
                }
            }
        }
        return false
    },
    removeTab: function (a) {
        var b = MegiTab.getTabIndexByTitle(a);
        if (b !== false) {
            MegiTab.remove(b)
        }
    },
    add: function (d, g, f, j, b) {
        var i = $(".m-tab-content:hidden", ".m-main").filter(function () {
            return $(this).attr("data-index") != 0 && !($("iframe", $(this)).attr("src"))
        });
        var a = MegiTab.getTabIndex(g);
        if (typeof a == "object") {
            MegiTab.showCurrent(0);
            MegiTab.update(0, a.title || d, g || a.url, true)
        } else {
            var e = (f === true && MegiTab.getTabIndex(d)) || false;
            e = e || (i.length > 0 ? i.attr("data-index") : false);
            if (e == false) {
                var d = HtmlLang.Write(LangModule.Common, "tabcountoverflow", "Your can add maximum 10 tabs!");
                $.mDialog.alert(d);
                return false
            }
            if (f != true && a != false) {
                e = a
            }
            var k = $("iframe", ".m-tab-content[data-index='" + e + "']");
            if (!(k.attr("used"))) {
                var c = MegiTab.addTitle(d, e, b);
                var h = MegiTab.addContent(g, e, j, d);
                MegiTab.showCurrent(e);
                FW.addTab(c, h);
                MegiTab.setTabItemWidth();
                MegiTab.bindTitleAction()
            }
            return e
        }
    },
    renameTab: function (a, b) {
        $(".m-tab .m-tab-item[data-index='" + a + "']").text(b)
    },
    addOrUpdate: function (c, g, e, d, i, b, f) {
        var j = (!$.isNumeric(c) || typeof (c) == "string") ? MegiTab.getTabIndex(g) : c;
        var h = g;
        g = MegiTab.tabswitch.intercept(g);
        if (typeof j == "object") {
            var k = $("iframe", ".m-tab-content[data-index='" + 0 + "']")[0];
            var a = $(k).attr("src");
            if (f === true && a.split("?")[0] == (g || j.url).split("?")[0]) {
                k.contentWindow.MReady = function () {
                    $(".m-tab-item[data-index='0']").prev().addClass("m-img-loading");
                    MegiTab.update(0, j.title, g || j.url, true)
                }
            } else {
                $(".m-tab-item[data-index='0']").prev().addClass("m-img-loading");
                MegiTab.update(0, j.title, g || j.url, true)
            }
            d === false ? "" : MegiTab.showCurrent(0)
        } else {
            if (j !== false) {
                var k = $("iframe", ".m-tab-content[data-index='" + j + "']")[0];
                b = b || $(".m-tab-item[data-index='" + j + "']").attr("locked") == "1";
                $(".m-tab-item[data-index='" + j + "']").attr("locked", b ? "1" : "0");
                g = Megi.addTabTitle(g, c);
                if (f === true) {
                    k.contentWindow.MReady = function () {
                        k.contentWindow.mWindow.reload(g || k.src)
                    }
                } else {
                    $(".m-tab-item[data-index='" + j + "']").prev().addClass("m-img-loading");
                    k.contentWindow.mWindow.reload(g || k.src)
                }
                d === false ? "" : MegiTab.showCurrent(j);
                c && !$.isNumeric(c) && MegiTab.renameTab(j, c)
            } else {
                MegiTab.add(c, g, e, i, b)
            }
        }
    },
    setStable: function (b, a) {
        b = b || window.frameElement;
        a = a || "input[type!='hidden'][nocheckchange!='1'],textarea[nocheckchange!='1'],.change-item";
        $(a, b.contentDocument).each(function () {
            var c = ($(this).is("input") || $(this).is("textarea")) ? $(this).val() : $(this).text();
            $(this).attr("srcValue", c);
            $(this).attr("checkChange", "checkChange")
        });
        $(b).attr("change", "change");
        $("body").unmask()
    },
    clearUnusedIframe: function () {
        $(".m-tab-content[data-index != 0]:hidden iframe[used != 'used']", ".m-main").each(function () {
            this.src = ""
        })
    },
    remove: function (b, a) {
        $(".m-tab-content[data-index='" + b + "']").attr("data-url", "");
        MegiTab.clearUnusedIframe();
        a = a || $("iframe", ".m-tab-content[data-index='" + b + "']")[0];
        $(a).attr("change") && $(a).removeAttr("change");
        a.onload = a.onreadystatechange = null;
        $(a).attr("used", "");
        try {
            $("body", a.contentWindow.document).empty()
        } catch (e) { }
        var d = $(".m-tab-item[data-index='" + b + "']").closest("li").next().find(".m-tab-item").attr("data-index");
        var c = $(".m-tab-item[data-index='" + b + "']").closest("li").prev().find(".m-tab-item").attr("data-index");
        $(".m-tab-item[data-index='" + b + "']").closest("li").remove();
        $(".m-tab-content[data-index='" + b + "']").hide();
        if ($(".current", ".m-tab").length == 0) {
            MegiTab.showCurrent(c)
        }
        MegiTab.setTabItemWidth()
    },
    bindTitleAction: function () {
        $(".close", ".m-tab").unbind().click(function () {
            var b = $(this).attr("data-index");
            var a = $("iframe", ".m-tab-content[data-index='" + b + "']")[0];
            if ($(a).attr("change") === "change" && MegiTab.isValueChange(a) && !$(".m-tab-item[data-index='" + b + "']").prev().hasClass("m-img-loading")) {
                var c = HtmlLang.Write(LangModule.Common, "suretodeleteunsavedtab", "You have edited this page ,are your sure to close it?");
                $.mDialog.confirm(c, function () {
                    MegiTab.remove(b, a)
                })
            } else {
                MegiTab.remove(b, a)
            }
            return false
        });
        $(".m-tab-ul li").not("#aNewTab").each(function () {
            if ($("#divDataGridContainer").length > 0) {
                return
            }
            var a = function (d) {
                d = d || window.event;
                var e = d.target || d.srcElement;
                var f = $(e).attr("data-index");
                var b = $("iframe", ".m-tab-content[data-index='" + f + "']")[0];
                if (b) {
                    var c = $(".iframe-top-bg");
                    $(".home-refresh").off("click.menu").on("click.menu", function () {
                        c.trigger("click");
                        window.accessRequest(function () {
                            b.contentWindow.mWindow.reload()
                        })
                    });
                    $(".home-close").off("click.menu").on("click.menu", function () {
                        c.trigger("click");
                        $(e).next(".close").trigger("click")
                    });
                    $(".home-close-all").off("click.menu").on("click.menu", function () {
                        c.trigger("click");
                        $(".m-tab").find(".close").trigger("click")
                    });
                    $(".home-close-right").off("click.menu").on("click.menu", function () {
                        c.trigger("click");
                        $(e).parent().parent().nextAll("li").find(".close").trigger("click")
                    });
                    $(".home-close-others").off("click.menu").on("click.menu", function () {
                        c.trigger("click");
                        MegiTab.showCurrent(f);
                        $(e).parent().parent().siblings("li").find(".close").trigger("click")
                    })
                }
            };
            $(this).mTip({
                target: $(".home-context-menu"),
                width: 150,
                height: 180,
                parent: $(".home-context-menu").parent(),
                trigger: "contextmenu",
                callback: a
            })
        });
        $(".m-tab-ul").sortable("destroy");
        $(".m-tab-ul").sortable({
            items: ":not(.stable)"
        })
    },
    setTabItemWidth: function () {
        var b = $(".m-tab-item").length;
        var d = $(".m-tab").width();
        var c = 0;
        $(".m-tab>ul>li").each(function () {
            c += $(this).width()
        });
        var a = d / b;
        $(".m-tab>ul>li").each(function (e) {
            if ($(this).hasClass("last")) {
                $(this).css("width", "88px")
            } else {
                if (a > 150) {
                    $(this).css("width", "150px")
                } else {
                    $(this).css("width", (a - 2) + "px")
                }
            }
        })
    },
    init: function () {
        MegiTab.bindTitleAction();
        MegiTab.setTabItemWidth()
    },
    showDashboard: function (c, b) {
        var a = "/FW/FWHome/FWDashboard?type=" + (b ? b : 0) + "&ver=" + window.top.VersionNumber;
        top.$("#dashboard").src = a;
        Megi.showCurrent(0);
        $.mTabTitle(c)
    },
    isValueChange: function (c, d) {
        c = c || window.frameElement;
        d = d || "input[type!='hidden'][nocheckchange!='1'],textarea[nocheckchange!='1'],.change-item";
        var b = false;
        var a = $(c.contentDocument) || $(c).contents();
        $(d, a).each(function () {
            var e = ($(this).is("input") || $(this).is("textarea")) ? $(this).val() : $(this).text();
            if ($(this).attr("checkChange") === "checkChange" && $(this).attr("srcValue") !== e) {
                b = true;
                return
            }
        });
        return b
    },
    initChangeInput: function (b, a) {
        b = b || window.frameElement;
        a = a || "input[type!='hidden'][nocheckchange!='1'],textarea[nocheckchange!='1'],.change-item";
        $(a, $(b.contentDocument)).each(function () {
            $(this).attr("checkChange", "checkChange");
            $(this).attr("srcValue", $(this).val())
        })
    }
};
$(document).ready(function () {
    MegiTab.init();
    $(window).resize(function () {
        MegiTab.setTabItemWidth()
    })
});
(function () {
    var i = "m-tip-top-div";
    var b = "m-tip-arrow-up";
    var e = "m-tip-arrow-bg";
    var a = "scrollToHide";
    var f = "tip-options";
    var c = "current";
    var h = "m-sub-nav-container";
    var d = "iframe-top-bg";
    var g = (function () {
        var k = function () {
            var n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            for (var l = 0, m = ""; l < 10; l++) {
                m += n.charAt(Math.floor(Math.random() * 62))
            }
            return m
        };
        var j = function (n, o) {
            var m = "";
            var l = this;
            o = o || $(n).attr(f);
            this.init = function () {
                var x = o.target;
                var s = o.trigger || "click";
                var w = o.trigger == "mouseover" ? "mouseleave" : null;
                var v = o.parent || "body";
                if ($(v).hasClass(i) && $(v).find(x).length > 0) {
                    l.$div = $(v)
                }
                if (!l.$div) {
                    var r = o.width || "300";
                    var u = k();
                    $(n).attr("tipId", u);
                    var t = "<div id='" + u + "' class='" + i + "' style='width:" + r + "px; " + (o.height ? ("height:" + o.height + "px;") : "") + "'>";
                    if (!o.hideArrow) {
                        var q = "<span class='" + e + "'></span>";
                        t += q
                    }
                    var p = "<span class='" + b + "'></span>";
                    t += p;
                    t += "</div>";
                    l.$div = $(t);
                    l.$div.appendTo(v);
                    $(x).appendTo(l.$div).show()
                }
                l.event(s, w)
            };
            this.showBackground = function () {
                var q = $("." + d);
                var p = $(".m-main");
                q.length > 0 && p.length > 0 && q.show().css({
                    width: p.outerWidth(),
                    height: p.outerHeight(),
                    left: p.offset().left,
                    top: p.offset().top
                });
                return true
            };
            this.hideBackground = function () {
                var p = $("." + d);
                p.hide();
                return true
            };
            this.showCallback = function (p) {
                l.$div.is(":visible") && l.showBackground() && o.callback && $.isFunction(o.callback) && o.callback(p, n, l.$div)
            };
            this.hideCallback = function (p) {
                l.$div.is(":hidden") && l.hideBackground() && o.closeCallback && $.isFunction(o.closeCallback) && o.closeCallback(p, n, l.$div)
            };
            this.event = function (r, q) {
                var t = "current";
                var s = "m-sub-nav-container";
                var p = "iframe-top-bg";
                $(n).off(r + ".tip").on(r + ".tip", function (u) {
                    $("." + i).not(l.$div).hide();
                    $("." + i).data(a, false);
                    var v = function () {
                        l.showCallback(u);
                        l.hideCallback(u)
                    };
                    r == "contextmenu" ? l.$div.fadeIn("normal", v) : l.$div.toggle("linear", v);
                    if (u.stopPropagation) {
                        u.stopPropagation()
                    } else {
                        if (window.event) {
                            window.event.cancelBubble = true
                        }
                    }
                    l.locate("", r, u);
                    return false
                });
                $(document).off("click.tip").on("click.tip", function (u) {
                    if (l.checkStopEvent(u)) {
                        return false
                    }
                    var v = $.browser.msie ? u.srcElement : u.target;
                    $("." + i).hide();
                    $("." + s).hide();
                    $(".m-nav").find("li").removeClass("current");
                    l.$div.data(a, false);
                    l.hideCallback(u)
                });
                $("." + i).off("click.tip").on("click.tip", function (u) {
                    if (u && u.stopPropagation) {
                        u.stopPropagation()
                    } else {
                        window.event.cancelBubble = true
                    }
                });
                $(top).off("click.tip").on("click.tip", function (u) {
                    $("." + i).hide();
                    l.hideCallback(u);
                    l.$div.data(a, false)
                });
                $(mainScroll).on("scroll.tip", function () {
                    l.locate($(this).scrollTop())
                });
                if (q) {
                    $(n).off(q + ".tip").on(q + ".tip", function (u) {
                        $("." + i).hide();
                        l.hideCallback(u);
                        l.$div.data(a, false)
                    })
                }
            };
            this.checkStopEvent = function (p) {
                var q = $(p.target || p.srcElement);
                if (q && (q.parent("." + i).length > 0 || q.hasClass(i) || q.parents(".combo-p").length > 0)) {
                    if (p && p.stopPropagation) {
                        p.stopPropagation()
                    } else {
                        window.event.cancelBubble = true
                    }
                    return true
                }
                return false
            };
            this.locate = function (u, r, x) {
                var v = $(n).offset();
                var t = 0,
                    w = 0,
                    z = 0;
                t = (v.left - o.width * 0.686);
                w = (v.top + $(n).height() + 20);
                var q = $(n).width() / 2;
                z = o.width * 0.686 - 10 + q;
                if (r == "contextmenu" && x) {
                    var y = x ? (x.clientX + document.body.scrollLeft - document.body.clientLeft) : 0;
                    var p = x ? (x.clientY + document.body.scrollTop - document.body.clientTop) : 0;
                    t = y - o.width * 0.686;
                    w = p + 10;
                    z = o.width * 0.686 - 10
                }
                var s = t < 10 ? 10 : t;
                if ((s + o.width + 10) > $("body").outerWidth()) {
                    s = $("body").outerWidth() - o.width - 10
                }
                z = z + (t - s);
                l.$div.css({
                    left: o.left + s + "px",
                    top: o.top + w + "px"
                });
                z = z > o.width * 0.8 ? o.width * 0.8 : z;
                $("." + b + ",." + e, l.$div).css({
                    left: o.left + z + "px"
                });
                if (u || u === 0) {
                    if (u > v.top && l.$div.is(":visible")) {
                        l.$div.hide();
                        l.$div.data(a, true)
                    } else {
                        if (l.$div.data(a) === true) {
                            l.$div.show()
                        }
                    }
                }
            }
        };
        return j
    })();
    $.fn.mTip = function (j) {
        j.top = j.top || 0;
        j.left = j.left || 0;
        return new g(this, j).init()
    }
})();
(function () {
    var a = (function () {
        var b = function (d, e, h) {
            var c = "mtitle",
                i = "titleTarget",
                j = "m-title-tip",
                g = "m-title-warning";
            var f = this;
            h = h ? 0 : h;
            e = e || mText.decode($(d).attr(c)) || $(d).data(c);
            e = e ? (e.indexOf("<") != 0 ? mText.encode(e) : e) : "";
            e = e.replace(/\\n/gi, "<br>");
            var k = h == 1 ? g : j;
            this.init = function () {
                var l = $(d).data(i);
                l && l.remove();
                $(d).data(i, null);
                var m = $("<span class='m-title-icon'>&nbsp;</span>").insertAfter(d).addClass(k).css({
                    top: (+$(d).parent().css("line-height").replace("px", "") - 15) / 2
                });
                $(d).data(i, m);
                var n = $("<div class='m-title-content'>" + e + "</div>").appendTo("body");
                $(m).mTip({
                    trigger: "mouseover",
                    target: n,
                    width: 300
                })
            };
            this.destory = function () {
                var l = $(d).data(i);
                l && l.remove()
            }
        };
        return b
    })();
    window.mTitle = a;
    $.fn.mTitle = function (b) {
        if ($(this).length === 0) {
            return
        }
        if (b === "destory") {
            return new a(this).destory()
        }
        new a(this, b).init()
    }
})();
$(document).ready(function () {
    var e = $("body").mGetEasyUIControls();
    for (var f = 0; f < e.length; f++) {
        var g = e[f];
        for (var b = 0; b < g.controls.length; b++) {
            var a = g.type.createInstance(g.controls[b]);
            if (a.setTabIndex != undefined) {
                a.setTabIndex()
            }
        }
    }
    var c = $("input:visible");
    var d = 9900;
    c.each(function () {
        if ($(this).attr("tabIndex") == undefined) {
            $(this).attr("tabIndex", d);
            d += 1
        }
    });
    c.sort(function (h, i) {
        var k = Number($(h).attr("tabIndex"));
        var j = Number($(i).attr("tabIndex"));
        return k > j
    });
    c.each(function (i) {
        try {
            var h = $(this).attr("tabIndex");
            if (h == undefined) {
                $(this).attr("tabIndex", i)
            }
            $(this).on("keydown", function (k) {
                if (k.which == 9) {
                    c.eq($(this).attr("tabIndex") + 1).focus()
                }
                return true
            });
            return true
        } catch (j) {
            return true
        }
    })
});
(function (c) {
    var a;
    var b;
    c.fn.extend({
        tabsExtend: function (e) {
            var d = c(this).find("li");
            d.click(function () {
                d.removeClass("current");
                c(this).closest("li").addClass("current");
                var h = c(".m-extend-tabs-panel .tab-content");
                var g = d.index(c(this));
                var f = location.href;
                if (f.lastIndexOf("#") != -1) {
                    f = f.split("#")[0]
                }
                if (h.length == d.length) {
                    h.hide();
                    c(h.get(g)).show()
                }
                if (e.onSelect != undefined) {
                    e.onSelect(g)
                }
            });
            d.mouseover(function () {
                d.removeClass("over");
                c(this).closest("li").addClass("over")
            }).mouseout(function () {
                c(this).closest("li").removeClass("over")
            });
            c(function () {
                var f = e.initTabIndex;
                if (e.setTabIndex != undefined) {
                    f = e.setTabIndex
                }
                if (f != undefined) {
                    c(d.get(f)).trigger("click")
                }
            })
        },
        popup: function (g) {
            var h = g.selector;
            var e = c(this).selector;
            c(this).attr("srcSelector", e).attr("tgtSelector", h);
            c(h).attr("srcSelector", e).attr("tgtSelector", h);

            function d(l) {
                var i = 0;
                var j = 0;
                var k = 0;
                var n = 0;
                var m = l.srcElement;
                do {
                    i += m.offsetLeft - m.scrollLeft;
                    j += m.offsetTop - m.scrollTop
                } while (m = m.offsetParent);
                k = l.pageX - i;
                n = l.pageY - j;
                return {
                    x: k,
                    y: n
                }
            }
            function f(o, k) {
                if (o == undefined || k == undefined) {
                    return
                }
                var q = g.paddingBottom == undefined ? 10 : g.paddingBottom;
                var j = c(o).offset();
                var l = c(o).position();
                var p;
                var m;
                var i = c(o).width();
                var n = c(o).outerHeight();
                if (g.position == undefined) {
                    g.position = "left-bottom"
                }
                if (g.position.indexOf("left") >= 0) {
                    m = j.left;
                    c(k).find(".popup-arrow").css("left", 20)
                } else {
                    m = j.left - 11;
                    c(k).find(".popup-arrow").css("right", i / 2)
                }
                if (g.position.lastIndexOf("bottom") != -1) {
                    p = j.top + n + q
                } else {
                    p = j.top - n - c(k).outerHeight() - q
                }
                if (g.left != undefined) {
                    m = m + g.left
                }
                if (c(k).outerWidth() + m > document.body.offsetWidth - 10) {
                    m = document.body.offsetWidth - 10 - c(k).outerWidth()
                }
                if (c(k).outerHeight() + p > document.body.offsetHeight - 10) {
                    p = document.body.offsetHeight - 10 - c(k).outerHeight()
                }
                c(k).css({
                    position: "fixed",
                    top: p,
                    left: m,
                    "z-index": 88888
                })
            }
            c(document).off("click.popup").on("click.popup", function (m) {
                var i = m.srcElement || m.target;
                e = c(i).attr("srcSelector") || c(i).parent().attr("srcSelector");
                h = c(i).attr("tgtSelector") || c(i).parent().attr("tgtSelector");
                if (e == undefined && a != undefined) {
                    e = c(a).attr("srcSelector");
                    h = c(a).attr("tgtSelector")
                }
                var l = i != undefined && (i.id == c(h).attr("id") || c(i).parents(h).length > 0 || c(i).hasClass("popup-action"));
                var j = i != undefined && (i.id == c(e).attr("id") || c(i).parents(e).length == 1);
                var k = i != undefined && (c(i).hasClass("boxTitle") || c(i).parents(".boxTitle").length > 0) || c(i).parents("#popup_container").length > 0;
                if (j && !c(h).is(":visible")) {
                    if (a != undefined) {
                        c(c(a).attr("tgtSelector")).hide()
                    }
                    a = e;
                    b = g.hideCallBack;
                    f(e, h);
                    c(h).show("fast", function () {
                        if (g.showCallBack != undefined) {
                            g.showCallBack(e)
                        }
                    })
                } else {
                    if (!l && !j && !k) {
                        c(c(a).attr("tgtSelector")).hide();
                        if (g.hideCallBack != undefined) {
                            g.hideCallBack()
                        }
                    }
                }
            });
            c(window).resize(function () {
                f(e, h)
            });
            if (g.scrollObj && g.scrollObj.length > 0) {
                c(g.scrollObj).scroll(function () {
                    f(e, h)
                })
            }
            c("iframe").mouseover(function (i) {
                if (a != undefined) {
                    c(c(a).attr("tgtSelector")).hide();
                    if (b != undefined) {
                        b()
                    }
                }
                if (i && i.stopPropagation) {
                    i.stopPropagation()
                } else {
                    window.event.cancelBubble = true
                }
            })
        },
        grid: function (f) {
            var e = {
                selector: "",
                position: "left-bottom"
            };
            var d = c.extend(e, f)
        },
        selectAll: function (d) {
            if (c(this).hasClass("combo-text")) {
                c(this).get(0).setSelectionRange(0, c(this).val().length)
            } else {
                c(this).select()
            }
        }
    })
})(jQuery);
$(function () {
    new mSelect(document, true).init()
});
window.mDialog = $.mDialog = {};
$.mDialog.show = Megi.dialog = function (b) {
    window.dialog = window.mDialog || {};
    var c = $("input[name='hiddenToken']");
    var f = "";
    if (c.length > 0) {
        f = c.attr("pageid");
        if (window.dialog[f] === true) {
            return
        }
        window.dialog[f] = true
    }
    var e = new BrowserTabSwitch();
    b.mTitle = !b.mTitle ? "" : mText.encode(b.mTitle);
    var a = {};
    if (b.href) {
        b.href = e.intercept(b.href);
        a.mContent = "iframe:" + Megi.getVersionUrl(b.href);
        a.mWidth = b.width;
        a.mHeight = b.height;
        a.mTitle = mText.encode(b.title);
        a.mShowbg = b.modal;
        a.mDrag = "mBoxTitle";
        a.mOpenCallback = b.openCallback;
        a.mCloseCallback = b.closeCallback
    } else {
        if (b.mContent != undefined && String(b.mContent).indexOf("iframe:") > -1) {
            b.mContent = Megi.getVersionUrl(b.mContent);
            b.mContent = e.intercept(b.mContent)
        }
        a = b
    }
    b.document = $(document);
    var d = top.window == window ? window : $.mTab.getCurrentIframe()[0].contentWindow;
    if (b.mNoAuth) {
        window.mFilter.doFilter("track", [a.mContent, a.mPostData]);
        window.$.XYTipsWindow(a);
        if (!!f) {
            window.dialog[f] = false
        }
    } else {
        top.accessRequest(function () {
            window.mFilter.doFilter("track", [a.mContent, a.mPostData]);
            window.$.XYTipsWindow(a);
            if (!!f) {
                window.dialog[f] = false
            }
        })
    }
};
$.mDialog.setParam = function (a, b) {
    if (arguments.length == 1) {
        b = a;
        a = 0
    }
    var c = $(".XYTipsWindow").length > 0 ? $(".XYTipsWindow") : $(".XYTipsWindow", window.parent.document);
    a = a || 0;
    if (b) {
        if (typeof b == "object") {
            b = JSON.stringify(b)
        }
        c.attr("param_" + a, b)
    }
};
$.mDialog.setCallbackIndex = function (b) {
    var a = $(".XYTipsWindow").length > 0 ? $(".XYTipsWindow") : $(".XYTipsWindow", window.parent.document);
    a.attr("index", b)
};
$.mDialog.close = Megi.closeDialog = function (b, c) {
    if (arguments.length == 1) {
        c = b;
        b = 0
    }
    var d = $(".XYTipsWindow").length > 0 ? $(".XYTipsWindow") : $(".XYTipsWindow", window.parent.document);
    if (typeof b == "number" && b >= 0) {
        $.mDialog.setParam(b, c);
        $.mDialog.setCallbackIndex(b)
    }
    var a = $(".XYTipsWindow").length > 0 ? $(".mCloseBox", d).last() : window.parent.$(".mCloseBox").last();
    if (a.length > 0) {
        a.trigger("click")
    } else {
        $(".XYTipsWindow").length > 0 ? $.XYTipsWindow.closeBox() : window.parent.$.XYTipsWindow.closeBox()
    }
};
$.mDialog.callback = function () {
    $(".XYTipsWindow").length > 0 ? $.XYTipsWindow.callback() : window.parent.$.XYTipsWindow.callback()
};
$.mDialog.max = function () {
    var b = $(".XYTipsWindow").length > 0 ? $(".XYTipsWindow") : $(".XYTipsWindow", window.parent.document);
    var a = $(".mMaxBox", b).not(":hidden");
    if (Megi.isSafari() && a.length > 0) {
        var c = document.createEvent("HTMLEvents");
        c.initEvent("click", true, true);
        a[0].dispatchEvent(c)
    } else {
        a.trigger("click");
        if (Megi.isIE()) {
            $(window).trigger("resize")
        }
    }
};
$.mDialog.min = function () {
    var a = $(".XYTipsWindow").length > 0 ? $(".XYTipsWindow") : $(".XYTipsWindow", window.parent.document);
    $(".mMinBox", a).not(":hidden").trigger("click")
};
$.mDialog.alert = $.mAlert = function (f, d, e, a, c) {
    if (d && (typeof d === "object")) {
        d = d.callback
    }
    e = e || 0;
    var b = top.window == window ? window : $.mTab.getCurrentIframe()[0].contentWindow;
    b.hiAlert($.mDialog.handleContent(f, a), d, e, c)
};
$.mDialog.built = function (b, e, d, c) {
    if (e && (typeof e === "object")) {
        e = e.callback
    }
    d = d || 0;
    var a = top.window == window ? window : $.mTab.getCurrentIframe()[0].contentWindow;
    a.hiBuilt(b, e, d, c)
};
$.mDialog.warning = $.mWarning = function (a, c, d, b) {
    $.mDialog.alert(a, c, 1, d, b)
};
$.mDialog.error = $.mError = function (a, c, d, b) {
    $.mDialog.alert(a, c, 2, d, b)
};
$.mDialog.confirm = $.mConfirm = function (i, d, c, b, h, e, g) {
    var f = {};
    if ($.isFunction(d)) {
        f.callback = d;
        f.cancelCallback = c;
        f.noEncode = b;
        f.haveCancel = h;
        f.isL = e
    } else {
        if (arguments.length >= 3) {
            f.callback = c;
            f.cancelCallback = b
        } else {
            f = d || f
        }
    }
    var a = top.window == window ? window : $.mTab.getCurrentIframe()[0].contentWindow;
    window.hiConfirm($.mDialog.handleContent(i, f.noEncode), "", function (j) {
        if (j) {
            f.callback(true)
        } else {
            f.cancelCallback && $.isFunction(f.cancelCallback) && f.cancelCallback(false)
        }
    }, f.haveCancel, f.isL)
};
$.mDialog.handleContent = function (a, b) {
    b = b || (a && a.indexOf("<") == 0);
    return b ? a : mText.encode(a)
};
$.mDialog.message = window.mMsg = $.mMsg = $.overAlert = function (a, b, c) {
    b = b || 3000;
    return top.hiOverAlert($.mDialog.handleContent(a, c), b)
};
window.mTab = $.mTab = {};
$.mTab.add = Megi.addTab = function (d, a, c, b) {
    return top.accessRequest(function () {
        top.MegiTab.add(d, a, c, b)
    })
};
$.mTab.setStable = function (a) {
    return MegiTab.setStable(a)
};
$.mTab.showCurrent = function (a) {
    return top.MegiTab.showCurrent(a)
};
$.mTab.rename = $.mTabTitle = function (a) {
    var b = $.mTab.getCurrentIframe().parent().attr("data-index");
    b && top.$(".m-tab-item[data-index='" + b + "']").text(a)
};
$.mTab.title = function () {
    var a = $.mTab.getCurrentIframe().parent().attr("data-index");
    return top.$(".m-tab-item[data-index='" + a + "']").text()
};
$.mTab.refresh = function (b, a, c, d) {
    if ((parseInt(b) >= 0 && parseInt(b) <= 10) || top.MegiTab.getTabIndex(a, true)) {
        return top.accessRequest(function () {
            window.mFilter.doFilter("track", a);
            top.MegiTab.addOrUpdate(b, a, "", c, "", "", d)
        }, false)
    }
};
$.mTab.setMReady = function (a, c) {
    var b = top.MegiTab.getIframeByUrl(a);
    if (b) {
        b.contentWindow.MReady = c
    }
};
$.mTab.getTabIndex = function (a) {
    return top.MegiTab.getTabIndex(a)
};
$.mTab.getCurrentIframe = function () {
    if (window.frameElement && window.frameElement.parentElement) {
        return $(window.frameElement)
    } else {
        return $("iframe", top.$(".m-tab-content:visible"))
    }
};
$.mTab.addOrUpdate = function (b, d, f, c, e, a) {
    if (!b) {
        b = top.MegiTab.getTabIndex()
    }
    b = _.urlDecode(b);
    return top.accessRequest(function () {
        window.mFilter.doFilter("track", d);
        top.MegiTab.addOrUpdate(b, d, f, c, e, a)
    })
};
$.mTab.remove = $.mTabDelete = function (a) {
    return top.MegiTab.removeTab(a)
};
$.fn.mHtml = function (b) {
    if (b == undefined) {
        var a = $(this).html();
        return !!a ? a.replace(/<br>/gi, "\n") : a
    }
    if (b && typeof b == "string" && b.length > 0) {
        b = b.replace(/\n/gi, "<br>")
    }
    return $(this).html(b)
};
$.fn.mPopup = function (a) {
    a.selector = a.selector ? a.selector : $(this);
    Megi.popup(a)
};
$.fn.mLocalCyTooltip = function (b, a) {
    $(this).tooltip({
        position: "top",
        content: '<span class="m-tooltip-currecy">' + Megi.Math.toMoneyFormat(Math.abs(b), 2) + ' <span class="cy">' + a + "</span></span>",
        onShow: function () {
            $(this).tooltip("tip").css({
                backgroundColor: "#fff",
                borderColor: "#666"
            })
        }
    })
};
if (typeof (mText) != "undefined") {
    mText.getObject = function (a) {
        var b = $(a);
        return b ? mText.parseJson(b[0].value) : {}
    }
};
(function (w) {
    var mUtil = (function () {
        var mUtil = function () { };
        return mUtil
    })();
    w.mUtil = mUtil;
    mUtil.ChangeLang = function (lang, type, url, uncheckToken) {
        url = url || "/Framework/ChangeLang";
        var changLangFunc = function () {
            var tabSwitch = new BrowserTabSwitch();
            $.ajax({
                type: "POST",
                url: url,
                data: {
                    langId: lang
                },
                success: function (msg) {
                    (type == 0 || type == 3) && $("#loginBox").unmask();
                    var olderUrl = top.window.location.href;
                    olderUrl = olderUrl.replace(eval("/#/g"), "");
                    var olderLangId = tabSwitch.getBrowserTabLang();
                    tabSwitch.setBrowserTabLang(lang);
                    var newUrl = olderUrl.replace(eval("/" + olderLangId + "/g"), lang);
                    window.mFilter.doFilter('track', ['ChangeLanguage', { lang: lang }]);
                    if (uncheckToken) {
                        window.mWindow.reload(newUrl, true)
                    } else {
                        msg && window.mWindow.reload(newUrl)
                    }
                }
            })
        };
        if (type == 0 || type == 3) {
            $("#loginBox").mask(HtmlLang.Write(LangModule.Common, "waitChanglang", "switching..."));
            changLangFunc()
        } else {
            var title = HtmlLang.Write(LangModule.Common, "AreYouSureToChangeLang", "切换语言后页面将会刷新，请确认所有数据已保存，您是否确认要切换语言?");
            window.onbeforeunload = null;
            $.mDialog.confirm(title, function () {
                changLangFunc()
            })
        }
    };
    mUtil.GetOrgUrl = function (progress) {
        switch (progress) {
            case 1:
                return "/BD/Setup/OrgSetting";
            case 2:
                return "/BD/Setup/FinancialSetting";
            case 3:
                return "/BD/Setup/TaxRateSetting";
            case 4:
                return "/BD/Setup/Finish";
            case 5:
                return "/";
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
                return "/";
            default:
                return "/BD/Setup/OrgSetting"
        }
    }
})(window);
window.mIV = $.mIV = {};
$.mIV.getTitle = function (a, b) {
    if (b == null || b == "null" || b == "") {
        return a
    }
    return a + ":" + b
};
(function () {
    var a = (function () {
        var b = function (o, l) {
            var f = this;
            var m = [];
            var g;
            var d = ".m-resize-mark";
            var n = ".m-header-resizable";
            var e = 33;
            var k = l.tablePadding || 0;
            var h = false;
            var j = l.forceFit ? true : false;
            var c = l.resizeTable;
            var i = "th";
            this.initColDragEvent = function () {
                var p = $("th:visible", o);
                if (!p || p.length == 0) {
                    p = $("tr:visible", o).first().find("td:visible");
                    i = "td"
                }
                $(n, p).remove();
                $(p).each(function (q) {
                    $(this).append("<span class='" + n.trimStart(".") + "'>&nbsp;</span>")
                });
                g = $(d);
                if (g.length == 0) {
                    $('<div class="' + d.trimStart(".") + '" style="display: none;">&nbsp;</div>').appendTo($("body"))
                }
                $(n, o).off("mousedown").on("mousedown", function (r) {
                    f.initDragParam();
                    var q = $(r.target).closest(i + ">span" + n);
                    if (q.length !== 1) {
                        return
                    }
                    var s = q.parent();
                    var t = [
                        [s.position().left + s.outerWidth()]
                    ];
                    t[0] -= $(o).scrollLeft();
                    t.push($(o).position().top);
                    t.push($(o).height());
                    f.colDragStart(f.getThIndex(s), r, t)
                });
                $(o).off("mousemove.resize").on("mousemove.resize", function (q) {
                    if (h) {
                        f.initDragParam();
                        f.colDragMove(q);
                        return false
                    }
                    return true
                });
                $(document).off("mouseup.resize", d).on("mouseup.resize", d, function (q) {
                    if (h) {
                        f.colDragEnd(q);
                        return false
                    }
                })
            };
            this.colDragStart = function (p, q, r) {
                h = {
                    idx: p,
                    startX: q.clientX,
                    sOL: q.clientX
                };
                $(o)[0].style.cursor = "col-resize";
                g.css({
                    display: "block",
                    left: (q.clientX) + k + "px",
                    top: r[1] + "px",
                    height: r[2] + "px"
                });
                document.onselectstart = function () {
                    return false
                }
            };
            this.colDragMove = function (u) {
                if (h) {
                    var t = "ltr";
                    var r = u.clientX - h.startX,
                        p = m[h.idx],
                        v = t === "ltr" ? p.width + r : p.width - r,
                        s, w;
                    var q = $(o).width();
                    if (v > e) {
                        g.css({
                            left: (h.sOL + r) + k + "px"
                        });
                        if (j === true) {
                            s = m[h.idx];
                            w = t === "ltr" ? s.width - r : s.width + r;
                            if (w > e) {
                                p.newWidth = v;
                                s.newWidth = w
                            }
                        } else {
                            p.newWidth = v
                        }
                    }
                }
            };
            this.getThIndex = function (r) {
                var q = 0;
                for (var p = 0; p < m.length; p++) {
                    if ($(m[p].el).is(":visible")) {
                        if (r.attr("rIndex") == m[p].rIndex) {
                            return q
                        }
                        q++
                    }
                }
                return q
            };
            this.getRandomId = function () {
                var s = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
                for (var p = 0, q = ""; p < 10; p++) {
                    q += s.charAt(Math.floor(Math.random() * 62))
                }
                return q
            };
            this.colDragEnd = function () {
                $(o)[0].style.cursor = "default";
                if (h) {
                    var q = h.idx,
                        p = m[q].newWidth || m[q].width;
                    p = parseInt(p, 10);
                    h = false;
                    g.css("display", "none");
                    m[q].width = p;
                    m[q].el.style.width = p + "px";
                    if (j === true) {
                        p = m[q].newWidth || m[q].width;
                        m[q].width = p;
                        m[q].el.style.width = p + "px"
                    }
                }
                g = null;
                document.onselectstart = function () {
                    return true
                };
                userDraged = true;
                $.isFunction(c) ? c() : f.resizeTable()
            };
            this.resizeTable = function () {
                $("td:visible", o).each(function () {
                    var t = [];
                    var u = $("input:visible:not([type='checkbox']),textarea:visible", $(this)).each(function (x) {
                        t.push(this)
                    });
                    var w = $(this).mGetEasyUIControls();
                    for (var p = 0; p < w.length; p++) {
                        var q = w[p];
                        for (var r = 0; r < q.controls.length; r++) {
                            var v = q.type.createInstance(q.controls[r]);
                            v.resize($(this).innerWidth());
                            t = t.removeItem(v.getInput()[0])
                        }
                    }
                    var s = $(this);
                    for (var p = 0; p < t.length; p++) {
                        $(t[p]).width(s.innerWidth())
                    }
                })
            };
            this.initDragParam = function () {
                m = [];
                var p = $("th:visible", o);
                if (!p || p.length == 0) {
                    p = $("tr:visible", o).first().find("td:visible")
                }
                $(p).each(function () {
                    var q = f.getRandomId();
                    m.push({
                        el: this,
                        width: $(this).width(),
                        rIndex: q
                    });
                    $(this).attr("rIndex", q)
                });
                g = $(d)
            };
            this.hasThTag = function (p) {
                var q = $("th:visible", p);
                if (!q || q.length == 0) {
                    return false
                }
                return true
            };
            this.init = function () {
                f.initColDragEvent()
            }
        };
        return b
    })();
    $.fn.mTableResize = function (b) {
        b = b || {};
        return new a($(this), b).init()
    }
})();
$(function () {
    $(".m-resize-table").each(function () {
        $(this).mTableResize({
            forceFit: false
        })
    })
});
(function (b) {
    var a = (function () {
        var c = function (f, d) {
            var e = this;
            this.init = function () {
                d = d || ($(f).attr("target") ? $($(f).attr("target")) : (f));
                $(f).off("mousewheel").on("mousewheel", function (i, h, j, g) {
                    $(d).scrollTop($(d).scrollTop() - h * i.deltaFactor)
                })
            }
        };
        return c
    })();
    b.mScroll = a;
    $.fn.mScroll = function (c) {
        new a(this, c).init()
    }
})(window);
$(function () {
    var a = $(".m-scroll-div");
    a.each(function () {
        new mScroll(this).init()
    })
});
(function () {
    var mLoginBox = (function () {
        var _loginTitle = ".login-title";
        var mLoginBox = function (email, orgid, type, callback) {
            var that = this;
            this.loginComplete = function (msg) {
                $(".m-login-box").unmask();
                if (msg.data === 1) {
                    top.closeLoginDialog();
                    if (msg.bti) {
                        var tabSwitch = new BrowserTabSwitch();
                        var topOlderBti = tabSwitch.getBrowserTabIndex();
                        tabSwitch.setBrowserTabIndex(msg.bti);
                        var olderUrl = top.window.location.href;
                        var newUrl = olderUrl.replace(eval("/" + topOlderBti + "/g"), msg.bti);
                        if (msg.lang) {
                            var olderLangId = tabSwitch.getBrowserTabLang();
                            tabSwitch.setBrowserTabLang(msg.lang);
                            newUrl = newUrl.replace(eval("/" + olderLangId + "/g"), msg.lang)
                        }
                        if (!top.window.history.pushState) {
                            top.location.href = newUrl
                        } else {
                            top.window.history.pushState("", "", newUrl)
                        }
                    }
                    if (that.isRefrshPage(msg) && msg.setupProgress && msg.setupUrl) {
                        top.window.location.href = msg.setupUrl
                    }
                    $(".password-text,.password-password").val("");
                    for (var i = 0; i < top.loginCallback.length; i++) {
                        var func = top.loginCallback[i];
                        $.isFunction(func) && func()
                    }
                    top.loginCallback = []
                } else {
                    $("#errorMessage").show();
                    $(".password-text,.password-password").addClass("m-login-error-border");
                    $("#password").val("")
                }
            };
            this.GetSetupPageFrame = function () {
                var regFrame = null;
                var setupUrlPrefix = "/BD/Setup";
                var tabs = $(".m-tab-content");
                if (tabs.length == 0) {
                    return regFrame
                }
                for (var i = 0; i < tabs.length; i++) {
                    var dataUrl = $(tabs[i]).attr("data-url");
                    if (!!dataUrl) {
                        dataUrl = dataUrl.toLowerCase();
                        if (dataUrl.indexOf(setupUrlPrefix.toLocaleLowerCase()) > -1) {
                            regFrame = $(tabs[i]).find("iframe");
                            break
                        }
                    }
                }
                return $(regFrame)[0]
            }, this.isRefrshPage = function (msg) {
                var _this = this;
                var regFrame = _this.GetSetupPageFrame();
                if (!regFrame) {
                    return false
                }
                var orgid = top.$("#aOrgList").attr("orgid");
                if (orgid || msg.isDeletedOrgID) {
                    return true
                } else {
                    return false
                }
            }, this.setPasswordClass = function (password) {
                if (!password || password.length < 8 || password.length > 28) {
                    $(".password-text,.password-password").addClass("m-login-error-border");
                    return false
                } else {
                    $(".password-text,.password-password").removeClass("m-login-error-border")
                }
                return true
            };
            this.login = function () {
                var password = $("#password").val();
                if (that.setPasswordClass(password)) {
                    var tabSwitch = new BrowserTabSwitch();
                    $(".m-login-box").mask(HtmlLang.Write(LangModule.Common, "Login", "Login..."));
                    var orgId = top.$("#aOrgList").attr("orgid") || "";
                    var currentTabLang = tabSwitch.getBrowserTabLang();
                    var topUrl = top.window.location.href;
                    if (!currentTabLang) {
                        currentTabLang = Megi.getQueryString("lang")
                    }
                    var localeID = currentTabLang ? currentTabLang : $.cookie(MLocaleID);
                    $.mAjax.Post(loginRequestUrl, {
                        _pmp: password,
                        _eme: email,
                        _omo: orgid,
                        _lml: localeID
                    }, that.loginComplete)
                }
            };
            this.init = function () {
                top.loginCallback.push(callback);
                var userName = top.getUserInfo();
                var title = "";
                title = (type === 3) ? (userName + ", " + HtmlLang.Write(LangModule.Common, "forcetorelogin", "your account Logined in other device, please login again!")) : (userName + ", " + HtmlLang.Write(LangModule.Common, "sessionexpired", "session expired, please login again!"));
                top.$(".m-login-message").text(title);
                $("#errorMessage").hide();
                var t = (($(window).height() / 2) - ($(".m-login-box").outerHeight() / 2));
                var l = (($(window).width() / 2) - ($(".m-login-box").outerWidth() / 2));
                $(".m-login-box").css({
                    left: l,
                    top: t
                });
                $.removeCookie(MAccessTokenCookie, {
                    domain: cookieDomain
                });
                window.focusSwitch(".password-text", ".password-password");
                $("#login_popup_ok").off("click").on("click", that.login);
                $("#login_popup_cancel").off("click").on("click", function () {
                    window.goLoginState()
                });
                $("#login_popup_ok,#password").off("keyup").on("keyup", function (event) {
                    if (event.keyCode == 13) {
                        that.login()
                    }
                })
            }
        };
        return mLoginBox
    })();
    window.mLoginBox = mLoginBox
})();
var accessRequestUrl = "/FW/FWHome/CheckToken?r=" + Math.random();
var loginRequestUrl = "/FW/FWHome/LoginBoxSignIn";
var MAccessTokenCookie = "MAccessToken";
var MUserEmailCookie = "MUserEmail";
var MLocaleID = "MLocaleID";
var cookieDomain = ".megi.local";
window.showLoginDialog = function (c, d) {
    var b = top.$("#hideUserEamil").val();
    var e = b ? b : $.cookie(MUserEmailCookie);
    var a = $("#aOrgList").attr("orgid") || "";
    top.$(".m-login-box-home").show();
    new mLoginBox(e, a, c, d).init()
};
window.handleLoginState = function (b, a) {
    if (b === 0) {
        $.isFunction(a) && a()
    } else {
        if (b == 2) {
            window.goLoginState()
        } else {
            if (b == 1 || b == 3) {
                window.showLoginDialog(b, a)
            } else {
                if (b == 4) {
                    window.goMyState()
                } else {
                    if (b == 5) {
                        window.goTopRefresh()
                    }
                }
            }
        }
    }
};
window.closeLoginDialog = function () {
    top.$(".m-login-box-home").hide()
};
window.accessRequest = function (b, d) {
    var f = top.$("#hideUserEamil").val();
    var a = f ? f : $.cookie(MUserEmailCookie);
    var e = $.cookie(MAccessTokenCookie);
    var g = new BrowserTabSwitch().getBrowserTabLang();
    var g = g ? g : $.cookie(MLocaleID);
    var c = $("#aOrgList").attr("orgid") || "";
    $.mAjax.Post(accessRequestUrl, {
        _tmt: e,
        _eme: a,
        _omo: c,
        _lml: g
    }, function (h) {
        var i = h.type;
        window.handleLoginState(i, b)
    }, "", false, d)
};
window.goLoginState = function () {
    top.onbeforeunload = null;
    top.location = top.LoginServer
};
window.goMyState = function () {
    top.onbeforeunload = null;
    $.mDialog.warning(HtmlLang.Write(LangModule.Common, "YourOrganisationIsExpired", "您的组织已经过期，请使用新的组织或者将此组织延期!"), function () {
        top.location = top.MyServer + "?RedirectUrl=" + top.location
    })
};
window.getUserInfo = function () {
    return top.$(".m-user-content>p").text()
};
window.goTopRefresh = function () {
    top.onbeforeunload = null;
    $.mDialog.warning(HtmlLang.Write(LangModule.Common, "LanguageOfMegiIsChangedUnexpected", "美记系统的语言被意外切换了，您需要刷新整个系统!"), function () {
        top.mWindow.reload()
    })
};
window.mRate = $.mRate = {};
mRate.getRate = function (b, a, c) {
    return 0
};
(function () {
    var a = (function () {
        var b = function () { };
        return b
    })();
    $.extend(a, {
        Color2RGB: function (c) {
            var d = parseInt(c.substr(1, 2), 16);
            var f = parseInt(c.substr(3, 2), 16);
            var e = parseInt(c.substr(5, 2), 16);
            return new Array(d, f, e)
        },
        RGB2Color: function (f) {
            var d = "#";
            for (var b = 0; b < 3; b++) {
                var e = Math.round(f[b]).toString(16);
                d += (e.length == 1) ? ("0" + e) : e
            }
            return d.toUpperCase()
        },
        Gradient: function (g, e, b) {
            var h = [];
            var g = a.Color2RGB(g);
            var e = a.Color2RGB(e);
            for (var c = 0; c <= b; c++) {
                var f = [];
                for (var d = 0; d < 3; d++) {
                    f[d] = g[d] + (e[d] - g[d]) / b * c
                }
                h.push(a.RGB2Color(f))
            }
            return h
        }
    });
    window.mColor = $.mColor = a
})();
$(function () {
    $("body").mCancelValidateClass()
});
var FWInner = {
    getMainHeight: function () {
        var a = $(window).outerHeight() - $(".m-header").height();
        if (a < 320) {
            return 320
        }
        return a
    },
    initFW: function () {
        parent.$("body").find("iframe").removeClass("m-page-loading");
        var d = $(window.frameElement).parent().attr("data-index") || 0;
        $(".m-tab-item[data-index='" + d + "']", window.parent.$("body")).attr("locked", "0");
        $(".m-tab-item[data-index='" + d + "']", window.parent.$("body")).prev().removeClass("m-img-loading");
        if ($(".m-imain").length > 0) {
            var b = parent.$("body").find(".mBoxContent").find("iframe").height();
            if (b == null || b < 0) {
                b = parent.$("body").find("iframe").height()
            }
            b = (b == null || b < 0) ? FWInner.getMainHeight() : b;
            var e = $(window.parent).height() - ((window.parent.$(".mBoxTitle").length) > 0 ? window.parent.$(".mBoxTitle").outerHeight() : 0);
            b = b > e ? e : b;
            $(".m-imain").attr("nn", b);
            var c = 0;
            var f = 0;
            if ($(".m-toolbar-footer:visible").length > 0) {
                c = $(".m-toolbar-footer:visible").outerHeight()
            }
            if ($(".m-ititle,.m-toolbar").length > 0) {
                f = $(".m-ititle,.m-toolbar").outerHeight()
            }
            var a = b - f - c - ($(".m-imain").outerHeight() - $(".m-imain").height());
            $(".m-imain").css({
                height: a + "px"
            })
        }
    }
};
$(document).ready(function () {
    FWInner.initFW();
    $(window).resize(function () {
        FWInner.initFW()
    })
});
$(document).ready(function () {
    $(".m-feedback-link").css("top", $(window).height() / 2);
    $(window).resize(function () {
        $(".m-feedback-link").css("top", $(window).height() / 2)
    })
});
(function ($) {
    $.fn.megifilterchar = function (options) {
        options = options ? options : {};
        options.filterChar = options.filterChar ? options.filterChar : [];
        options.isOnlyFirst = false;
        var htmlOptions = {};
        if ($(this).data("options")) {
            var temp = "{" + $(this).data("options") + "}";
            htmlOptions = eval("(" + temp + ")")
        }
        if (htmlOptions.filterChar) {
            var array = htmlOptions.filterChar.split(",");
            options.filterChar = $.merge(options.filterChar, array)
        }
        if (htmlOptions.isOnlyFirst) {
            options.isOnlyFirst = true
        }
        if (!options.filterChar || options.filterChar.length <= 0) {
            return
        }
        var selector = $(this);
        $(this).off("keyup afterpaste paste").on("keyup afterpaste paste", function (e) {
            setTimeout(function () {
                keyUpEvent(selector, options, e)
            }, 100)
        })
    };

    function keyUpEvent(selector, options, e) {
        var value = $(selector).val();
        var length = value.length;
        var temp = value;
        var cursorIndex = getCursorPos(selector);
        for (var i = length - 1; i >= 0; i--) {
            for (var y = 0; y < options.filterChar.length; y++) {
                if (options.isOnlyFirst && length > 1) {
                    if (value[i] == options.filterChar[y] && value == options.filterChar[y]) {
                        temp = value.substring(0, length - 1);
                        length = length - 1
                    }
                } else {
                    temp = temp.split(options.filterChar[y]).join("")
                }
            }
        }
        var className = $(selector).attr("class");
        if (className.indexOf("m-lang") >= 0) {
            var currentLang = $.cookie("MLocaleID");
            var langData = $(selector).getLangEditorData();
            if (langData && langData.MMultiLanguageField) {
                var langIsSame = false;
                var langValue = langData.MMultiLanguageField[0].MValue;
                for (var x = 1; x < langData.MMultiLanguageField.length; x++) {
                    if (langValue != langData.MMultiLanguageField[x].MValue) {
                        langIsSame = false;
                        break
                    } else {
                        langIsSame = true
                    }
                }
                for (var j = 0; j < langData.MMultiLanguageField.length; j++) {
                    var lang = langData.MMultiLanguageField[j];
                    if (lang.MLocaleID == currentLang || langIsSame == true) {
                        lang.MValue = temp
                    }
                }
            }
            $(selector).initLangEditor(langData)
        } else {
            $(selector).val(temp)
        }
        setCursorPos(selector, cursorIndex)
    }
    function getCursorPos(selector) {
        if (navigator.userAgent.indexOf("MSIE") > -1) {
            var range = document.selection.createRange();
            range.text = "";
            range.setEndPoint("StartToStart", selector.createTextRange());
            return range.text.length
        } else {
            return selector[0].selectionStart
        }
    }
    function setCursorPos(selector, pos) {
        if (navigator.userAgent.indexOf("MSIE") > -1) {
            var range = document.selection.createRange();
            var textRange = selector.createTextRange();
            textRange.moveStart("character", pos);
            textRange.collapse();
            textRange.select()
        } else {
            selector[0].setSelectionRange(pos, pos)
        }
    }
    $(function () {
        $(".easyui-filterchar", "body").megifilterchar()
    })
})(jQuery);